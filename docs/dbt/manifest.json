{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v9.json", "dbt_version": "1.5.5", "generated_at": "2024-08-12T22:34:42.401431Z", "invocation_id": "6bea2c2a-cf36-423b-9d51-5de44e625513", "env": {}, "project_id": "b0ab0254bd58eb87eaee3172ba49fefb", "user_id": "d32a4356-a78d-4b12-afd7-3a607ac732ad", "send_anonymous_usage_stats": true, "adapter_type": "fal"}, "nodes": {"model.exp.dim_analfabetismo_funcional": {"database": "postgres", "schema": "dbt_staging", "name": "dim_analfabetismo_funcional", "resource_type": "model", "package_name": "exp", "path": "analfabetismo_funcional\\dim_analfabetismo_funcional.sql", "original_file_path": "models\\analfabetismo_funcional\\dim_analfabetismo_funcional.sql", "unique_id": "model.exp.dim_analfabetismo_funcional", "fqn": ["exp", "analfabetismo_funcional", "dim_analfabetismo_funcional"], "alias": "dim_analfabetismo_funcional", "checksum": {"name": "sha256", "checksum": "8900f85512184d9f5eb64c5e0ccdf6adf3fa2498258965bdd5c08622a80a51b9"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.0887625, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_analfabetismo_funcional\"", "raw_code": "with base as (\r\n    select\r\n        \"ANO\"\r\n        , \"REGIOES\"\r\n        , \"FAIXA\"\r\n        , \"ANALFABETO\"\r\n        , \"RUDIMENTAR\"\r\n        , \"ELEMENTAR\"\r\n        , \"INTERMEDIARIO\"\r\n        , \"PROFICIENTE\"\r\n        , \"ANALFABETOS_FUNCIONAIS\"\r\n        , \"ALFABETISMO_CONSOLIDADO\"\r\n    from\r\n        {{ source(\"raw\", \"DIM_ANALFABETISMO_FUNCIONAL\") }}\r\n)\r\n\r\n{% set categorias = [\"ANALFABETO\", \"RUDIMENTAR\", \"ELEMENTAR\",\r\n                     \"INTERMEDIARIO\", \"PROFICIENTE\",\r\n                     \"ANALFABETOS_FUNCIONAIS\", \"ALFABETISMO_CONSOLIDADO\"] %}\r\n\r\n{% for categoria in categorias %}\r\n    select\r\n        \"ANO\"\r\n        , \"REGIOES\"\r\n        , \"FAIXA\"\r\n        , '{{ categoria }}' as \"CATEGORIA\"\r\n        , \"{{ categoria }}\" as \"QUANTIDADE\"\r\n    from\r\n        base\r\n\r\n    {% if not loop.last %}\r\n        union all\r\n    {% endif %}\r\n{% endfor %}", "language": "sql", "refs": [], "sources": [["raw", "DIM_ANALFABETISMO_FUNCIONAL"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_ANALFABETISMO_FUNCIONAL"]}, "compiled_path": "target\\compiled\\exp\\models\\analfabetismo_funcional\\dim_analfabetismo_funcional.sql", "compiled": true, "compiled_code": "with base as (\n    select\n        \"ANO\"\n        , \"REGIOES\"\n        , \"FAIXA\"\n        , \"ANALFABETO\"\n        , \"RUDIMENTAR\"\n        , \"ELEMENTAR\"\n        , \"INTERMEDIARIO\"\n        , \"PROFICIENTE\"\n        , \"ANALFABETOS_FUNCIONAIS\"\n        , \"ALFABETISMO_CONSOLIDADO\"\n    from\n        \"postgres\".\"raw\".\"DIM_ANALFABETISMO_FUNCIONAL\"\n)\n\n\n\n\n    select\n        \"ANO\"\n        , \"REGIOES\"\n        , \"FAIXA\"\n        , 'ANALFABETO' as \"CATEGORIA\"\n        , \"ANALFABETO\" as \"QUANTIDADE\"\n    from\n        base\n\n    \n        union all\n    \n\n    select\n        \"ANO\"\n        , \"REGIOES\"\n        , \"FAIXA\"\n        , 'RUDIMENTAR' as \"CATEGORIA\"\n        , \"RUDIMENTAR\" as \"QUANTIDADE\"\n    from\n        base\n\n    \n        union all\n    \n\n    select\n        \"ANO\"\n        , \"REGIOES\"\n        , \"FAIXA\"\n        , 'ELEMENTAR' as \"CATEGORIA\"\n        , \"ELEMENTAR\" as \"QUANTIDADE\"\n    from\n        base\n\n    \n        union all\n    \n\n    select\n        \"ANO\"\n        , \"REGIOES\"\n        , \"FAIXA\"\n        , 'INTERMEDIARIO' as \"CATEGORIA\"\n        , \"INTERMEDIARIO\" as \"QUANTIDADE\"\n    from\n        base\n\n    \n        union all\n    \n\n    select\n        \"ANO\"\n        , \"REGIOES\"\n        , \"FAIXA\"\n        , 'PROFICIENTE' as \"CATEGORIA\"\n        , \"PROFICIENTE\" as \"QUANTIDADE\"\n    from\n        base\n\n    \n        union all\n    \n\n    select\n        \"ANO\"\n        , \"REGIOES\"\n        , \"FAIXA\"\n        , 'ANALFABETOS_FUNCIONAIS' as \"CATEGORIA\"\n        , \"ANALFABETOS_FUNCIONAIS\" as \"QUANTIDADE\"\n    from\n        base\n\n    \n        union all\n    \n\n    select\n        \"ANO\"\n        , \"REGIOES\"\n        , \"FAIXA\"\n        , 'ALFABETISMO_CONSOLIDADO' as \"CATEGORIA\"\n        , \"ALFABETISMO_CONSOLIDADO\" as \"QUANTIDADE\"\n    from\n        base\n\n    \n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_censo_educ_basica_desagregado_matricula_4": {"database": "postgres", "schema": "dbt_staging", "name": "dim_censo_educ_basica_desagregado_matricula_4", "resource_type": "model", "package_name": "exp", "path": "dim_censo_educ_basica_desagregado_matricula_4\\dim_censo_educ_basica_desagregado_matricula_4.sql", "original_file_path": "models\\dim_censo_educ_basica_desagregado_matricula_4\\dim_censo_educ_basica_desagregado_matricula_4.sql", "unique_id": "model.exp.dim_censo_educ_basica_desagregado_matricula_4", "fqn": ["exp", "dim_censo_educ_basica_desagregado_matricula_4", "dim_censo_educ_basica_desagregado_matricula_4"], "alias": "dim_censo_educ_basica_desagregado_matricula_4", "checksum": {"name": "sha256", "checksum": "646d4df9e5a79aa5c9fa32fb056e0047e573783234ef4b1134edbf4b96ea9b8c"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.1052928, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_censo_educ_basica_desagregado_matricula_4\"", "raw_code": "{% set years_t1 = [2014, 2015, 2016, 2017, 2018] %}\r\n{% for year in years_t1 %}\r\nSELECT\r\n    \"ANO\"\r\n    , \"FK_MUNICIPIO_CODIGO\"\r\n    , \"IN_NECESSIDADE_ESPECIAL\"\r\n    , \"IN_ESPECIAL_EXCLUSIVA\"\r\n    , \"TP_ETAPA_ENSINO\"\r\n    , \"TP_TIPO_TURMA\"\r\n    , COUNT(*) AS \"COUNT_MATRICULA\"\r\nFROM (\r\n    SELECT\r\n        \"NU_ANO_CENSO\" as \"ANO\"\r\n        , \"NU_IDADE\"\r\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\r\n        , \"IN_NECESSIDADE_ESPECIAL\"\r\n        , \"IN_ESPECIAL_EXCLUSIVA\"\r\n        , \"TP_ETAPA_ENSINO\"\r\n        , \"TP_TIPO_TURMA\"\r\n    FROM\r\n        {{source(\"raw\", \"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_\" ~ year) }}\r\n    WHERE\r\n        \"IN_NECESSIDADE_ESPECIAL\" = 1\r\n        AND \"NU_IDADE\" >= 4\r\n        AND \"NU_IDADE\" <= 17\r\n        AND \"TP_ETAPA_ENSINO\" IN (\r\n            1, 2, 4, 5, 6, 7, 14, 15, 16, 17, 18, 8, 9, 10, 11, 19, 20, 21, 41,\r\n            25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 68, 65,\r\n            67, 69, 70, 71, 73, 74)\r\n    ) as \"ALL\"\r\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"IN_NECESSIDADE_ESPECIAL\",\r\n         \"IN_ESPECIAL_EXCLUSIVA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_TURMA\"\r\n{% if not loop.last %}\r\nUNION ALL\r\n{% endif %}\r\n{% endfor %}\r\n\r\nUNION ALL\r\n\r\n{% set years_t2 = [2019, 2020] %}\r\n{% for year in years_t2 %}\r\nSELECT\r\n    \"ANO\"\r\n    , \"FK_MUNICIPIO_CODIGO\"\r\n    , \"IN_NECESSIDADE_ESPECIAL\"\r\n    , \"IN_ESPECIAL_EXCLUSIVA\"\r\n    , \"TP_ETAPA_ENSINO\"\r\n    , \"TP_TIPO_TURMA\"\r\n    , COUNT(*) AS \"COUNT_MATRICULA\"\r\nFROM (\r\n    SELECT\r\n        \"NU_ANO_CENSO\" as \"ANO\"\r\n        , \"NU_IDADE\"\r\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\r\n        , \"IN_NECESSIDADE_ESPECIAL\"\r\n        , \"IN_ESPECIAL_EXCLUSIVA\"\r\n        , \"TP_ETAPA_ENSINO\"\r\n        , \"TP_TIPO_ATENDIMENTO_TURMA\" as \"TP_TIPO_TURMA\"\r\n    FROM\r\n        {{source(\"raw\", \"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_\" ~ year) }}\r\n    WHERE\r\n        \"IN_NECESSIDADE_ESPECIAL\" = 1\r\n        AND \"NU_IDADE\" >= 4\r\n        AND \"NU_IDADE\" <= 17\r\n        AND \"TP_ETAPA_ENSINO\" IN (\r\n            1, 2, 4, 5, 6, 7, 14, 15, 16, 17, 18, 8, 9, 10, 11, 19, 20, 21, 41,\r\n            25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 68, 65,\r\n            67, 69, 70, 71, 73, 74)\r\n    ) as \"ALL\"\r\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"IN_NECESSIDADE_ESPECIAL\",\r\n         \"IN_ESPECIAL_EXCLUSIVA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_TURMA\"\r\n{% if not loop.last %}\r\nUNION ALL\r\n{% endif %}\r\n{% endfor %}", "language": "sql", "refs": [], "sources": [["raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2014"], ["raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2015"], ["raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2016"], ["raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2017"], ["raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2018"], ["raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2019"], ["raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2020"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2014", "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2015", "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2016", "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2017", "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2018", "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2019", "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2020"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_censo_educ_basica_desagregado_matricula_4\\dim_censo_educ_basica_desagregado_matricula_4.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    \"ANO\"\n    , \"FK_MUNICIPIO_CODIGO\"\n    , \"IN_NECESSIDADE_ESPECIAL\"\n    , \"IN_ESPECIAL_EXCLUSIVA\"\n    , \"TP_ETAPA_ENSINO\"\n    , \"TP_TIPO_TURMA\"\n    , COUNT(*) AS \"COUNT_MATRICULA\"\nFROM (\n    SELECT\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"NU_IDADE\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , \"IN_NECESSIDADE_ESPECIAL\"\n        , \"IN_ESPECIAL_EXCLUSIVA\"\n        , \"TP_ETAPA_ENSINO\"\n        , \"TP_TIPO_TURMA\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2014\"\n    WHERE\n        \"IN_NECESSIDADE_ESPECIAL\" = 1\n        AND \"NU_IDADE\" >= 4\n        AND \"NU_IDADE\" <= 17\n        AND \"TP_ETAPA_ENSINO\" IN (\n            1, 2, 4, 5, 6, 7, 14, 15, 16, 17, 18, 8, 9, 10, 11, 19, 20, 21, 41,\n            25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 68, 65,\n            67, 69, 70, 71, 73, 74)\n    ) as \"ALL\"\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"IN_NECESSIDADE_ESPECIAL\",\n         \"IN_ESPECIAL_EXCLUSIVA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_TURMA\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\"\n    , \"FK_MUNICIPIO_CODIGO\"\n    , \"IN_NECESSIDADE_ESPECIAL\"\n    , \"IN_ESPECIAL_EXCLUSIVA\"\n    , \"TP_ETAPA_ENSINO\"\n    , \"TP_TIPO_TURMA\"\n    , COUNT(*) AS \"COUNT_MATRICULA\"\nFROM (\n    SELECT\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"NU_IDADE\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , \"IN_NECESSIDADE_ESPECIAL\"\n        , \"IN_ESPECIAL_EXCLUSIVA\"\n        , \"TP_ETAPA_ENSINO\"\n        , \"TP_TIPO_TURMA\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2015\"\n    WHERE\n        \"IN_NECESSIDADE_ESPECIAL\" = 1\n        AND \"NU_IDADE\" >= 4\n        AND \"NU_IDADE\" <= 17\n        AND \"TP_ETAPA_ENSINO\" IN (\n            1, 2, 4, 5, 6, 7, 14, 15, 16, 17, 18, 8, 9, 10, 11, 19, 20, 21, 41,\n            25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 68, 65,\n            67, 69, 70, 71, 73, 74)\n    ) as \"ALL\"\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"IN_NECESSIDADE_ESPECIAL\",\n         \"IN_ESPECIAL_EXCLUSIVA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_TURMA\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\"\n    , \"FK_MUNICIPIO_CODIGO\"\n    , \"IN_NECESSIDADE_ESPECIAL\"\n    , \"IN_ESPECIAL_EXCLUSIVA\"\n    , \"TP_ETAPA_ENSINO\"\n    , \"TP_TIPO_TURMA\"\n    , COUNT(*) AS \"COUNT_MATRICULA\"\nFROM (\n    SELECT\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"NU_IDADE\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , \"IN_NECESSIDADE_ESPECIAL\"\n        , \"IN_ESPECIAL_EXCLUSIVA\"\n        , \"TP_ETAPA_ENSINO\"\n        , \"TP_TIPO_TURMA\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2016\"\n    WHERE\n        \"IN_NECESSIDADE_ESPECIAL\" = 1\n        AND \"NU_IDADE\" >= 4\n        AND \"NU_IDADE\" <= 17\n        AND \"TP_ETAPA_ENSINO\" IN (\n            1, 2, 4, 5, 6, 7, 14, 15, 16, 17, 18, 8, 9, 10, 11, 19, 20, 21, 41,\n            25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 68, 65,\n            67, 69, 70, 71, 73, 74)\n    ) as \"ALL\"\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"IN_NECESSIDADE_ESPECIAL\",\n         \"IN_ESPECIAL_EXCLUSIVA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_TURMA\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\"\n    , \"FK_MUNICIPIO_CODIGO\"\n    , \"IN_NECESSIDADE_ESPECIAL\"\n    , \"IN_ESPECIAL_EXCLUSIVA\"\n    , \"TP_ETAPA_ENSINO\"\n    , \"TP_TIPO_TURMA\"\n    , COUNT(*) AS \"COUNT_MATRICULA\"\nFROM (\n    SELECT\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"NU_IDADE\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , \"IN_NECESSIDADE_ESPECIAL\"\n        , \"IN_ESPECIAL_EXCLUSIVA\"\n        , \"TP_ETAPA_ENSINO\"\n        , \"TP_TIPO_TURMA\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2017\"\n    WHERE\n        \"IN_NECESSIDADE_ESPECIAL\" = 1\n        AND \"NU_IDADE\" >= 4\n        AND \"NU_IDADE\" <= 17\n        AND \"TP_ETAPA_ENSINO\" IN (\n            1, 2, 4, 5, 6, 7, 14, 15, 16, 17, 18, 8, 9, 10, 11, 19, 20, 21, 41,\n            25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 68, 65,\n            67, 69, 70, 71, 73, 74)\n    ) as \"ALL\"\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"IN_NECESSIDADE_ESPECIAL\",\n         \"IN_ESPECIAL_EXCLUSIVA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_TURMA\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\"\n    , \"FK_MUNICIPIO_CODIGO\"\n    , \"IN_NECESSIDADE_ESPECIAL\"\n    , \"IN_ESPECIAL_EXCLUSIVA\"\n    , \"TP_ETAPA_ENSINO\"\n    , \"TP_TIPO_TURMA\"\n    , COUNT(*) AS \"COUNT_MATRICULA\"\nFROM (\n    SELECT\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"NU_IDADE\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , \"IN_NECESSIDADE_ESPECIAL\"\n        , \"IN_ESPECIAL_EXCLUSIVA\"\n        , \"TP_ETAPA_ENSINO\"\n        , \"TP_TIPO_TURMA\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2018\"\n    WHERE\n        \"IN_NECESSIDADE_ESPECIAL\" = 1\n        AND \"NU_IDADE\" >= 4\n        AND \"NU_IDADE\" <= 17\n        AND \"TP_ETAPA_ENSINO\" IN (\n            1, 2, 4, 5, 6, 7, 14, 15, 16, 17, 18, 8, 9, 10, 11, 19, 20, 21, 41,\n            25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 68, 65,\n            67, 69, 70, 71, 73, 74)\n    ) as \"ALL\"\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"IN_NECESSIDADE_ESPECIAL\",\n         \"IN_ESPECIAL_EXCLUSIVA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_TURMA\"\n\n\n\nUNION ALL\n\n\n\nSELECT\n    \"ANO\"\n    , \"FK_MUNICIPIO_CODIGO\"\n    , \"IN_NECESSIDADE_ESPECIAL\"\n    , \"IN_ESPECIAL_EXCLUSIVA\"\n    , \"TP_ETAPA_ENSINO\"\n    , \"TP_TIPO_TURMA\"\n    , COUNT(*) AS \"COUNT_MATRICULA\"\nFROM (\n    SELECT\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"NU_IDADE\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , \"IN_NECESSIDADE_ESPECIAL\"\n        , \"IN_ESPECIAL_EXCLUSIVA\"\n        , \"TP_ETAPA_ENSINO\"\n        , \"TP_TIPO_ATENDIMENTO_TURMA\" as \"TP_TIPO_TURMA\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2019\"\n    WHERE\n        \"IN_NECESSIDADE_ESPECIAL\" = 1\n        AND \"NU_IDADE\" >= 4\n        AND \"NU_IDADE\" <= 17\n        AND \"TP_ETAPA_ENSINO\" IN (\n            1, 2, 4, 5, 6, 7, 14, 15, 16, 17, 18, 8, 9, 10, 11, 19, 20, 21, 41,\n            25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 68, 65,\n            67, 69, 70, 71, 73, 74)\n    ) as \"ALL\"\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"IN_NECESSIDADE_ESPECIAL\",\n         \"IN_ESPECIAL_EXCLUSIVA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_TURMA\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\"\n    , \"FK_MUNICIPIO_CODIGO\"\n    , \"IN_NECESSIDADE_ESPECIAL\"\n    , \"IN_ESPECIAL_EXCLUSIVA\"\n    , \"TP_ETAPA_ENSINO\"\n    , \"TP_TIPO_TURMA\"\n    , COUNT(*) AS \"COUNT_MATRICULA\"\nFROM (\n    SELECT\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"NU_IDADE\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , \"IN_NECESSIDADE_ESPECIAL\"\n        , \"IN_ESPECIAL_EXCLUSIVA\"\n        , \"TP_ETAPA_ENSINO\"\n        , \"TP_TIPO_ATENDIMENTO_TURMA\" as \"TP_TIPO_TURMA\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2020\"\n    WHERE\n        \"IN_NECESSIDADE_ESPECIAL\" = 1\n        AND \"NU_IDADE\" >= 4\n        AND \"NU_IDADE\" <= 17\n        AND \"TP_ETAPA_ENSINO\" IN (\n            1, 2, 4, 5, 6, 7, 14, 15, 16, 17, 18, 8, 9, 10, 11, 19, 20, 21, 41,\n            25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 68, 65,\n            67, 69, 70, 71, 73, 74)\n    ) as \"ALL\"\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"IN_NECESSIDADE_ESPECIAL\",\n         \"IN_ESPECIAL_EXCLUSIVA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_TURMA\"\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_16": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_16", "resource_type": "model", "package_name": "exp", "path": "dim_educ_bas_docentes_16\\dim_educ_bas_docentes_16.sql", "original_file_path": "models\\dim_educ_bas_docentes_16\\dim_educ_bas_docentes_16.sql", "unique_id": "model.exp.dim_educ_bas_docentes_16", "fqn": ["exp", "dim_educ_bas_docentes_16", "dim_educ_bas_docentes_16"], "alias": "dim_educ_bas_docentes_16", "checksum": {"name": "sha256", "checksum": "cbddb715196e66a8f7cfa62f1bfaded439a99566e7e996af259817e11fcd5ebf"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.1148028, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_16\"", "raw_code": "{% set years = [2014, 2015, 2016, 2017, 2018, 2019, 2020] %}\r\n\r\nSELECT *\r\nFROM (\r\n    {% for year in years %}\r\n        SELECT * FROM {{ref(\"dim_educ_bas_docentes_16_\" ~ year) }}\r\n        {% if not loop.last %}\r\n        UNION ALL\r\n    {% endif %}\r\n    {% endfor %}\r\n) as doc", "language": "sql", "refs": [{"name": "dim_educ_bas_docentes_16_2014", "package": null, "version": null}, {"name": "dim_educ_bas_docentes_16_2015", "package": null, "version": null}, {"name": "dim_educ_bas_docentes_16_2016", "package": null, "version": null}, {"name": "dim_educ_bas_docentes_16_2017", "package": null, "version": null}, {"name": "dim_educ_bas_docentes_16_2018", "package": null, "version": null}, {"name": "dim_educ_bas_docentes_16_2019", "package": null, "version": null}, {"name": "dim_educ_bas_docentes_16_2020", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.exp.dim_educ_bas_docentes_16_2014", "model.exp.dim_educ_bas_docentes_16_2015", "model.exp.dim_educ_bas_docentes_16_2016", "model.exp.dim_educ_bas_docentes_16_2017", "model.exp.dim_educ_bas_docentes_16_2018", "model.exp.dim_educ_bas_docentes_16_2019", "model.exp.dim_educ_bas_docentes_16_2020"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_educ_bas_docentes_16\\dim_educ_bas_docentes_16.sql", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM (\n    \n        SELECT * FROM \"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_16_2014\"\n        \n        UNION ALL\n    \n    \n        SELECT * FROM \"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_16_2015\"\n        \n        UNION ALL\n    \n    \n        SELECT * FROM \"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_16_2016\"\n        \n        UNION ALL\n    \n    \n        SELECT * FROM \"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_16_2017\"\n        \n        UNION ALL\n    \n    \n        SELECT * FROM \"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_16_2018\"\n        \n        UNION ALL\n    \n    \n        SELECT * FROM \"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_16_2019\"\n        \n        UNION ALL\n    \n    \n        SELECT * FROM \"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_16_2020\"\n        \n    \n) as doc", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_16_2014": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_16_2014", "resource_type": "model", "package_name": "exp", "path": "dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2014.sql", "original_file_path": "models\\dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2014.sql", "unique_id": "model.exp.dim_educ_bas_docentes_16_2014", "fqn": ["exp", "dim_educ_bas_docentes_16", "views", "dim_educ_bas_docentes_16_2014"], "alias": "dim_educ_bas_docentes_16_2014", "checksum": {"name": "sha256", "checksum": "c01f182496fc572d8623af1d7b15a907849be424f7788cca30f57aa74db37328"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "view"}, "created_at": 1723502084.1218936, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_16_2014\"", "raw_code": "{% set regioes = [\"NORTE\", \"NORDESTE\", \"CO\", \"SUDESTE\", \"SUL\"] %}\r\n\r\n{% for regiao in regioes %}\r\nSELECT\r\n    \"ANO\",\r\n    \"FK_MUNICIPIO_CODIGO\",\r\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\r\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\r\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\r\nFROM\r\n    (SELECT\r\n        CAST(\"ANO_CENSO\" AS INT) AS \"ANO\",\r\n        CAST(\"FK_COD_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\r\n        CAST(\"FK_COD_DOCENTE\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\r\n        CASE\r\n            WHEN\r\n                \"ID_ESPECIALIZACAO\" = 1 OR\r\n                \"ID_MESTRADO\" = 1 OR\r\n                \"ID_DOUTORADO\" = 1\r\n            THEN 1\r\n            ELSE 0\r\n        END AS \"POSSUI_POS\",\r\n        CASE\r\n            WHEN\r\n                \"ID_ESPECIFICO_CRECHE\" = 1 OR\r\n                \"ID_ESPECIFICO_PRE_ESCOLA\" = 1 OR\r\n                \"ID_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\r\n                \"ID_ESPECIFICO_ANOS_FINAIS\" = 1 OR\r\n                \"ID_ESPECIFICO_ENS_MEDIO\" = 1 OR\r\n                \"ID_ESPECIFICO_EJA\" = 1 OR\r\n                \"ID_ESPECIFICO_NEC_ESP\" = 1 OR\r\n                \"ID_ESPECIFICO_ED_INDIGENA\" = 1 OR\r\n                \"ID_ESPECIFICO_CAMPO\" = 1 OR\r\n                \"ID_ESPECIFICO_AMBIENTAL\" = 1 OR\r\n                \"ID_ESPECIFICO_DIR_HUMANOS\" = 1 OR\r\n                \"ID_ESPECIFICO_DIV_SEXUAL\" = 1 OR\r\n                \"ID_ESPECIFICO_DIR_ADOLESC\" = 1 OR\r\n                \"ID_ESPECIFICO_AFRO\" = 1 OR\r\n                \"ID_ESPECIFICO_OUTROS\" = 1\r\n            THEN 1\r\n            ELSE 0\r\n        END AS \"POSSUI_FC\"\r\n    FROM\r\n        {{source(\"raw\", \"DIM_DOCENTES_\" ~ regiao ~ \"_2014\") }}\r\n    ) AS TEMP\r\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n{% if not loop.last %}\r\nUNION ALL\r\n{% endif %}\r\n{% endfor %}", "language": "sql", "refs": [], "sources": [["raw", "DIM_DOCENTES_NORTE_2014"], ["raw", "DIM_DOCENTES_NORDESTE_2014"], ["raw", "DIM_DOCENTES_CO_2014"], ["raw", "DIM_DOCENTES_SUDESTE_2014"], ["raw", "DIM_DOCENTES_SUL_2014"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_DOCENTES_NORTE_2014", "source.exp.raw.DIM_DOCENTES_NORDESTE_2014", "source.exp.raw.DIM_DOCENTES_CO_2014", "source.exp.raw.DIM_DOCENTES_SUDESTE_2014", "source.exp.raw.DIM_DOCENTES_SUL_2014"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2014.sql", "compiled": true, "compiled_code": "\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"FK_COD_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"FK_COD_DOCENTE\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"ID_ESPECIALIZACAO\" = 1 OR\n                \"ID_MESTRADO\" = 1 OR\n                \"ID_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"ID_ESPECIFICO_CRECHE\" = 1 OR\n                \"ID_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"ID_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"ID_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"ID_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"ID_ESPECIFICO_EJA\" = 1 OR\n                \"ID_ESPECIFICO_NEC_ESP\" = 1 OR\n                \"ID_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"ID_ESPECIFICO_CAMPO\" = 1 OR\n                \"ID_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"ID_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"ID_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"ID_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"ID_ESPECIFICO_AFRO\" = 1 OR\n                \"ID_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2014\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"FK_COD_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"FK_COD_DOCENTE\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"ID_ESPECIALIZACAO\" = 1 OR\n                \"ID_MESTRADO\" = 1 OR\n                \"ID_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"ID_ESPECIFICO_CRECHE\" = 1 OR\n                \"ID_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"ID_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"ID_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"ID_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"ID_ESPECIFICO_EJA\" = 1 OR\n                \"ID_ESPECIFICO_NEC_ESP\" = 1 OR\n                \"ID_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"ID_ESPECIFICO_CAMPO\" = 1 OR\n                \"ID_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"ID_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"ID_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"ID_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"ID_ESPECIFICO_AFRO\" = 1 OR\n                \"ID_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2014\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"FK_COD_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"FK_COD_DOCENTE\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"ID_ESPECIALIZACAO\" = 1 OR\n                \"ID_MESTRADO\" = 1 OR\n                \"ID_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"ID_ESPECIFICO_CRECHE\" = 1 OR\n                \"ID_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"ID_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"ID_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"ID_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"ID_ESPECIFICO_EJA\" = 1 OR\n                \"ID_ESPECIFICO_NEC_ESP\" = 1 OR\n                \"ID_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"ID_ESPECIFICO_CAMPO\" = 1 OR\n                \"ID_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"ID_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"ID_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"ID_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"ID_ESPECIFICO_AFRO\" = 1 OR\n                \"ID_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2014\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"FK_COD_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"FK_COD_DOCENTE\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"ID_ESPECIALIZACAO\" = 1 OR\n                \"ID_MESTRADO\" = 1 OR\n                \"ID_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"ID_ESPECIFICO_CRECHE\" = 1 OR\n                \"ID_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"ID_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"ID_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"ID_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"ID_ESPECIFICO_EJA\" = 1 OR\n                \"ID_ESPECIFICO_NEC_ESP\" = 1 OR\n                \"ID_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"ID_ESPECIFICO_CAMPO\" = 1 OR\n                \"ID_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"ID_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"ID_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"ID_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"ID_ESPECIFICO_AFRO\" = 1 OR\n                \"ID_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2014\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"FK_COD_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"FK_COD_DOCENTE\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"ID_ESPECIALIZACAO\" = 1 OR\n                \"ID_MESTRADO\" = 1 OR\n                \"ID_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"ID_ESPECIFICO_CRECHE\" = 1 OR\n                \"ID_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"ID_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"ID_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"ID_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"ID_ESPECIFICO_EJA\" = 1 OR\n                \"ID_ESPECIFICO_NEC_ESP\" = 1 OR\n                \"ID_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"ID_ESPECIFICO_CAMPO\" = 1 OR\n                \"ID_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"ID_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"ID_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"ID_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"ID_ESPECIFICO_AFRO\" = 1 OR\n                \"ID_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2014\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_16_2015": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_16_2015", "resource_type": "model", "package_name": "exp", "path": "dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2015.sql", "original_file_path": "models\\dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2015.sql", "unique_id": "model.exp.dim_educ_bas_docentes_16_2015", "fqn": ["exp", "dim_educ_bas_docentes_16", "views", "dim_educ_bas_docentes_16_2015"], "alias": "dim_educ_bas_docentes_16_2015", "checksum": {"name": "sha256", "checksum": "efd6d0b4d6da133ea330700f2b2c246b8bc759d2d7d1a729163221dce6026fe0"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "view"}, "created_at": 1723502084.1299589, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_16_2015\"", "raw_code": "{% set regioes = [\"NORTE\", \"NORDESTE\", \"CO\", \"SUDESTE\", \"SUL\"] %}\r\n\r\n{% for regiao in regioes %}\r\nSELECT\r\n    \"ANO\",\r\n    \"FK_MUNICIPIO_CODIGO\",\r\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\r\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\r\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\r\nFROM\r\n    (SELECT\r\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\r\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\r\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\r\n        CASE\r\n            WHEN\r\n                \"IN_ESPECIALIZACAO\" = 1 OR\r\n                \"IN_MESTRADO\" = 1 OR\r\n                \"IN_DOUTORADO\" = 1\r\n            THEN 1\r\n            ELSE 0\r\n        END AS \"POSSUI_POS\",\r\n        CASE\r\n            WHEN\r\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\r\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\r\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\r\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\r\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\r\n                \"IN_ESPECIFICO_EJA\" = 1 OR\r\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\r\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\r\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\r\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\r\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\r\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\r\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\r\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\r\n                \"IN_ESPECIFICO_OUTROS\" = 1\r\n            THEN 1\r\n            ELSE 0\r\n        END AS \"POSSUI_FC\"\r\n    FROM\r\n        {{source(\"raw\", \"DIM_DOCENTES_\" ~ regiao ~ \"_2015\") }}\r\n    ) AS TEMP\r\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n{% if not loop.last %}\r\nUNION ALL\r\n{% endif %}\r\n{% endfor %}", "language": "sql", "refs": [], "sources": [["raw", "DIM_DOCENTES_NORTE_2015"], ["raw", "DIM_DOCENTES_NORDESTE_2015"], ["raw", "DIM_DOCENTES_CO_2015"], ["raw", "DIM_DOCENTES_SUDESTE_2015"], ["raw", "DIM_DOCENTES_SUL_2015"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_DOCENTES_NORTE_2015", "source.exp.raw.DIM_DOCENTES_NORDESTE_2015", "source.exp.raw.DIM_DOCENTES_CO_2015", "source.exp.raw.DIM_DOCENTES_SUDESTE_2015", "source.exp.raw.DIM_DOCENTES_SUL_2015"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2015.sql", "compiled": true, "compiled_code": "\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2015\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2015\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2015\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2015\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2015\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_16_2016": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_16_2016", "resource_type": "model", "package_name": "exp", "path": "dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2016.sql", "original_file_path": "models\\dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2016.sql", "unique_id": "model.exp.dim_educ_bas_docentes_16_2016", "fqn": ["exp", "dim_educ_bas_docentes_16", "views", "dim_educ_bas_docentes_16_2016"], "alias": "dim_educ_bas_docentes_16_2016", "checksum": {"name": "sha256", "checksum": "e8ad7503330721822a15d1f53dbb73884542a297352d7f26dee10ac91d7f2583"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "view"}, "created_at": 1723502084.137093, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_16_2016\"", "raw_code": "{% set regioes = [\"NORTE\", \"NORDESTE\", \"CO\", \"SUDESTE\", \"SUL\"] %}\r\n\r\n{% for regiao in regioes %}\r\nSELECT\r\n    \"ANO\",\r\n    \"FK_MUNICIPIO_CODIGO\",\r\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\r\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\r\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\r\nFROM\r\n    (SELECT\r\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\r\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\r\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\r\n        CASE\r\n            WHEN\r\n                \"IN_ESPECIALIZACAO\" = 1 OR\r\n                \"IN_MESTRADO\" = 1 OR\r\n                \"IN_DOUTORADO\" = 1\r\n            THEN 1\r\n            ELSE 0\r\n        END AS \"POSSUI_POS\",\r\n        CASE\r\n            WHEN\r\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\r\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\r\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\r\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\r\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\r\n                \"IN_ESPECIFICO_EJA\" = 1 OR\r\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\r\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\r\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\r\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\r\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\r\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\r\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\r\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\r\n                \"IN_ESPECIFICO_OUTROS\" = 1\r\n            THEN 1\r\n            ELSE 0\r\n        END AS \"POSSUI_FC\"\r\n    FROM\r\n        {{source(\"raw\", \"DIM_DOCENTES_\" ~ regiao ~ \"_2016\") }}\r\n    ) AS TEMP\r\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n{% if not loop.last %}\r\nUNION ALL\r\n{% endif %}\r\n{% endfor %}", "language": "sql", "refs": [], "sources": [["raw", "DIM_DOCENTES_NORTE_2016"], ["raw", "DIM_DOCENTES_NORDESTE_2016"], ["raw", "DIM_DOCENTES_CO_2016"], ["raw", "DIM_DOCENTES_SUDESTE_2016"], ["raw", "DIM_DOCENTES_SUL_2016"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_DOCENTES_NORTE_2016", "source.exp.raw.DIM_DOCENTES_NORDESTE_2016", "source.exp.raw.DIM_DOCENTES_CO_2016", "source.exp.raw.DIM_DOCENTES_SUDESTE_2016", "source.exp.raw.DIM_DOCENTES_SUL_2016"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2016.sql", "compiled": true, "compiled_code": "\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2016\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2016\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2016\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2016\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2016\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_16_2017": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_16_2017", "resource_type": "model", "package_name": "exp", "path": "dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2017.sql", "original_file_path": "models\\dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2017.sql", "unique_id": "model.exp.dim_educ_bas_docentes_16_2017", "fqn": ["exp", "dim_educ_bas_docentes_16", "views", "dim_educ_bas_docentes_16_2017"], "alias": "dim_educ_bas_docentes_16_2017", "checksum": {"name": "sha256", "checksum": "e63301d6470483755fb32bcec69b7b0bf97aff13766b4dd4d1bf11c4201209a3"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "view"}, "created_at": 1723502084.1450932, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_16_2017\"", "raw_code": "{% set regioes = [\"NORTE\", \"NORDESTE\", \"CO\", \"SUDESTE\", \"SUL\"] %}\r\n\r\n{% for regiao in regioes %}\r\nSELECT\r\n    \"ANO\",\r\n    \"FK_MUNICIPIO_CODIGO\",\r\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\r\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\r\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\r\nFROM\r\n    (SELECT\r\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\r\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\r\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\r\n        CASE\r\n            WHEN\r\n                \"IN_ESPECIALIZACAO\" = 1 OR\r\n                \"IN_MESTRADO\" = 1 OR\r\n                \"IN_DOUTORADO\" = 1\r\n            THEN 1\r\n            ELSE 0\r\n        END AS \"POSSUI_POS\",\r\n        CASE\r\n            WHEN\r\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\r\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\r\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\r\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\r\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\r\n                \"IN_ESPECIFICO_EJA\" = 1 OR\r\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\r\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\r\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\r\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\r\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\r\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\r\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\r\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\r\n                \"IN_ESPECIFICO_OUTROS\" = 1\r\n            THEN 1\r\n            ELSE 0\r\n        END AS \"POSSUI_FC\"\r\n    FROM\r\n        {{source(\"raw\", \"DIM_DOCENTES_\" ~ regiao ~ \"_2017\") }}\r\n    ) AS TEMP\r\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n{% if not loop.last %}\r\nUNION ALL\r\n{% endif %}\r\n{% endfor %}", "language": "sql", "refs": [], "sources": [["raw", "DIM_DOCENTES_NORTE_2017"], ["raw", "DIM_DOCENTES_NORDESTE_2017"], ["raw", "DIM_DOCENTES_CO_2017"], ["raw", "DIM_DOCENTES_SUDESTE_2017"], ["raw", "DIM_DOCENTES_SUL_2017"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_DOCENTES_NORTE_2017", "source.exp.raw.DIM_DOCENTES_NORDESTE_2017", "source.exp.raw.DIM_DOCENTES_CO_2017", "source.exp.raw.DIM_DOCENTES_SUDESTE_2017", "source.exp.raw.DIM_DOCENTES_SUL_2017"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2017.sql", "compiled": true, "compiled_code": "\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2017\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2017\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2017\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2017\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        CAST(\"CO_PESSOA_FISICA\" AS BIGINT) AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2017\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_16_2018": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_16_2018", "resource_type": "model", "package_name": "exp", "path": "dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2018.sql", "original_file_path": "models\\dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2018.sql", "unique_id": "model.exp.dim_educ_bas_docentes_16_2018", "fqn": ["exp", "dim_educ_bas_docentes_16", "views", "dim_educ_bas_docentes_16_2018"], "alias": "dim_educ_bas_docentes_16_2018", "checksum": {"name": "sha256", "checksum": "0f42f98b562ac64db19ad190fb254eeb7f8e923c28e95055fbabe7a8d7c02034"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "view"}, "created_at": 1723502084.1521835, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_16_2018\"", "raw_code": "{% set regioes = [\"NORTE\", \"NORDESTE\", \"CO\", \"SUDESTE\", \"SUL\"] %}\r\n\r\n{% for regiao in regioes %}\r\nSELECT\r\n    \"ANO\",\r\n    \"FK_MUNICIPIO_CODIGO\",\r\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\r\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\r\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\r\nFROM\r\n    (SELECT\r\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\r\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\r\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\r\n        CASE\r\n            WHEN\r\n                \"IN_ESPECIALIZACAO\" = 1 OR\r\n                \"IN_MESTRADO\" = 1 OR\r\n                \"IN_DOUTORADO\" = 1\r\n            THEN 1\r\n            ELSE 0\r\n        END AS \"POSSUI_POS\",\r\n        CASE\r\n            WHEN\r\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\r\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\r\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\r\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\r\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\r\n                \"IN_ESPECIFICO_EJA\" = 1 OR\r\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\r\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\r\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\r\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\r\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\r\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\r\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\r\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\r\n                \"IN_ESPECIFICO_OUTROS\" = 1\r\n            THEN 1\r\n            ELSE 0\r\n        END AS \"POSSUI_FC\"\r\n    FROM\r\n        {{source(\"raw\", \"DIM_DOCENTES_\" ~ regiao ~ \"_2018\") }}\r\n    ) AS TEMP\r\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n{% if not loop.last %}\r\nUNION ALL\r\n{% endif %}\r\n{% endfor %}", "language": "sql", "refs": [], "sources": [["raw", "DIM_DOCENTES_NORTE_2018"], ["raw", "DIM_DOCENTES_NORDESTE_2018"], ["raw", "DIM_DOCENTES_CO_2018"], ["raw", "DIM_DOCENTES_SUDESTE_2018"], ["raw", "DIM_DOCENTES_SUL_2018"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_DOCENTES_NORTE_2018", "source.exp.raw.DIM_DOCENTES_NORDESTE_2018", "source.exp.raw.DIM_DOCENTES_CO_2018", "source.exp.raw.DIM_DOCENTES_SUDESTE_2018", "source.exp.raw.DIM_DOCENTES_SUL_2018"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2018.sql", "compiled": true, "compiled_code": "\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2018\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2018\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2018\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2018\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2018\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_16_2019": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_16_2019", "resource_type": "model", "package_name": "exp", "path": "dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2019.sql", "original_file_path": "models\\dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2019.sql", "unique_id": "model.exp.dim_educ_bas_docentes_16_2019", "fqn": ["exp", "dim_educ_bas_docentes_16", "views", "dim_educ_bas_docentes_16_2019"], "alias": "dim_educ_bas_docentes_16_2019", "checksum": {"name": "sha256", "checksum": "3703ddb699c17e31c9aaf829156660185440bed3f6ad703f5c6277edc09259a4"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "view"}, "created_at": 1723502084.1592338, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_16_2019\"", "raw_code": "{% set regioes = [\"NORTE\", \"NORDESTE\", \"CO\", \"SUDESTE\", \"SUL\"] %}\r\n\r\n{% for regiao in regioes %}\r\nSELECT\r\n    \"ANO\",\r\n    \"FK_MUNICIPIO_CODIGO\",\r\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\r\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\r\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\r\nFROM\r\n    (SELECT\r\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\r\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\r\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\r\n        CASE\r\n            WHEN\r\n                \"IN_ESPECIALIZACAO\" = 1 OR\r\n                \"IN_MESTRADO\" = 1 OR\r\n                \"IN_DOUTORADO\" = 1\r\n            THEN 1\r\n            ELSE 0\r\n        END AS \"POSSUI_POS\",\r\n        CASE\r\n            WHEN\r\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\r\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\r\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\r\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\r\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\r\n                \"IN_ESPECIFICO_EJA\" = 1 OR\r\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\r\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\r\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\r\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\r\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\r\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\r\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\r\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\r\n                \"IN_ESPECIFICO_OUTROS\" = 1\r\n            THEN 1\r\n            ELSE 0\r\n        END AS \"POSSUI_FC\"\r\n    FROM\r\n        {{source(\"raw\", \"DIM_DOCENTES_\" ~ regiao ~ \"_2019\") }}\r\n    ) AS TEMP\r\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n{% if not loop.last %}\r\nUNION ALL\r\n{% endif %}\r\n{% endfor %}", "language": "sql", "refs": [], "sources": [["raw", "DIM_DOCENTES_NORTE_2019"], ["raw", "DIM_DOCENTES_NORDESTE_2019"], ["raw", "DIM_DOCENTES_CO_2019"], ["raw", "DIM_DOCENTES_SUDESTE_2019"], ["raw", "DIM_DOCENTES_SUL_2019"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_DOCENTES_NORTE_2019", "source.exp.raw.DIM_DOCENTES_NORDESTE_2019", "source.exp.raw.DIM_DOCENTES_CO_2019", "source.exp.raw.DIM_DOCENTES_SUDESTE_2019", "source.exp.raw.DIM_DOCENTES_SUL_2019"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2019.sql", "compiled": true, "compiled_code": "\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2019\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2019\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2019\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2019\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\nUNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2019\"\n    ) AS TEMP\nGROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_16_2020": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_16_2020", "resource_type": "model", "package_name": "exp", "path": "dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2020.sql", "original_file_path": "models\\dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2020.sql", "unique_id": "model.exp.dim_educ_bas_docentes_16_2020", "fqn": ["exp", "dim_educ_bas_docentes_16", "views", "dim_educ_bas_docentes_16_2020"], "alias": "dim_educ_bas_docentes_16_2020", "checksum": {"name": "sha256", "checksum": "c4c1230f35bbad9ce12ce81861aab83dba025b958eafebd0033ee806c34d0738"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "view"}, "created_at": 1723502084.1672337, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_16_2020\"", "raw_code": "{% set regioes = [\"NORTE\", \"NORDESTE\", \"CO\", \"SUDESTE\", \"SUL\"] %}\r\n\r\n{% for regiao in regioes %}\r\nSELECT\r\n    \"ANO\",\r\n    \"FK_MUNICIPIO_CODIGO\",\r\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\r\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\r\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\r\nFROM\r\n    (SELECT\r\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\r\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\r\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\r\n        CASE\r\n            WHEN\r\n                \"IN_ESPECIALIZACAO\" = 1 OR\r\n                \"IN_MESTRADO\" = 1 OR\r\n                \"IN_DOUTORADO\" = 1\r\n            THEN 1\r\n            ELSE 0\r\n        END AS \"POSSUI_POS\",\r\n        CASE\r\n            WHEN\r\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\r\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\r\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\r\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\r\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\r\n                \"IN_ESPECIFICO_EJA\" = 1 OR\r\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\r\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\r\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\r\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\r\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\r\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\r\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\r\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\r\n                \"IN_ESPECIFICO_OUTROS\" = 1\r\n            THEN 1\r\n            ELSE 0\r\n        END AS \"POSSUI_FC\"\r\n    FROM\r\n        {{source(\"raw\", \"DIM_DOCENTES_\" ~ regiao ~ \"_2020\") }}\r\n    ) AS TEMP\r\n    GROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n    {% if not loop.last %}\r\n    UNION ALL\r\n{% endif %}\r\n{% endfor %}", "language": "sql", "refs": [], "sources": [["raw", "DIM_DOCENTES_NORTE_2020"], ["raw", "DIM_DOCENTES_NORDESTE_2020"], ["raw", "DIM_DOCENTES_CO_2020"], ["raw", "DIM_DOCENTES_SUDESTE_2020"], ["raw", "DIM_DOCENTES_SUL_2020"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_DOCENTES_NORTE_2020", "source.exp.raw.DIM_DOCENTES_NORDESTE_2020", "source.exp.raw.DIM_DOCENTES_CO_2020", "source.exp.raw.DIM_DOCENTES_SUDESTE_2020", "source.exp.raw.DIM_DOCENTES_SUL_2020"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_educ_bas_docentes_16\\views\\dim_educ_bas_docentes_16_2020.sql", "compiled": true, "compiled_code": "\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2020\"\n    ) AS TEMP\n    GROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n    \n    UNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2020\"\n    ) AS TEMP\n    GROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n    \n    UNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2020\"\n    ) AS TEMP\n    GROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n    \n    UNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2020\"\n    ) AS TEMP\n    GROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n    \n    UNION ALL\n\n\nSELECT\n    \"ANO\",\n    \"FK_MUNICIPIO_CODIGO\",\n    COUNT(\"CO_PESSOA_FISICA\") as \"QT_PROF\",\n    SUM(\"POSSUI_POS\") as \"POSSUI_POS\",\n    SUM(\"POSSUI_FC\") as \"POSSUI_FC\"\nFROM\n    (SELECT\n        CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n        CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"ID_DOCENTE\" AS \"CO_PESSOA_FISICA\",\n        CASE\n            WHEN\n                \"IN_ESPECIALIZACAO\" = 1 OR\n                \"IN_MESTRADO\" = 1 OR\n                \"IN_DOUTORADO\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_POS\",\n        CASE\n            WHEN\n                \"IN_ESPECIFICO_CRECHE\" = 1 OR\n                \"IN_ESPECIFICO_PRE_ESCOLA\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_INICIAIS\" = 1 OR\n                \"IN_ESPECIFICO_ANOS_FINAIS\" = 1 OR\n                \"IN_ESPECIFICO_ENS_MEDIO\" = 1 OR\n                \"IN_ESPECIFICO_EJA\" = 1 OR\n                \"IN_ESPECIFICO_ED_ESPECIAL\" = 1 OR\n                \"IN_ESPECIFICO_ED_INDIGENA\" = 1 OR\n                \"IN_ESPECIFICO_CAMPO\" = 1 OR\n                \"IN_ESPECIFICO_AMBIENTAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_HUMANOS\" = 1 OR\n                \"IN_ESPECIFICO_DIV_SEXUAL\" = 1 OR\n                \"IN_ESPECIFICO_DIR_ADOLESC\" = 1 OR\n                \"IN_ESPECIFICO_AFRO\" = 1 OR\n                \"IN_ESPECIFICO_OUTROS\" = 1\n            THEN 1\n            ELSE 0\n        END AS \"POSSUI_FC\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2020\"\n    ) AS TEMP\n    GROUP BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n    \n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_escola_19": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_escola_19", "resource_type": "model", "package_name": "exp", "path": "dim_educ_bas_escola_19\\dim_educ_bas_escola_19.sql", "original_file_path": "models\\dim_educ_bas_escola_19\\dim_educ_bas_escola_19.sql", "unique_id": "model.exp.dim_educ_bas_escola_19", "fqn": ["exp", "dim_educ_bas_escola_19", "dim_educ_bas_escola_19"], "alias": "dim_educ_bas_escola_19", "checksum": {"name": "sha256", "checksum": "d68e64b2d3ab34d580115f2fd742a4e3a2d65f71abfa184e4835fc1650342195"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.174234, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_escola_19\"", "raw_code": "{% set years = [2019, 2020] %}\r\n\r\n{% for year in years %}\r\nSELECT\r\n    \"NU_ANO_CENSO\",\r\n    \"CO_MUNICIPIO\",\r\n    \"TP_DEPENDENCIA\",\r\n    \"TP_SITUACAO_FUNCIONAMENTO\",\r\n    \"IN_ORGAO_ASS_PAIS\",\r\n    \"IN_ORGAO_ASS_PAIS_MESTRES\",\r\n    \"IN_ORGAO_CONSELHO_ESCOLAR\",\r\n    \"IN_ORGAO_GREMIO_ESTUDANTIL\"\r\nFROM\r\n    {{source(\"raw\", \"DIM_EDUC_BASICA_ESCOLA_\" ~ year) }}\r\n{% if not loop.last %}\r\nUNION ALL\r\n{% endif %}\r\n{% endfor %}", "language": "sql", "refs": [], "sources": [["raw", "DIM_EDUC_BASICA_ESCOLA_2019"], ["raw", "DIM_EDUC_BASICA_ESCOLA_2020"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_EDUC_BASICA_ESCOLA_2019", "source.exp.raw.DIM_EDUC_BASICA_ESCOLA_2020"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_educ_bas_escola_19\\dim_educ_bas_escola_19.sql", "compiled": true, "compiled_code": "\n\n\nSELECT\n    \"NU_ANO_CENSO\",\n    \"CO_MUNICIPIO\",\n    \"TP_DEPENDENCIA\",\n    \"TP_SITUACAO_FUNCIONAMENTO\",\n    \"IN_ORGAO_ASS_PAIS\",\n    \"IN_ORGAO_ASS_PAIS_MESTRES\",\n    \"IN_ORGAO_CONSELHO_ESCOLAR\",\n    \"IN_ORGAO_GREMIO_ESTUDANTIL\"\nFROM\n    \"postgres\".\"raw\".\"DIM_EDUC_BASICA_ESCOLA_2019\"\n\nUNION ALL\n\n\nSELECT\n    \"NU_ANO_CENSO\",\n    \"CO_MUNICIPIO\",\n    \"TP_DEPENDENCIA\",\n    \"TP_SITUACAO_FUNCIONAMENTO\",\n    \"IN_ORGAO_ASS_PAIS\",\n    \"IN_ORGAO_ASS_PAIS_MESTRES\",\n    \"IN_ORGAO_CONSELHO_ESCOLAR\",\n    \"IN_ORGAO_GREMIO_ESTUDANTIL\"\nFROM\n    \"postgres\".\"raw\".\"DIM_EDUC_BASICA_ESCOLA_2020\"\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_gestor_19": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_gestor_19", "resource_type": "model", "package_name": "exp", "path": "dim_educ_bas_gestor_19\\dim_educ_bas_gestor_19.sql", "original_file_path": "models\\dim_educ_bas_gestor_19\\dim_educ_bas_gestor_19.sql", "unique_id": "model.exp.dim_educ_bas_gestor_19", "fqn": ["exp", "dim_educ_bas_gestor_19", "dim_educ_bas_gestor_19"], "alias": "dim_educ_bas_gestor_19", "checksum": {"name": "sha256", "checksum": "392d9a649f94010502fdf9bbcb537c63647b9e6a228a01753da1c71d1d6f59dd"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.1812341, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_gestor_19\"", "raw_code": "{% set years = [2019, 2020] %}\r\n\r\n{% for year in years %}\r\nSELECT\r\n    \"NU_ANO_CENSO\",\r\n    \"CO_MUNICIPIO\",\r\n    \"TP_DEPENDENCIA\",\r\n    \"TP_CARGO_GESTOR\",\r\n    \"TP_TIPO_ACESSO_CARGO\"\r\nFROM\r\n    {{source(\"raw\", \"DIM_CENSO_EDUC_BASICA_GESTOR_\" ~ year) }}\r\n{% if not loop.last %}\r\nUNION ALL\r\n{% endif %}\r\n{% endfor %}", "language": "sql", "refs": [], "sources": [["raw", "DIM_CENSO_EDUC_BASICA_GESTOR_2019"], ["raw", "DIM_CENSO_EDUC_BASICA_GESTOR_2020"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_GESTOR_2019", "source.exp.raw.DIM_CENSO_EDUC_BASICA_GESTOR_2020"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_educ_bas_gestor_19\\dim_educ_bas_gestor_19.sql", "compiled": true, "compiled_code": "\n\n\nSELECT\n    \"NU_ANO_CENSO\",\n    \"CO_MUNICIPIO\",\n    \"TP_DEPENDENCIA\",\n    \"TP_CARGO_GESTOR\",\n    \"TP_TIPO_ACESSO_CARGO\"\nFROM\n    \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_GESTOR_2019\"\n\nUNION ALL\n\n\nSELECT\n    \"NU_ANO_CENSO\",\n    \"CO_MUNICIPIO\",\n    \"TP_DEPENDENCIA\",\n    \"TP_CARGO_GESTOR\",\n    \"TP_TIPO_ACESSO_CARGO\"\nFROM\n    \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_GESTOR_2020\"\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_sup_12": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_sup_12", "resource_type": "model", "package_name": "exp", "path": "dim_educ_sup_12\\dim_educ_sup_12.sql", "original_file_path": "models\\dim_educ_sup_12\\dim_educ_sup_12.sql", "unique_id": "model.exp.dim_educ_sup_12", "fqn": ["exp", "dim_educ_sup_12", "dim_educ_sup_12"], "alias": "dim_educ_sup_12", "checksum": {"name": "sha256", "checksum": "1f63998d9451376e6a32c3811a41db227a4484fc00e09f8dee9ac64ea48a3010"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Quantidade de matriculas por ano, munic\u00edpio e dimens\u00f5es necess\u00e1rias para o c\u00e1lculo dos indicadores da meta 12", "columns": {"ANO": {"name": "ANO", "description": "Ano do Censo Educacional", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do munic\u00edpio", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "TP_NIVEL_ACADEMICO": {"name": "TP_NIVEL_ACADEMICO", "description": "Tipo do n\u00edvel acad\u00eamico do curso. Gradua\u00e7\u00e3o \u00e9 \"1\".", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "TP_CATEGORIA_ADMINISTRATIVA": {"name": "TP_CATEGORIA_ADMINISTRATIVA", "description": "Tipo de Categoria Administrativa da institui\u00e7\u00e3o de ensino. Institui\u00e7\u00f5es p\u00fablicas s\u00e3o \"1 ou 2 ou 3 ou 7\"", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "QT_MAT": {"name": "QT_MAT", "description": "Quantidade de ingressantes", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "QT_MAT_18_24": {"name": "QT_MAT_18_24", "description": "Quantidade de ingressantes - De 18 e 24 anos de idade", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "QT_CONC_18_24": {"name": "QT_CONC_18_24", "description": "Quantidade de concluintes - De 18 e 24 anos de idade", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.5428874, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_sup_12\"", "raw_code": "{% set years = [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022] %}\r\n\r\nSELECT\r\n    CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\r\n    CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\r\n    CAST(\"TP_NIVEL_ACADEMICO\" AS INT) AS \"TP_NIVEL_ACADEMICO\",\r\n    CAST(\"TP_CATEGORIA_ADMINISTRATIVA\" AS INT) AS \"TP_CATEGORIA_ADMINISTRATIVA\",\r\n    CAST(SUM(\"QT_MAT\") AS INT) AS \"QT_MAT\",\r\n    CAST(SUM(\"QT_MAT_18_24\") AS INT) AS \"QT_MAT_18_24\",\r\n    CAST(SUM(\"QT_CONC_18_24\") AS INT) AS \"QT_CONC_18_24\"\r\nFROM (\r\n    {% for year in years %}\r\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_NIVEL_ACADEMICO\",\r\n           \"TP_CATEGORIA_ADMINISTRATIVA\", \"QT_MAT\", \"QT_MAT_18_24\",\r\n           \"QT_CONC_18_24\"\r\n    FROM {{source(\"raw\", \"DIM_EDUC_SUP_MATRICULA_\" ~ year) }}\r\n    {% if not loop.last %}\r\n    UNION ALL\r\n   {% endif %}\r\n   {% endfor %}\r\n) AS educ_sup_12\r\nGROUP BY \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_CATEGORIA_ADMINISTRATIVA\", \"TP_NIVEL_ACADEMICO\"\r\nORDER BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"", "language": "sql", "refs": [], "sources": [["raw", "DIM_EDUC_SUP_MATRICULA_2009"], ["raw", "DIM_EDUC_SUP_MATRICULA_2010"], ["raw", "DIM_EDUC_SUP_MATRICULA_2011"], ["raw", "DIM_EDUC_SUP_MATRICULA_2012"], ["raw", "DIM_EDUC_SUP_MATRICULA_2013"], ["raw", "DIM_EDUC_SUP_MATRICULA_2014"], ["raw", "DIM_EDUC_SUP_MATRICULA_2015"], ["raw", "DIM_EDUC_SUP_MATRICULA_2016"], ["raw", "DIM_EDUC_SUP_MATRICULA_2017"], ["raw", "DIM_EDUC_SUP_MATRICULA_2018"], ["raw", "DIM_EDUC_SUP_MATRICULA_2019"], ["raw", "DIM_EDUC_SUP_MATRICULA_2020"], ["raw", "DIM_EDUC_SUP_MATRICULA_2021"], ["raw", "DIM_EDUC_SUP_MATRICULA_2022"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_EDUC_SUP_MATRICULA_2009", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2010", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2011", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2012", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2013", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2014", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2015", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2016", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2017", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2018", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2019", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2020", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2021", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2022"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_educ_sup_12\\dim_educ_sup_12.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n    CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n    CAST(\"TP_NIVEL_ACADEMICO\" AS INT) AS \"TP_NIVEL_ACADEMICO\",\n    CAST(\"TP_CATEGORIA_ADMINISTRATIVA\" AS INT) AS \"TP_CATEGORIA_ADMINISTRATIVA\",\n    CAST(SUM(\"QT_MAT\") AS INT) AS \"QT_MAT\",\n    CAST(SUM(\"QT_MAT_18_24\") AS INT) AS \"QT_MAT_18_24\",\n    CAST(SUM(\"QT_CONC_18_24\") AS INT) AS \"QT_CONC_18_24\"\nFROM (\n    \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_NIVEL_ACADEMICO\",\n           \"TP_CATEGORIA_ADMINISTRATIVA\", \"QT_MAT\", \"QT_MAT_18_24\",\n           \"QT_CONC_18_24\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2009\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_NIVEL_ACADEMICO\",\n           \"TP_CATEGORIA_ADMINISTRATIVA\", \"QT_MAT\", \"QT_MAT_18_24\",\n           \"QT_CONC_18_24\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2010\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_NIVEL_ACADEMICO\",\n           \"TP_CATEGORIA_ADMINISTRATIVA\", \"QT_MAT\", \"QT_MAT_18_24\",\n           \"QT_CONC_18_24\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2011\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_NIVEL_ACADEMICO\",\n           \"TP_CATEGORIA_ADMINISTRATIVA\", \"QT_MAT\", \"QT_MAT_18_24\",\n           \"QT_CONC_18_24\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2012\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_NIVEL_ACADEMICO\",\n           \"TP_CATEGORIA_ADMINISTRATIVA\", \"QT_MAT\", \"QT_MAT_18_24\",\n           \"QT_CONC_18_24\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2013\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_NIVEL_ACADEMICO\",\n           \"TP_CATEGORIA_ADMINISTRATIVA\", \"QT_MAT\", \"QT_MAT_18_24\",\n           \"QT_CONC_18_24\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2014\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_NIVEL_ACADEMICO\",\n           \"TP_CATEGORIA_ADMINISTRATIVA\", \"QT_MAT\", \"QT_MAT_18_24\",\n           \"QT_CONC_18_24\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2015\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_NIVEL_ACADEMICO\",\n           \"TP_CATEGORIA_ADMINISTRATIVA\", \"QT_MAT\", \"QT_MAT_18_24\",\n           \"QT_CONC_18_24\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2016\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_NIVEL_ACADEMICO\",\n           \"TP_CATEGORIA_ADMINISTRATIVA\", \"QT_MAT\", \"QT_MAT_18_24\",\n           \"QT_CONC_18_24\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2017\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_NIVEL_ACADEMICO\",\n           \"TP_CATEGORIA_ADMINISTRATIVA\", \"QT_MAT\", \"QT_MAT_18_24\",\n           \"QT_CONC_18_24\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2018\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_NIVEL_ACADEMICO\",\n           \"TP_CATEGORIA_ADMINISTRATIVA\", \"QT_MAT\", \"QT_MAT_18_24\",\n           \"QT_CONC_18_24\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2019\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_NIVEL_ACADEMICO\",\n           \"TP_CATEGORIA_ADMINISTRATIVA\", \"QT_MAT\", \"QT_MAT_18_24\",\n           \"QT_CONC_18_24\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2020\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_NIVEL_ACADEMICO\",\n           \"TP_CATEGORIA_ADMINISTRATIVA\", \"QT_MAT\", \"QT_MAT_18_24\",\n           \"QT_CONC_18_24\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2021\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_NIVEL_ACADEMICO\",\n           \"TP_CATEGORIA_ADMINISTRATIVA\", \"QT_MAT\", \"QT_MAT_18_24\",\n           \"QT_CONC_18_24\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2022\"\n    \n   \n) AS educ_sup_12\nGROUP BY \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_CATEGORIA_ADMINISTRATIVA\", \"TP_NIVEL_ACADEMICO\"\nORDER BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_sup_13": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_sup_13", "resource_type": "model", "package_name": "exp", "path": "dim_educ_sup_13\\dim_educ_sup_13.sql", "original_file_path": "models\\dim_educ_sup_13\\dim_educ_sup_13.sql", "unique_id": "model.exp.dim_educ_sup_13", "fqn": ["exp", "dim_educ_sup_13", "dim_educ_sup_13"], "alias": "dim_educ_sup_13", "checksum": {"name": "sha256", "checksum": "2474b0f4fd46a8fa0e34e1c731d1cffe577caa440c009f6eda5a94d44d797e3e"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.1965792, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_sup_13\"", "raw_code": "{% set years = [2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022] %}\r\n\r\nSELECT\r\n    CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\r\n    CAST(\"CO_MUNICIPIO_IES\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\r\n    SUM(\"QT_DOC_EX_MEST\") AS \"QT_DOC_EX_MEST\",\r\n    SUM(\"QT_DOC_EX_DOUT\") AS \"QT_DOC_EX_DOUT\",\r\n    SUM(\"QT_DOC_EXE\") AS \"QT_DOC_EXE\"\r\nFROM (\r\n    {% for year in years %}\r\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO_IES\", \"QT_DOC_EX_MEST\", \"QT_DOC_EX_DOUT\", \"QT_DOC_EXE\"\r\n    FROM {{source(\"raw\", \"DIM_EDUC_SUP_IES_\" ~ year) }}\r\n    {% if not loop.last %}\r\n    UNION ALL\r\n   {% endif %}\r\n   {% endfor %}\r\n) AS educ_sup_13\r\nGROUP BY \"NU_ANO_CENSO\", \"CO_MUNICIPIO_IES\"\r\nORDER BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"", "language": "sql", "refs": [], "sources": [["raw", "DIM_EDUC_SUP_IES_2014"], ["raw", "DIM_EDUC_SUP_IES_2015"], ["raw", "DIM_EDUC_SUP_IES_2016"], ["raw", "DIM_EDUC_SUP_IES_2017"], ["raw", "DIM_EDUC_SUP_IES_2018"], ["raw", "DIM_EDUC_SUP_IES_2019"], ["raw", "DIM_EDUC_SUP_IES_2020"], ["raw", "DIM_EDUC_SUP_IES_2021"], ["raw", "DIM_EDUC_SUP_IES_2022"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_EDUC_SUP_IES_2014", "source.exp.raw.DIM_EDUC_SUP_IES_2015", "source.exp.raw.DIM_EDUC_SUP_IES_2016", "source.exp.raw.DIM_EDUC_SUP_IES_2017", "source.exp.raw.DIM_EDUC_SUP_IES_2018", "source.exp.raw.DIM_EDUC_SUP_IES_2019", "source.exp.raw.DIM_EDUC_SUP_IES_2020", "source.exp.raw.DIM_EDUC_SUP_IES_2021", "source.exp.raw.DIM_EDUC_SUP_IES_2022"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_educ_sup_13\\dim_educ_sup_13.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n    CAST(\"CO_MUNICIPIO_IES\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n    SUM(\"QT_DOC_EX_MEST\") AS \"QT_DOC_EX_MEST\",\n    SUM(\"QT_DOC_EX_DOUT\") AS \"QT_DOC_EX_DOUT\",\n    SUM(\"QT_DOC_EXE\") AS \"QT_DOC_EXE\"\nFROM (\n    \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO_IES\", \"QT_DOC_EX_MEST\", \"QT_DOC_EX_DOUT\", \"QT_DOC_EXE\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2014\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO_IES\", \"QT_DOC_EX_MEST\", \"QT_DOC_EX_DOUT\", \"QT_DOC_EXE\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2015\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO_IES\", \"QT_DOC_EX_MEST\", \"QT_DOC_EX_DOUT\", \"QT_DOC_EXE\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2016\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO_IES\", \"QT_DOC_EX_MEST\", \"QT_DOC_EX_DOUT\", \"QT_DOC_EXE\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2017\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO_IES\", \"QT_DOC_EX_MEST\", \"QT_DOC_EX_DOUT\", \"QT_DOC_EXE\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2018\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO_IES\", \"QT_DOC_EX_MEST\", \"QT_DOC_EX_DOUT\", \"QT_DOC_EXE\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2019\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO_IES\", \"QT_DOC_EX_MEST\", \"QT_DOC_EX_DOUT\", \"QT_DOC_EXE\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2020\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO_IES\", \"QT_DOC_EX_MEST\", \"QT_DOC_EX_DOUT\", \"QT_DOC_EXE\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2021\"\n    \n    UNION ALL\n   \n   \n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO_IES\", \"QT_DOC_EX_MEST\", \"QT_DOC_EX_DOUT\", \"QT_DOC_EXE\"\n    FROM \"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2022\"\n    \n   \n) AS educ_sup_13\nGROUP BY \"NU_ANO_CENSO\", \"CO_MUNICIPIO_IES\"\nORDER BY \"ANO\", \"FK_MUNICIPIO_CODIGO\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_matricula_6a": {"database": "postgres", "schema": "dbt_staging", "name": "dim_matricula_6a", "resource_type": "model", "package_name": "exp", "path": "dim_matricula_6a\\dim_matricula_6a.sql", "original_file_path": "models\\dim_matricula_6a\\dim_matricula_6a.sql", "unique_id": "model.exp.dim_matricula_6a", "fqn": ["exp", "dim_matricula_6a", "dim_matricula_6a"], "alias": "dim_matricula_6a", "checksum": {"name": "sha256", "checksum": "bff79c7297bd4451a150928c2b0e3d3885941a62450e819f1cabc82159b6e7d8"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Quantidade de matriculas por ano, munic\u00edpio e dimens\u00f5es necess\u00e1rias para o c\u00e1lculo do indicador 6A", "columns": {"ANO": {"name": "ANO", "description": "Ano do Censo Educacional", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do munic\u00edpio", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "TP_DEPENDENCIA": {"name": "TP_DEPENDENCIA", "description": "Tipo de depend\u00eancia administrativa da escola", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "QT_MAT_INF_INT": {"name": "QT_MAT_INF_INT", "description": "Quantidade de matr\u00edculas de educa\u00e7\u00e3o infantil em escolas de ensino integral", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "QT_MAT_FUND_INT": {"name": "QT_MAT_FUND_INT", "description": "Quantidade de matr\u00edculas de ensino fundamental em escolas de ensino integral", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "QT_MAT_MED_INT": {"name": "QT_MAT_MED_INT", "description": "Quantidade de matr\u00edculas de ensino m\u00e9dio em escolas de ensino integral", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "QT_MAT_INF": {"name": "QT_MAT_INF", "description": "Quantidade de matr\u00edculas de educa\u00e7\u00e3o infantil", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "QT_MAT_FUND": {"name": "QT_MAT_FUND", "description": "Quantidade de matr\u00edculas de ensino fundamental", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "QT_MAT_MED": {"name": "QT_MAT_MED", "description": "Quantidade de matr\u00edculas de ensino m\u00e9dio", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.5373795, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_matricula_6a\"", "raw_code": "{% set years = [2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021] %}\r\n\r\nSELECT\r\n   CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\r\n   CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\r\n   SUM(\"QT_MAT_INF_INT\") AS \"QT_MAT_INF_INT\",\r\n   SUM(\"QT_MAT_FUND_INT\") AS \"QT_MAT_FUND_INT\",\r\n   SUM(\"QT_MAT_MED_INT\") AS \"QT_MAT_MED_INT\",\r\n   SUM(\"QT_MAT_INF\") AS \"QT_MAT_INF\",\r\n   SUM(\"QT_MAT_FUND\") AS \"QT_MAT_FUND\",\r\n   SUM(\"QT_MAT_MED\") AS \"QT_MAT_MED\"\r\nFROM (\r\n   {% for year in years %}\r\n   SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_DEPENDENCIA\", \"QT_MAT_INF_INT\", \"QT_MAT_FUND_INT\", \"QT_MAT_MED_INT\", \"QT_MAT_INF\", \"QT_MAT_FUND\", \"QT_MAT_MED\" FROM {{source(\"raw\", \"DIM_MICRODADOS_ED_BASICA_\" ~ year) }} WHERE \"TP_DEPENDENCIA\"!=4\r\n   {% if not loop.last %}\r\n   UNION ALL\r\n   {% endif %}\r\n   {% endfor %}\r\n) AS matriculas_meta_6a\r\nGROUP BY \"NU_ANO_CENSO\", \"CO_MUNICIPIO\"\r\nORDER BY \"NU_ANO_CENSO\", \"FK_MUNICIPIO_CODIGO\"", "language": "sql", "refs": [], "sources": [["raw", "DIM_MICRODADOS_ED_BASICA_2014"], ["raw", "DIM_MICRODADOS_ED_BASICA_2015"], ["raw", "DIM_MICRODADOS_ED_BASICA_2016"], ["raw", "DIM_MICRODADOS_ED_BASICA_2017"], ["raw", "DIM_MICRODADOS_ED_BASICA_2018"], ["raw", "DIM_MICRODADOS_ED_BASICA_2019"], ["raw", "DIM_MICRODADOS_ED_BASICA_2020"], ["raw", "DIM_MICRODADOS_ED_BASICA_2021"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_MICRODADOS_ED_BASICA_2014", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2015", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2016", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2017", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2018", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2019", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2020", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2021"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_matricula_6a\\dim_matricula_6a.sql", "compiled": true, "compiled_code": "\n\nSELECT\n   CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n   CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n   SUM(\"QT_MAT_INF_INT\") AS \"QT_MAT_INF_INT\",\n   SUM(\"QT_MAT_FUND_INT\") AS \"QT_MAT_FUND_INT\",\n   SUM(\"QT_MAT_MED_INT\") AS \"QT_MAT_MED_INT\",\n   SUM(\"QT_MAT_INF\") AS \"QT_MAT_INF\",\n   SUM(\"QT_MAT_FUND\") AS \"QT_MAT_FUND\",\n   SUM(\"QT_MAT_MED\") AS \"QT_MAT_MED\"\nFROM (\n   \n   SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_DEPENDENCIA\", \"QT_MAT_INF_INT\", \"QT_MAT_FUND_INT\", \"QT_MAT_MED_INT\", \"QT_MAT_INF\", \"QT_MAT_FUND\", \"QT_MAT_MED\" FROM \"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2014\" WHERE \"TP_DEPENDENCIA\"!=4\n   \n   UNION ALL\n   \n   \n   SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_DEPENDENCIA\", \"QT_MAT_INF_INT\", \"QT_MAT_FUND_INT\", \"QT_MAT_MED_INT\", \"QT_MAT_INF\", \"QT_MAT_FUND\", \"QT_MAT_MED\" FROM \"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2015\" WHERE \"TP_DEPENDENCIA\"!=4\n   \n   UNION ALL\n   \n   \n   SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_DEPENDENCIA\", \"QT_MAT_INF_INT\", \"QT_MAT_FUND_INT\", \"QT_MAT_MED_INT\", \"QT_MAT_INF\", \"QT_MAT_FUND\", \"QT_MAT_MED\" FROM \"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2016\" WHERE \"TP_DEPENDENCIA\"!=4\n   \n   UNION ALL\n   \n   \n   SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_DEPENDENCIA\", \"QT_MAT_INF_INT\", \"QT_MAT_FUND_INT\", \"QT_MAT_MED_INT\", \"QT_MAT_INF\", \"QT_MAT_FUND\", \"QT_MAT_MED\" FROM \"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2017\" WHERE \"TP_DEPENDENCIA\"!=4\n   \n   UNION ALL\n   \n   \n   SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_DEPENDENCIA\", \"QT_MAT_INF_INT\", \"QT_MAT_FUND_INT\", \"QT_MAT_MED_INT\", \"QT_MAT_INF\", \"QT_MAT_FUND\", \"QT_MAT_MED\" FROM \"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2018\" WHERE \"TP_DEPENDENCIA\"!=4\n   \n   UNION ALL\n   \n   \n   SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_DEPENDENCIA\", \"QT_MAT_INF_INT\", \"QT_MAT_FUND_INT\", \"QT_MAT_MED_INT\", \"QT_MAT_INF\", \"QT_MAT_FUND\", \"QT_MAT_MED\" FROM \"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2019\" WHERE \"TP_DEPENDENCIA\"!=4\n   \n   UNION ALL\n   \n   \n   SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_DEPENDENCIA\", \"QT_MAT_INF_INT\", \"QT_MAT_FUND_INT\", \"QT_MAT_MED_INT\", \"QT_MAT_INF\", \"QT_MAT_FUND\", \"QT_MAT_MED\" FROM \"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2020\" WHERE \"TP_DEPENDENCIA\"!=4\n   \n   UNION ALL\n   \n   \n   SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"TP_DEPENDENCIA\", \"QT_MAT_INF_INT\", \"QT_MAT_FUND_INT\", \"QT_MAT_MED_INT\", \"QT_MAT_INF\", \"QT_MAT_FUND\", \"QT_MAT_MED\" FROM \"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2021\" WHERE \"TP_DEPENDENCIA\"!=4\n   \n   \n) AS matriculas_meta_6a\nGROUP BY \"NU_ANO_CENSO\", \"CO_MUNICIPIO\"\nORDER BY \"NU_ANO_CENSO\", \"FK_MUNICIPIO_CODIGO\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_matricula_faixa_idade": {"database": "postgres", "schema": "dbt_staging", "name": "dim_matricula_faixa_idade", "resource_type": "model", "package_name": "exp", "path": "dim_matricula_faixa_idade\\dim_matricula_faixa_idade.sql", "original_file_path": "models\\dim_matricula_faixa_idade\\dim_matricula_faixa_idade.sql", "unique_id": "model.exp.dim_matricula_faixa_idade", "fqn": ["exp", "dim_matricula_faixa_idade", "dim_matricula_faixa_idade"], "alias": "dim_matricula_faixa_idade", "checksum": {"name": "sha256", "checksum": "de458cf0b78c3327b8d69267a7c6aea460133cbea589308af959cca6d52587a0"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Quantidade de matriculas por munic\u00edpio e faixa et\u00e1ria", "columns": {"ANO": {"name": "ANO", "description": "Ano do Censo Educacional", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do munic\u00edpio", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "QT_MAT_0_3": {"name": "QT_MAT_0_3", "description": "Quantidade de matr\u00edculas para idade entre 0 e 3 anos", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "QT_MAT_4_5": {"name": "QT_MAT_4_5", "description": "Quantidade de matr\u00edculas para idade entre 4 e 5 anos", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "QT_MAT_6_10": {"name": "QT_MAT_6_10", "description": "Quantidade de matr\u00edculas para idade entre 6 e 10 anos", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "QT_MAT_11_14": {"name": "QT_MAT_11_14", "description": "Quantidade de matr\u00edculas para idade entre 11 e 14 anos", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "QT_MAT_15_17": {"name": "QT_MAT_15_17", "description": "Quantidade de matr\u00edculas para idade entre 15 e 17 anos", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.5338707, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_matricula_faixa_idade\"", "raw_code": "SELECT\r\n    CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\r\n    CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\r\n    CAST(SUM(\"QT_MAT_BAS_0_3\") AS INT) AS \"QT_MAT_0_3\",\r\n    CAST(SUM(\"QT_MAT_BAS_4_5\") AS INT) AS \"QT_MAT_4_5\",\r\n    CAST(SUM(\"QT_MAT_BAS_6_10\") AS INT) AS \"QT_MAT_6_10\",\r\n    CAST(SUM(\"QT_MAT_BAS_11_14\") AS INT) AS \"QT_MAT_11_14\",\r\n    CAST(SUM(\"QT_MAT_BAS_15_17\") AS INT) AS \"QT_MAT_15_17\"\r\nFROM (\r\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"QT_MAT_BAS_0_3\", \"QT_MAT_BAS_4_5\", \"QT_MAT_BAS_6_10\", \"QT_MAT_BAS_11_14\", \"QT_MAT_BAS_15_17\" FROM {{source(\"raw\", \"DIM_MICRODADOS_ED_BASICA_2014\") }}\r\n    UNION ALL\r\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"QT_MAT_BAS_0_3\", \"QT_MAT_BAS_4_5\", \"QT_MAT_BAS_6_10\", \"QT_MAT_BAS_11_14\", \"QT_MAT_BAS_15_17\" FROM {{source(\"raw\", \"DIM_MICRODADOS_ED_BASICA_2015\") }}\r\n    UNION ALL\r\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"QT_MAT_BAS_0_3\", \"QT_MAT_BAS_4_5\", \"QT_MAT_BAS_6_10\", \"QT_MAT_BAS_11_14\", \"QT_MAT_BAS_15_17\" FROM {{source(\"raw\", \"DIM_MICRODADOS_ED_BASICA_2016\") }}\r\n    UNION ALL\r\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"QT_MAT_BAS_0_3\", \"QT_MAT_BAS_4_5\", \"QT_MAT_BAS_6_10\", \"QT_MAT_BAS_11_14\", \"QT_MAT_BAS_15_17\" FROM {{source(\"raw\", \"DIM_MICRODADOS_ED_BASICA_2017\") }}\r\n    UNION ALL\r\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"QT_MAT_BAS_0_3\", \"QT_MAT_BAS_4_5\", \"QT_MAT_BAS_6_10\", \"QT_MAT_BAS_11_14\", \"QT_MAT_BAS_15_17\" FROM {{source(\"raw\", \"DIM_MICRODADOS_ED_BASICA_2018\") }}\r\n    UNION ALL\r\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"QT_MAT_BAS_0_3\", \"QT_MAT_BAS_4_5\", \"QT_MAT_BAS_6_10\", \"QT_MAT_BAS_11_14\", \"QT_MAT_BAS_15_17\" FROM {{source(\"raw\", \"DIM_MICRODADOS_ED_BASICA_2019\") }}\r\n    UNION ALL\r\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"QT_MAT_BAS_0_3\", \"QT_MAT_BAS_4_5\", \"QT_MAT_BAS_6_10\", \"QT_MAT_BAS_11_14\", \"QT_MAT_BAS_15_17\" FROM {{source(\"raw\", \"DIM_MICRODADOS_ED_BASICA_2020\") }}\r\n    UNION ALL\r\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"QT_MAT_BAS_0_3\", \"QT_MAT_BAS_4_5\", \"QT_MAT_BAS_6_10\", \"QT_MAT_BAS_11_14\", \"QT_MAT_BAS_15_17\" FROM {{source(\"raw\", \"DIM_MICRODADOS_ED_BASICA_2021\") }}\r\n) AS dim_matricula_faixa_idade\r\nGROUP BY \"NU_ANO_CENSO\", \"CO_MUNICIPIO\"", "language": "sql", "refs": [], "sources": [["raw", "DIM_MICRODADOS_ED_BASICA_2021"], ["raw", "DIM_MICRODADOS_ED_BASICA_2016"], ["raw", "DIM_MICRODADOS_ED_BASICA_2014"], ["raw", "DIM_MICRODADOS_ED_BASICA_2020"], ["raw", "DIM_MICRODADOS_ED_BASICA_2017"], ["raw", "DIM_MICRODADOS_ED_BASICA_2019"], ["raw", "DIM_MICRODADOS_ED_BASICA_2018"], ["raw", "DIM_MICRODADOS_ED_BASICA_2015"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_MICRODADOS_ED_BASICA_2021", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2016", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2014", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2020", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2017", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2019", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2018", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2015"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_matricula_faixa_idade\\dim_matricula_faixa_idade.sql", "compiled": true, "compiled_code": "SELECT\n    CAST(\"NU_ANO_CENSO\" AS INT) AS \"ANO\",\n    CAST(\"CO_MUNICIPIO\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n    CAST(SUM(\"QT_MAT_BAS_0_3\") AS INT) AS \"QT_MAT_0_3\",\n    CAST(SUM(\"QT_MAT_BAS_4_5\") AS INT) AS \"QT_MAT_4_5\",\n    CAST(SUM(\"QT_MAT_BAS_6_10\") AS INT) AS \"QT_MAT_6_10\",\n    CAST(SUM(\"QT_MAT_BAS_11_14\") AS INT) AS \"QT_MAT_11_14\",\n    CAST(SUM(\"QT_MAT_BAS_15_17\") AS INT) AS \"QT_MAT_15_17\"\nFROM (\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"QT_MAT_BAS_0_3\", \"QT_MAT_BAS_4_5\", \"QT_MAT_BAS_6_10\", \"QT_MAT_BAS_11_14\", \"QT_MAT_BAS_15_17\" FROM \"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2014\"\n    UNION ALL\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"QT_MAT_BAS_0_3\", \"QT_MAT_BAS_4_5\", \"QT_MAT_BAS_6_10\", \"QT_MAT_BAS_11_14\", \"QT_MAT_BAS_15_17\" FROM \"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2015\"\n    UNION ALL\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"QT_MAT_BAS_0_3\", \"QT_MAT_BAS_4_5\", \"QT_MAT_BAS_6_10\", \"QT_MAT_BAS_11_14\", \"QT_MAT_BAS_15_17\" FROM \"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2016\"\n    UNION ALL\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"QT_MAT_BAS_0_3\", \"QT_MAT_BAS_4_5\", \"QT_MAT_BAS_6_10\", \"QT_MAT_BAS_11_14\", \"QT_MAT_BAS_15_17\" FROM \"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2017\"\n    UNION ALL\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"QT_MAT_BAS_0_3\", \"QT_MAT_BAS_4_5\", \"QT_MAT_BAS_6_10\", \"QT_MAT_BAS_11_14\", \"QT_MAT_BAS_15_17\" FROM \"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2018\"\n    UNION ALL\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"QT_MAT_BAS_0_3\", \"QT_MAT_BAS_4_5\", \"QT_MAT_BAS_6_10\", \"QT_MAT_BAS_11_14\", \"QT_MAT_BAS_15_17\" FROM \"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2019\"\n    UNION ALL\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"QT_MAT_BAS_0_3\", \"QT_MAT_BAS_4_5\", \"QT_MAT_BAS_6_10\", \"QT_MAT_BAS_11_14\", \"QT_MAT_BAS_15_17\" FROM \"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2020\"\n    UNION ALL\n    SELECT \"NU_ANO_CENSO\", \"CO_MUNICIPIO\", \"QT_MAT_BAS_0_3\", \"QT_MAT_BAS_4_5\", \"QT_MAT_BAS_6_10\", \"QT_MAT_BAS_11_14\", \"QT_MAT_BAS_15_17\" FROM \"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2021\"\n) AS dim_matricula_faixa_idade\nGROUP BY \"NU_ANO_CENSO\", \"CO_MUNICIPIO\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_siconfi_20": {"database": "postgres", "schema": "dbt_staging", "name": "dim_siconfi_20", "resource_type": "model", "package_name": "exp", "path": "dim_siconfi_20\\dim_siconfi_20.sql", "original_file_path": "models\\dim_siconfi_20\\dim_siconfi_20.sql", "unique_id": "model.exp.dim_siconfi_20", "fqn": ["exp", "dim_siconfi_20", "dim_siconfi_20"], "alias": "dim_siconfi_20", "checksum": {"name": "sha256", "checksum": "10700b2467ddd4f8f0eda9cc9f2667442bc306fd82c6c617cabedf97b7446396"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.2145753, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_siconfi_20\"", "raw_code": "{% set years = [2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022] %}\r\n\r\n{% for year in years %}\r\nSELECT\r\n    *\r\nFROM\r\n    (SELECT\r\n        {{year}} AS \"ANO\",\r\n        CAST(\"COD_IBGE\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\r\n        \"CONTA\",\r\n        SUM(\"VALOR\") as \"VALOR\"\r\n    FROM\r\n        {{source(\"raw\", \"DIM_SICONFI_MUN_DESPESASPORFUNCAO_\" ~ year) }}\r\n    WHERE\r\n        \"CONTA\" IN ('12 - Educa\u00e7\u00e3o', '28.847 - Transfer\u00eancias para a Educa\u00e7\u00e3o B\u00e1sica')\r\n    GROUP BY \"ANO\", \"COD_IBGE\", \"CONTA\"\r\n    ORDER BY \"ANO\", \"FK_MUNICIPIO_CODIGO\") AS TEMP\r\n    {% if not loop.last %}\r\n    UNION ALL\r\n{% endif %}\r\n{% endfor %}", "language": "sql", "refs": [], "sources": [["raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2013"], ["raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2014"], ["raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2015"], ["raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2016"], ["raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2017"], ["raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2018"], ["raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2019"], ["raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2020"], ["raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2021"], ["raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2022"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2013", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2014", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2015", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2016", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2017", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2018", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2019", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2020", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2021", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2022"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_siconfi_20\\dim_siconfi_20.sql", "compiled": true, "compiled_code": "\n\n\nSELECT\n    *\nFROM\n    (SELECT\n        2013 AS \"ANO\",\n        CAST(\"COD_IBGE\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"CONTA\",\n        SUM(\"VALOR\") as \"VALOR\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2013\"\n    WHERE\n        \"CONTA\" IN ('12 - Educa\u00e7\u00e3o', '28.847 - Transfer\u00eancias para a Educa\u00e7\u00e3o B\u00e1sica')\n    GROUP BY \"ANO\", \"COD_IBGE\", \"CONTA\"\n    ORDER BY \"ANO\", \"FK_MUNICIPIO_CODIGO\") AS TEMP\n    \n    UNION ALL\n\n\nSELECT\n    *\nFROM\n    (SELECT\n        2014 AS \"ANO\",\n        CAST(\"COD_IBGE\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"CONTA\",\n        SUM(\"VALOR\") as \"VALOR\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2014\"\n    WHERE\n        \"CONTA\" IN ('12 - Educa\u00e7\u00e3o', '28.847 - Transfer\u00eancias para a Educa\u00e7\u00e3o B\u00e1sica')\n    GROUP BY \"ANO\", \"COD_IBGE\", \"CONTA\"\n    ORDER BY \"ANO\", \"FK_MUNICIPIO_CODIGO\") AS TEMP\n    \n    UNION ALL\n\n\nSELECT\n    *\nFROM\n    (SELECT\n        2015 AS \"ANO\",\n        CAST(\"COD_IBGE\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"CONTA\",\n        SUM(\"VALOR\") as \"VALOR\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2015\"\n    WHERE\n        \"CONTA\" IN ('12 - Educa\u00e7\u00e3o', '28.847 - Transfer\u00eancias para a Educa\u00e7\u00e3o B\u00e1sica')\n    GROUP BY \"ANO\", \"COD_IBGE\", \"CONTA\"\n    ORDER BY \"ANO\", \"FK_MUNICIPIO_CODIGO\") AS TEMP\n    \n    UNION ALL\n\n\nSELECT\n    *\nFROM\n    (SELECT\n        2016 AS \"ANO\",\n        CAST(\"COD_IBGE\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"CONTA\",\n        SUM(\"VALOR\") as \"VALOR\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2016\"\n    WHERE\n        \"CONTA\" IN ('12 - Educa\u00e7\u00e3o', '28.847 - Transfer\u00eancias para a Educa\u00e7\u00e3o B\u00e1sica')\n    GROUP BY \"ANO\", \"COD_IBGE\", \"CONTA\"\n    ORDER BY \"ANO\", \"FK_MUNICIPIO_CODIGO\") AS TEMP\n    \n    UNION ALL\n\n\nSELECT\n    *\nFROM\n    (SELECT\n        2017 AS \"ANO\",\n        CAST(\"COD_IBGE\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"CONTA\",\n        SUM(\"VALOR\") as \"VALOR\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2017\"\n    WHERE\n        \"CONTA\" IN ('12 - Educa\u00e7\u00e3o', '28.847 - Transfer\u00eancias para a Educa\u00e7\u00e3o B\u00e1sica')\n    GROUP BY \"ANO\", \"COD_IBGE\", \"CONTA\"\n    ORDER BY \"ANO\", \"FK_MUNICIPIO_CODIGO\") AS TEMP\n    \n    UNION ALL\n\n\nSELECT\n    *\nFROM\n    (SELECT\n        2018 AS \"ANO\",\n        CAST(\"COD_IBGE\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"CONTA\",\n        SUM(\"VALOR\") as \"VALOR\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2018\"\n    WHERE\n        \"CONTA\" IN ('12 - Educa\u00e7\u00e3o', '28.847 - Transfer\u00eancias para a Educa\u00e7\u00e3o B\u00e1sica')\n    GROUP BY \"ANO\", \"COD_IBGE\", \"CONTA\"\n    ORDER BY \"ANO\", \"FK_MUNICIPIO_CODIGO\") AS TEMP\n    \n    UNION ALL\n\n\nSELECT\n    *\nFROM\n    (SELECT\n        2019 AS \"ANO\",\n        CAST(\"COD_IBGE\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"CONTA\",\n        SUM(\"VALOR\") as \"VALOR\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2019\"\n    WHERE\n        \"CONTA\" IN ('12 - Educa\u00e7\u00e3o', '28.847 - Transfer\u00eancias para a Educa\u00e7\u00e3o B\u00e1sica')\n    GROUP BY \"ANO\", \"COD_IBGE\", \"CONTA\"\n    ORDER BY \"ANO\", \"FK_MUNICIPIO_CODIGO\") AS TEMP\n    \n    UNION ALL\n\n\nSELECT\n    *\nFROM\n    (SELECT\n        2020 AS \"ANO\",\n        CAST(\"COD_IBGE\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"CONTA\",\n        SUM(\"VALOR\") as \"VALOR\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2020\"\n    WHERE\n        \"CONTA\" IN ('12 - Educa\u00e7\u00e3o', '28.847 - Transfer\u00eancias para a Educa\u00e7\u00e3o B\u00e1sica')\n    GROUP BY \"ANO\", \"COD_IBGE\", \"CONTA\"\n    ORDER BY \"ANO\", \"FK_MUNICIPIO_CODIGO\") AS TEMP\n    \n    UNION ALL\n\n\nSELECT\n    *\nFROM\n    (SELECT\n        2021 AS \"ANO\",\n        CAST(\"COD_IBGE\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"CONTA\",\n        SUM(\"VALOR\") as \"VALOR\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2021\"\n    WHERE\n        \"CONTA\" IN ('12 - Educa\u00e7\u00e3o', '28.847 - Transfer\u00eancias para a Educa\u00e7\u00e3o B\u00e1sica')\n    GROUP BY \"ANO\", \"COD_IBGE\", \"CONTA\"\n    ORDER BY \"ANO\", \"FK_MUNICIPIO_CODIGO\") AS TEMP\n    \n    UNION ALL\n\n\nSELECT\n    *\nFROM\n    (SELECT\n        2022 AS \"ANO\",\n        CAST(\"COD_IBGE\" AS INT) AS \"FK_MUNICIPIO_CODIGO\",\n        \"CONTA\",\n        SUM(\"VALOR\") as \"VALOR\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2022\"\n    WHERE\n        \"CONTA\" IN ('12 - Educa\u00e7\u00e3o', '28.847 - Transfer\u00eancias para a Educa\u00e7\u00e3o B\u00e1sica')\n    GROUP BY \"ANO\", \"COD_IBGE\", \"CONTA\"\n    ORDER BY \"ANO\", \"FK_MUNICIPIO_CODIGO\") AS TEMP\n    \n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_15": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_15", "resource_type": "model", "package_name": "exp", "path": "educ_bas_docentes_15\\dim_educ_bas_docentes_15.sql", "original_file_path": "models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15.sql", "unique_id": "model.exp.dim_educ_bas_docentes_15", "fqn": ["exp", "educ_bas_docentes_15", "dim_educ_bas_docentes_15"], "alias": "dim_educ_bas_docentes_15", "checksum": {"name": "sha256", "checksum": "50d7037c9c6bd8e3d16a52bc5f8100cbcaa070394914020d17609644f92cd876"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.2225783, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15\"", "raw_code": "-- 55 seg\r\n{% set list_tables = [\"dim_educ_bas_docentes_15a_2014_to_2018\",\r\n                      \"dim_educ_bas_docentes_15a_2019_2020\",\r\n                      \"dim_educ_bas_docentes_15b_2014_to_2018\",\r\n                      \"dim_educ_bas_docentes_15b_2019_2020\",\r\n                      \"dim_educ_bas_docentes_15cd_2014_to_2018\",\r\n                      \"dim_educ_bas_docentes_15cd_2019_2020\"] %}\r\n{% for table_ in list_tables %}\r\n    SELECT\r\n        \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\",\r\n        REPLACE(\"DISCIPLINA_NOME\", 'IN_DISC_', '') AS \"DISCIPLINA_NOME\",\r\n        \"FORMACAO_COD\", \"FORMACAO_NOME\", \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\r\n    FROM\r\n        {{ ref(table_) }}\r\n{% if not loop.last %}\r\n    UNION ALL\r\n{% endif %}\r\n{% endfor %}", "language": "sql", "refs": [{"name": "dim_educ_bas_docentes_15a_2014_to_2018", "package": null, "version": null}, {"name": "dim_educ_bas_docentes_15a_2019_2020", "package": null, "version": null}, {"name": "dim_educ_bas_docentes_15b_2014_to_2018", "package": null, "version": null}, {"name": "dim_educ_bas_docentes_15b_2019_2020", "package": null, "version": null}, {"name": "dim_educ_bas_docentes_15cd_2014_to_2018", "package": null, "version": null}, {"name": "dim_educ_bas_docentes_15cd_2019_2020", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_15a_2019_2020", "model.exp.dim_educ_bas_docentes_15b_2014_to_2018", "model.exp.dim_educ_bas_docentes_15b_2019_2020", "model.exp.dim_educ_bas_docentes_15cd_2014_to_2018", "model.exp.dim_educ_bas_docentes_15cd_2019_2020"]}, "compiled_path": "target\\compiled\\exp\\models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15.sql", "compiled": true, "compiled_code": "-- 55 seg\n\n\n    SELECT\n        \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\",\n        REPLACE(\"DISCIPLINA_NOME\", 'IN_DISC_', '') AS \"DISCIPLINA_NOME\",\n        \"FORMACAO_COD\", \"FORMACAO_NOME\", \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\n    FROM\n        \"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15a_2014_to_2018\"\n\n    UNION ALL\n\n\n    SELECT\n        \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\",\n        REPLACE(\"DISCIPLINA_NOME\", 'IN_DISC_', '') AS \"DISCIPLINA_NOME\",\n        \"FORMACAO_COD\", \"FORMACAO_NOME\", \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\n    FROM\n        \"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15a_2019_2020\"\n\n    UNION ALL\n\n\n    SELECT\n        \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\",\n        REPLACE(\"DISCIPLINA_NOME\", 'IN_DISC_', '') AS \"DISCIPLINA_NOME\",\n        \"FORMACAO_COD\", \"FORMACAO_NOME\", \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\n    FROM\n        \"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15b_2014_to_2018\"\n\n    UNION ALL\n\n\n    SELECT\n        \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\",\n        REPLACE(\"DISCIPLINA_NOME\", 'IN_DISC_', '') AS \"DISCIPLINA_NOME\",\n        \"FORMACAO_COD\", \"FORMACAO_NOME\", \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\n    FROM\n        \"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15b_2019_2020\"\n\n    UNION ALL\n\n\n    SELECT\n        \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\",\n        REPLACE(\"DISCIPLINA_NOME\", 'IN_DISC_', '') AS \"DISCIPLINA_NOME\",\n        \"FORMACAO_COD\", \"FORMACAO_NOME\", \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\n    FROM\n        \"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15cd_2014_to_2018\"\n\n    UNION ALL\n\n\n    SELECT\n        \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\",\n        REPLACE(\"DISCIPLINA_NOME\", 'IN_DISC_', '') AS \"DISCIPLINA_NOME\",\n        \"FORMACAO_COD\", \"FORMACAO_NOME\", \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\n    FROM\n        \"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15cd_2019_2020\"\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_15a_2014_to_2018": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_15a_2014_to_2018", "resource_type": "model", "package_name": "exp", "path": "educ_bas_docentes_15\\dim_educ_bas_docentes_15a_2014_to_2018.sql", "original_file_path": "models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15a_2014_to_2018.sql", "unique_id": "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "fqn": ["exp", "educ_bas_docentes_15", "dim_educ_bas_docentes_15a_2014_to_2018"], "alias": "dim_educ_bas_docentes_15a_2014_to_2018", "checksum": {"name": "sha256", "checksum": "245e874b727f909c3bc38e1842df6c9e67c429bdb40a1a5d6c51f81129085e3f"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.229546, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15a_2014_to_2018\"", "raw_code": "-- 40 min\r\nWITH FORMACOES_ADEQUADAS_LICENCIATURA as (\r\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\r\n        FROM {{ source(\"raw\", \"DIM_FORMACAO_ADEQUADA\") }}\r\n        WHERE \"COM_PEDAGO\"=0),\r\n    FORMACOES_ADEQUADAS_BACHARELADO as (\r\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\r\n        FROM {{ source(\"raw\", \"DIM_FORMACAO_ADEQUADA\") }}\r\n        WHERE \"COM_PEDAGO\"=1),\r\n    DOCENTES_RAW as (\r\n        SELECT\r\n            *,\r\n            'MULTIDISCIPLINAR' as \"DISCIPLINA_NOME\",\r\n            '1_ENSINO_INFANTIL' as \"ETAPA\",\r\n            -- Cancel courses that \"in progress\"\r\n            CASE WHEN \"TP_SITUACAO_CURSO_1\"=1 THEN \"CO_CURSO_1\" ELSE '' END AS \"COD_CURSO_1\",\r\n            CASE WHEN \"TP_SITUACAO_CURSO_2\"=1 THEN \"CO_CURSO_2\" ELSE '' END AS \"COD_CURSO_2\",\r\n            CASE WHEN \"TP_SITUACAO_CURSO_3\"=1 THEN \"CO_CURSO_3\" ELSE '' END AS \"COD_CURSO_3\"\r\n        FROM\r\n            (\r\n            -- {% set years = [2014, 2015] %}\r\n            -- {% set regions = [\"CO\", \"NORTE\"] %}\r\n            {% set years = [2014, 2015, 2016, 2017, 2018] %}\r\n            {% set regions = [\"CO\", \"NORTE\", \"NORDESTE\", \"SUDESTE\", \"SUL\"] %}\r\n            {% for region in regions %}\r\n                {% for year_ in years %}\r\n                SELECT\r\n                    {{year_}} as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\r\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\r\n                FROM\r\n                    {{source(\"raw\", \"DIM_DOCENTES_\" ~ region ~ \"_\" ~ year_) }}\r\n                {% if not loop.last %}\r\n                UNION ALL\r\n                {% endif %}\r\n                {% endfor %}\r\n            {% if not loop.last %}\r\n                UNION ALL\r\n            {% endif %}\r\n            {% endfor %}\r\n            ) as tbs_raw\r\n        -- 'where clause' out of the loop was 15% faster than inside the loop\r\n        WHERE \"TP_ETAPA_ENSINO\" in (1, 2, 3) and \"TP_TIPO_DOCENTE\" in (1, 5, 6)\r\n        ),\r\n    ADEQUACAO_BASE as (\r\n        SELECT *,\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                    WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                          FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\r\n                ) THEN 1 ELSE 0\r\n            END AS \"CURSO_1_ADEQUADO_LICEN\",\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                    WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                          FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\r\n                ) THEN 1 ELSE 0\r\n            END AS \"CURSO_1_BACH\",\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                    WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                          FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\r\n                ) THEN 1 ELSE 0\r\n            END AS \"CURSO_2_ADEQUADO_LICEN\",\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                    WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                          FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\r\n                ) THEN 1 ELSE 0\r\n            END AS \"CURSO_2_BACH\",\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                    WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                          FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\r\n                ) THEN 1 ELSE 0\r\n            END AS \"CURSO_3_ADEQUADO_LICEN\",\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                    WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                          FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\r\n                ) THEN 1 ELSE 0\r\n            END AS \"CURSO_3_BACH\"\r\n        FROM\r\n            DOCENTES_RAW),\r\n    ADEQUACAO_FINAL as (SELECT *,\r\n            CASE WHEN \"IN_COM_PEDAGOGICA_1\"=1 AND \"CURSO_1_BACH\"=1 THEN 1 ELSE 0 END AS \"CURSO_1_ADEQUADO_BACH\",\r\n            CASE WHEN \"IN_COM_PEDAGOGICA_2\"=1 AND \"CURSO_2_BACH\"=1 THEN 1 ELSE 0 END AS \"CURSO_2_ADEQUADO_BACH\",\r\n            CASE WHEN \"IN_COM_PEDAGOGICA_3\"=1 AND \"CURSO_3_BACH\"=1 THEN 1 ELSE 0 END AS \"CURSO_3_ADEQUADO_BACH\"\r\n        FROM ADEQUACAO_BASE),\r\n    CODIGOS_FORMACAO as(\r\n        SELECT *,\r\n            COALESCE(\"COD_CURSO_1\", '') || '|' || COALESCE(\"COD_CURSO_2\", '') || '|' || COALESCE(\"COD_CURSO_3\", '') AS \"CODIGO_FORMACAO_DRAFT\",\r\n            CASE WHEN \"CURSO_1_ADEQUADO_LICEN\"=1 OR \"CURSO_1_ADEQUADO_BACH\"=1 OR\r\n                      \"CURSO_2_ADEQUADO_LICEN\"=1 OR \"CURSO_2_ADEQUADO_BACH\"=1 OR\r\n                      \"CURSO_3_ADEQUADO_LICEN\"=1 OR \"CURSO_3_ADEQUADO_BACH\"=1\r\n                      THEN 1 ELSE 0\r\n                END AS \"FORMACAO_ADEQUADA\",\r\n            1 as \"DOCENCIA_TOTAL\"\r\n        FROM ADEQUACAO_FINAL),\r\n    NOMES_FORMACAO as (\r\n        SELECT *,\r\n            COALESCE(\"FORMACAO_1\".\"CURSO\", '') || '|' || COALESCE(\"FORMACAO_2\".\"CURSO\", '') || '|' || COALESCE(\"FORMACAO_3\".\"CURSO\", '') AS \"NOME_FORMACAO_DRAFT\"\r\n        FROM CODIGOS_FORMACAO\r\n        LEFT JOIN {{source(\"raw\", \"DIM_CURSO_SUPERIOR\")}} AS \"FORMACAO_1\" ON CODIGOS_FORMACAO.\"COD_CURSO_1\" = \"FORMACAO_1\".\"CODIGO\"\r\n        LEFT JOIN {{source(\"raw\", \"DIM_CURSO_SUPERIOR\")}} AS \"FORMACAO_2\" ON CODIGOS_FORMACAO.\"COD_CURSO_2\" = \"FORMACAO_2\".\"CODIGO\"\r\n        LEFT JOIN {{source(\"raw\", \"DIM_CURSO_SUPERIOR\")}} AS \"FORMACAO_3\" ON CODIGOS_FORMACAO.\"COD_CURSO_3\" = \"FORMACAO_3\".\"CODIGO\"),\r\n    RESULTADOS_FORMACAO_ADEQUADA as (\r\n        SELECT\r\n            \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\",\r\n            REGEXP_REPLACE(\"CODIGO_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_COD\",\r\n            REGEXP_REPLACE(\"NOME_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_NOME\",\r\n            \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\r\n        FROM NOMES_FORMACAO)\r\n\r\nSELECT\r\n    \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\",\r\n    SUM(\"FORMACAO_ADEQUADA\") AS \"FORMACAO_ADEQUADA\",\r\n    SUM(\"DOCENCIA_TOTAL\") AS \"DOCENCIA_TOTAL\"\r\nFROM RESULTADOS_FORMACAO_ADEQUADA\r\nGROUP BY\r\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"ETAPA\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\"\r\nORDER BY\r\n    \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_ADEQUADA\"", "language": "sql", "refs": [], "sources": [["raw", "DIM_FORMACAO_ADEQUADA"], ["raw", "DIM_FORMACAO_ADEQUADA"], ["raw", "DIM_DOCENTES_CO_2014"], ["raw", "DIM_DOCENTES_CO_2015"], ["raw", "DIM_DOCENTES_CO_2016"], ["raw", "DIM_DOCENTES_CO_2017"], ["raw", "DIM_DOCENTES_CO_2018"], ["raw", "DIM_DOCENTES_NORTE_2014"], ["raw", "DIM_DOCENTES_NORTE_2015"], ["raw", "DIM_DOCENTES_NORTE_2016"], ["raw", "DIM_DOCENTES_NORTE_2017"], ["raw", "DIM_DOCENTES_NORTE_2018"], ["raw", "DIM_DOCENTES_NORDESTE_2014"], ["raw", "DIM_DOCENTES_NORDESTE_2015"], ["raw", "DIM_DOCENTES_NORDESTE_2016"], ["raw", "DIM_DOCENTES_NORDESTE_2017"], ["raw", "DIM_DOCENTES_NORDESTE_2018"], ["raw", "DIM_DOCENTES_SUDESTE_2014"], ["raw", "DIM_DOCENTES_SUDESTE_2015"], ["raw", "DIM_DOCENTES_SUDESTE_2016"], ["raw", "DIM_DOCENTES_SUDESTE_2017"], ["raw", "DIM_DOCENTES_SUDESTE_2018"], ["raw", "DIM_DOCENTES_SUL_2014"], ["raw", "DIM_DOCENTES_SUL_2015"], ["raw", "DIM_DOCENTES_SUL_2016"], ["raw", "DIM_DOCENTES_SUL_2017"], ["raw", "DIM_DOCENTES_SUL_2018"], ["raw", "DIM_CURSO_SUPERIOR"], ["raw", "DIM_CURSO_SUPERIOR"], ["raw", "DIM_CURSO_SUPERIOR"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_FORMACAO_ADEQUADA", "source.exp.raw.DIM_FORMACAO_ADEQUADA", "source.exp.raw.DIM_DOCENTES_CO_2014", "source.exp.raw.DIM_DOCENTES_CO_2015", "source.exp.raw.DIM_DOCENTES_CO_2016", "source.exp.raw.DIM_DOCENTES_CO_2017", "source.exp.raw.DIM_DOCENTES_CO_2018", "source.exp.raw.DIM_DOCENTES_NORTE_2014", "source.exp.raw.DIM_DOCENTES_NORTE_2015", "source.exp.raw.DIM_DOCENTES_NORTE_2016", "source.exp.raw.DIM_DOCENTES_NORTE_2017", "source.exp.raw.DIM_DOCENTES_NORTE_2018", "source.exp.raw.DIM_DOCENTES_NORDESTE_2014", "source.exp.raw.DIM_DOCENTES_NORDESTE_2015", "source.exp.raw.DIM_DOCENTES_NORDESTE_2016", "source.exp.raw.DIM_DOCENTES_NORDESTE_2017", "source.exp.raw.DIM_DOCENTES_NORDESTE_2018", "source.exp.raw.DIM_DOCENTES_SUDESTE_2014", "source.exp.raw.DIM_DOCENTES_SUDESTE_2015", "source.exp.raw.DIM_DOCENTES_SUDESTE_2016", "source.exp.raw.DIM_DOCENTES_SUDESTE_2017", "source.exp.raw.DIM_DOCENTES_SUDESTE_2018", "source.exp.raw.DIM_DOCENTES_SUL_2014", "source.exp.raw.DIM_DOCENTES_SUL_2015", "source.exp.raw.DIM_DOCENTES_SUL_2016", "source.exp.raw.DIM_DOCENTES_SUL_2017", "source.exp.raw.DIM_DOCENTES_SUL_2018", "source.exp.raw.DIM_CURSO_SUPERIOR", "source.exp.raw.DIM_CURSO_SUPERIOR", "source.exp.raw.DIM_CURSO_SUPERIOR"]}, "compiled_path": "target\\compiled\\exp\\models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15a_2014_to_2018.sql", "compiled": true, "compiled_code": "-- 40 min\nWITH FORMACOES_ADEQUADAS_LICENCIATURA as (\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\n        FROM \"postgres\".\"raw\".\"DIM_FORMACAO_ADEQUADA\"\n        WHERE \"COM_PEDAGO\"=0),\n    FORMACOES_ADEQUADAS_BACHARELADO as (\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\n        FROM \"postgres\".\"raw\".\"DIM_FORMACAO_ADEQUADA\"\n        WHERE \"COM_PEDAGO\"=1),\n    DOCENTES_RAW as (\n        SELECT\n            *,\n            'MULTIDISCIPLINAR' as \"DISCIPLINA_NOME\",\n            '1_ENSINO_INFANTIL' as \"ETAPA\",\n            -- Cancel courses that \"in progress\"\n            CASE WHEN \"TP_SITUACAO_CURSO_1\"=1 THEN \"CO_CURSO_1\" ELSE '' END AS \"COD_CURSO_1\",\n            CASE WHEN \"TP_SITUACAO_CURSO_2\"=1 THEN \"CO_CURSO_2\" ELSE '' END AS \"COD_CURSO_2\",\n            CASE WHEN \"TP_SITUACAO_CURSO_3\"=1 THEN \"CO_CURSO_3\" ELSE '' END AS \"COD_CURSO_3\"\n        FROM\n            (\n            -- \n            -- \n            \n            \n            \n                \n                SELECT\n                    2014 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2014\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2015 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2015\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2016 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2016\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2017 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2017\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2018 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2018\"\n                \n                \n            \n                UNION ALL\n            \n            \n                \n                SELECT\n                    2014 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2014\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2015 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2015\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2016 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2016\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2017 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2017\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2018 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2018\"\n                \n                \n            \n                UNION ALL\n            \n            \n                \n                SELECT\n                    2014 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2014\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2015 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2015\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2016 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2016\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2017 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2017\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2018 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2018\"\n                \n                \n            \n                UNION ALL\n            \n            \n                \n                SELECT\n                    2014 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2014\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2015 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2015\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2016 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2016\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2017 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2017\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2018 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2018\"\n                \n                \n            \n                UNION ALL\n            \n            \n                \n                SELECT\n                    2014 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2014\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2015 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2015\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2016 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2016\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2017 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2017\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2018 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2018\"\n                \n                \n            \n            \n            ) as tbs_raw\n        -- 'where clause' out of the loop was 15% faster than inside the loop\n        WHERE \"TP_ETAPA_ENSINO\" in (1, 2, 3) and \"TP_TIPO_DOCENTE\" in (1, 5, 6)\n        ),\n    ADEQUACAO_BASE as (\n        SELECT *,\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                    WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                          FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\n                ) THEN 1 ELSE 0\n            END AS \"CURSO_1_ADEQUADO_LICEN\",\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM FORMACOES_ADEQUADAS_BACHARELADO\n                    WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                          FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\n                ) THEN 1 ELSE 0\n            END AS \"CURSO_1_BACH\",\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                    WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                          FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\n                ) THEN 1 ELSE 0\n            END AS \"CURSO_2_ADEQUADO_LICEN\",\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM FORMACOES_ADEQUADAS_BACHARELADO\n                    WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                          FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\n                ) THEN 1 ELSE 0\n            END AS \"CURSO_2_BACH\",\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                    WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                          FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\n                ) THEN 1 ELSE 0\n            END AS \"CURSO_3_ADEQUADO_LICEN\",\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM FORMACOES_ADEQUADAS_BACHARELADO\n                    WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                          FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\n                ) THEN 1 ELSE 0\n            END AS \"CURSO_3_BACH\"\n        FROM\n            DOCENTES_RAW),\n    ADEQUACAO_FINAL as (SELECT *,\n            CASE WHEN \"IN_COM_PEDAGOGICA_1\"=1 AND \"CURSO_1_BACH\"=1 THEN 1 ELSE 0 END AS \"CURSO_1_ADEQUADO_BACH\",\n            CASE WHEN \"IN_COM_PEDAGOGICA_2\"=1 AND \"CURSO_2_BACH\"=1 THEN 1 ELSE 0 END AS \"CURSO_2_ADEQUADO_BACH\",\n            CASE WHEN \"IN_COM_PEDAGOGICA_3\"=1 AND \"CURSO_3_BACH\"=1 THEN 1 ELSE 0 END AS \"CURSO_3_ADEQUADO_BACH\"\n        FROM ADEQUACAO_BASE),\n    CODIGOS_FORMACAO as(\n        SELECT *,\n            COALESCE(\"COD_CURSO_1\", '') || '|' || COALESCE(\"COD_CURSO_2\", '') || '|' || COALESCE(\"COD_CURSO_3\", '') AS \"CODIGO_FORMACAO_DRAFT\",\n            CASE WHEN \"CURSO_1_ADEQUADO_LICEN\"=1 OR \"CURSO_1_ADEQUADO_BACH\"=1 OR\n                      \"CURSO_2_ADEQUADO_LICEN\"=1 OR \"CURSO_2_ADEQUADO_BACH\"=1 OR\n                      \"CURSO_3_ADEQUADO_LICEN\"=1 OR \"CURSO_3_ADEQUADO_BACH\"=1\n                      THEN 1 ELSE 0\n                END AS \"FORMACAO_ADEQUADA\",\n            1 as \"DOCENCIA_TOTAL\"\n        FROM ADEQUACAO_FINAL),\n    NOMES_FORMACAO as (\n        SELECT *,\n            COALESCE(\"FORMACAO_1\".\"CURSO\", '') || '|' || COALESCE(\"FORMACAO_2\".\"CURSO\", '') || '|' || COALESCE(\"FORMACAO_3\".\"CURSO\", '') AS \"NOME_FORMACAO_DRAFT\"\n        FROM CODIGOS_FORMACAO\n        LEFT JOIN \"postgres\".\"raw\".\"DIM_CURSO_SUPERIOR\" AS \"FORMACAO_1\" ON CODIGOS_FORMACAO.\"COD_CURSO_1\" = \"FORMACAO_1\".\"CODIGO\"\n        LEFT JOIN \"postgres\".\"raw\".\"DIM_CURSO_SUPERIOR\" AS \"FORMACAO_2\" ON CODIGOS_FORMACAO.\"COD_CURSO_2\" = \"FORMACAO_2\".\"CODIGO\"\n        LEFT JOIN \"postgres\".\"raw\".\"DIM_CURSO_SUPERIOR\" AS \"FORMACAO_3\" ON CODIGOS_FORMACAO.\"COD_CURSO_3\" = \"FORMACAO_3\".\"CODIGO\"),\n    RESULTADOS_FORMACAO_ADEQUADA as (\n        SELECT\n            \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\",\n            REGEXP_REPLACE(\"CODIGO_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_COD\",\n            REGEXP_REPLACE(\"NOME_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_NOME\",\n            \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\n        FROM NOMES_FORMACAO)\n\nSELECT\n    \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\",\n    SUM(\"FORMACAO_ADEQUADA\") AS \"FORMACAO_ADEQUADA\",\n    SUM(\"DOCENCIA_TOTAL\") AS \"DOCENCIA_TOTAL\"\nFROM RESULTADOS_FORMACAO_ADEQUADA\nGROUP BY\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"ETAPA\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\"\nORDER BY\n    \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_ADEQUADA\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_15a_2019_2020": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_15a_2019_2020", "resource_type": "model", "package_name": "exp", "path": "educ_bas_docentes_15\\dim_educ_bas_docentes_15a_2019_2020.sql", "original_file_path": "models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15a_2019_2020.sql", "unique_id": "model.exp.dim_educ_bas_docentes_15a_2019_2020", "fqn": ["exp", "educ_bas_docentes_15", "dim_educ_bas_docentes_15a_2019_2020"], "alias": "dim_educ_bas_docentes_15a_2019_2020", "checksum": {"name": "sha256", "checksum": "63f063ff87fc1b4866e4a3ddb22fb452566b98e8a2e4f90d484509e77c99338b"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.242546, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15a_2019_2020\"", "raw_code": "-- 15 min\r\nWITH FORMACOES_ADEQUADAS_LICENCIATURA as (\r\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\r\n        FROM {{ source(\"raw\", \"DIM_FORMACAO_ADEQUADA\") }}\r\n        WHERE \"COM_PEDAGO\"=0),\r\n    FORMACOES_ADEQUADAS_BACHARELADO as (\r\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\r\n        FROM {{ source(\"raw\", \"DIM_FORMACAO_ADEQUADA\") }}\r\n        WHERE \"COM_PEDAGO\"=1),\r\n    COMPLEMENTACAO_PEDAGOGICA as (\r\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME_COMPL\", \"CO_AREA_COMPL\"\r\n        FROM {{ source(\"raw\", \"DIM_COMPLEMENTACAO_PEDAGOGICA\") }}),\r\n    DOCENTES_RAW as (\r\n        SELECT\r\n            *,\r\n            'MULTIDISCIPLINAR' as \"DISCIPLINA_NOME\",\r\n            '1_ENSINO_INFANTIL' as \"ETAPA\",\r\n            -- Cancel courses that \"in progress\"\r\n            CASE WHEN \"TP_SITUACAO_CURSO_1\"=1 THEN \"CO_CURSO_1\" ELSE '' END AS \"COD_CURSO_1\",\r\n            CASE WHEN \"TP_SITUACAO_CURSO_2\"=1 THEN \"CO_CURSO_2\" ELSE '' END AS \"COD_CURSO_2\",\r\n            CASE WHEN \"TP_SITUACAO_CURSO_3\"=1 THEN \"CO_CURSO_3\" ELSE '' END AS \"COD_CURSO_3\"\r\n        FROM\r\n            (\r\n            -- {% set years = [2019, 2020] %} #}\r\n            -- {% set regions = [\"CO\", \"NORTE\"] %}\r\n            {% set years = [2019, 2020] %}\r\n            {% set regions = [\"CO\", \"NORTE\", \"NORDESTE\", \"SUDESTE\", \"SUL\"] %}\r\n            {% for region in regions %}\r\n                {% for year in years %}\r\n                SELECT\r\n                    {{year}} as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\r\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\r\n                FROM\r\n                    {{source(\"raw\", \"DIM_DOCENTES_\" ~ region ~ \"_\" ~ year) }}\r\n                {% if not loop.last %}\r\n                UNION ALL\r\n                {% endif %}\r\n                {% endfor %}\r\n            {% if not loop.last %}\r\n                UNION ALL\r\n            {% endif %}\r\n            {% endfor %}\r\n            ) as tbs_raw\r\n        -- 'where clause' out of the loop was 15% faster than inside the loop\r\n        WHERE \"TP_ETAPA_ENSINO\" in (1, 2, 3) and \"TP_TIPO_DOCENTE\" in (1, 5, 6)\r\n        ),\r\n    ADEQUACAO_BASE as (\r\n        SELECT *,\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                    WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                          FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\r\n                ) THEN 1 ELSE 0\r\n            END AS \"CURSO_1_ADEQUADO_LICEN\",\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                    WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                          FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\r\n                ) THEN 1 ELSE 0\r\n            END AS \"CURSO_1_BACH\",\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                    WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                          FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\r\n                ) THEN 1 ELSE 0\r\n            END AS \"CURSO_2_ADEQUADO_LICEN\",\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                    WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                          FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\r\n                ) THEN 1 ELSE 0\r\n            END AS \"CURSO_2_BACH\",\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                    WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                          FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\r\n                ) THEN 1 ELSE 0\r\n            END AS \"CURSO_3_ADEQUADO_LICEN\",\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                    WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                          FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\r\n                ) THEN 1 ELSE 0\r\n            END AS \"CURSO_3_BACH\"\r\n        FROM\r\n            DOCENTES_RAW),\r\n    ADD_COMPL_PEDAGO_ADEQUADA as (\r\n        SELECT *, \"COMPL_1\".\"CO_AREA_COMPL\" as \"COD_COMPL_PEDAGOGICA_ADEQUADA\"\r\n        FROM ADEQUACAO_BASE\r\n        LEFT JOIN COMPLEMENTACAO_PEDAGOGICA AS \"COMPL_1\" ON ADEQUACAO_BASE.\"DISCIPLINA_NOME\" = \"COMPL_1\".\"DISCIPLINA_NOME_COMPL\"\r\n    ),\r\n    ADD_COMPL_PEDAGO_ADEQUADA2 as (\r\n        SELECT *,\r\n            CASE WHEN \"CO_AREA_COMPL_PEDAGOGICA_1\"=\"COD_COMPL_PEDAGOGICA_ADEQUADA\" OR \"CO_AREA_COMPL_PEDAGOGICA_2\"=\"COD_COMPL_PEDAGOGICA_ADEQUADA\" OR \"CO_AREA_COMPL_PEDAGOGICA_3\"=\"COD_COMPL_PEDAGOGICA_ADEQUADA\"\r\n                THEN 1 ELSE 0 END AS \"FLAG_COMPL_PEDAGOGICA_ADEQUADA\"\r\n        FROM ADD_COMPL_PEDAGO_ADEQUADA\r\n    ),\r\n    ADEQUACAO_FINAL as (SELECT *,\r\n            CASE WHEN \"FLAG_COMPL_PEDAGOGICA_ADEQUADA\"=1 AND \"CURSO_1_BACH\"=1 THEN 1 ELSE 0 END AS \"CURSO_1_ADEQUADO_BACH\",\r\n            CASE WHEN \"FLAG_COMPL_PEDAGOGICA_ADEQUADA\"=1 AND \"CURSO_2_BACH\"=1 THEN 1 ELSE 0 END AS \"CURSO_2_ADEQUADO_BACH\",\r\n            CASE WHEN \"FLAG_COMPL_PEDAGOGICA_ADEQUADA\"=1 AND \"CURSO_3_BACH\"=1 THEN 1 ELSE 0 END AS \"CURSO_3_ADEQUADO_BACH\"\r\n        FROM ADD_COMPL_PEDAGO_ADEQUADA2\r\n    ),\r\n    CODIGOS_FORMACAO as(\r\n        SELECT *,\r\n            COALESCE(\"COD_CURSO_1\", '') || '|' || COALESCE(\"COD_CURSO_2\", '') || '|' || COALESCE(\"COD_CURSO_3\", '') AS \"CODIGO_FORMACAO_DRAFT\",\r\n            CASE WHEN \"CURSO_1_ADEQUADO_LICEN\"=1 OR \"CURSO_1_ADEQUADO_BACH\"=1 OR\r\n                      \"CURSO_2_ADEQUADO_LICEN\"=1 OR \"CURSO_2_ADEQUADO_BACH\"=1 OR\r\n                      \"CURSO_3_ADEQUADO_LICEN\"=1 OR \"CURSO_3_ADEQUADO_BACH\"=1\r\n                      THEN 1 ELSE 0\r\n                END AS \"FORMACAO_ADEQUADA\",\r\n            1 as \"DOCENCIA_TOTAL\"\r\n        FROM ADEQUACAO_FINAL),\r\n    NOMES_FORMACAO as (\r\n        SELECT *,\r\n            COALESCE(\"FORMACAO_1\".\"CURSO\", '') || '|' || COALESCE(\"FORMACAO_2\".\"CURSO\", '') || '|' || COALESCE(\"FORMACAO_3\".\"CURSO\", '') AS \"NOME_FORMACAO_DRAFT\"\r\n        FROM CODIGOS_FORMACAO\r\n        LEFT JOIN {{source(\"raw\", \"DIM_CURSO_SUPERIOR\")}} AS \"FORMACAO_1\" ON CODIGOS_FORMACAO.\"COD_CURSO_1\" = \"FORMACAO_1\".\"CODIGO\"\r\n        LEFT JOIN {{source(\"raw\", \"DIM_CURSO_SUPERIOR\")}} AS \"FORMACAO_2\" ON CODIGOS_FORMACAO.\"COD_CURSO_2\" = \"FORMACAO_2\".\"CODIGO\"\r\n        LEFT JOIN {{source(\"raw\", \"DIM_CURSO_SUPERIOR\")}} AS \"FORMACAO_3\" ON CODIGOS_FORMACAO.\"COD_CURSO_3\" = \"FORMACAO_3\".\"CODIGO\"),\r\n    RESULTADOS_FORMACAO_ADEQUADA as (\r\n        SELECT\r\n            \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\",\r\n            REGEXP_REPLACE(\"CODIGO_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_COD\",\r\n            REGEXP_REPLACE(\"NOME_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_NOME\",\r\n            \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\r\n        FROM NOMES_FORMACAO)\r\n\r\nSELECT\r\n    \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\",\r\n    SUM(\"FORMACAO_ADEQUADA\") AS \"FORMACAO_ADEQUADA\",\r\n    SUM(\"DOCENCIA_TOTAL\") AS \"DOCENCIA_TOTAL\"\r\nFROM RESULTADOS_FORMACAO_ADEQUADA\r\nGROUP BY\r\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"ETAPA\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\"\r\nORDER BY\r\n    \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_ADEQUADA\"", "language": "sql", "refs": [], "sources": [["raw", "DIM_FORMACAO_ADEQUADA"], ["raw", "DIM_FORMACAO_ADEQUADA"], ["raw", "DIM_COMPLEMENTACAO_PEDAGOGICA"], ["raw", "DIM_DOCENTES_CO_2019"], ["raw", "DIM_DOCENTES_CO_2020"], ["raw", "DIM_DOCENTES_NORTE_2019"], ["raw", "DIM_DOCENTES_NORTE_2020"], ["raw", "DIM_DOCENTES_NORDESTE_2019"], ["raw", "DIM_DOCENTES_NORDESTE_2020"], ["raw", "DIM_DOCENTES_SUDESTE_2019"], ["raw", "DIM_DOCENTES_SUDESTE_2020"], ["raw", "DIM_DOCENTES_SUL_2019"], ["raw", "DIM_DOCENTES_SUL_2020"], ["raw", "DIM_CURSO_SUPERIOR"], ["raw", "DIM_CURSO_SUPERIOR"], ["raw", "DIM_CURSO_SUPERIOR"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_FORMACAO_ADEQUADA", "source.exp.raw.DIM_FORMACAO_ADEQUADA", "source.exp.raw.DIM_COMPLEMENTACAO_PEDAGOGICA", "source.exp.raw.DIM_DOCENTES_CO_2019", "source.exp.raw.DIM_DOCENTES_CO_2020", "source.exp.raw.DIM_DOCENTES_NORTE_2019", "source.exp.raw.DIM_DOCENTES_NORTE_2020", "source.exp.raw.DIM_DOCENTES_NORDESTE_2019", "source.exp.raw.DIM_DOCENTES_NORDESTE_2020", "source.exp.raw.DIM_DOCENTES_SUDESTE_2019", "source.exp.raw.DIM_DOCENTES_SUDESTE_2020", "source.exp.raw.DIM_DOCENTES_SUL_2019", "source.exp.raw.DIM_DOCENTES_SUL_2020", "source.exp.raw.DIM_CURSO_SUPERIOR", "source.exp.raw.DIM_CURSO_SUPERIOR", "source.exp.raw.DIM_CURSO_SUPERIOR"]}, "compiled_path": "target\\compiled\\exp\\models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15a_2019_2020.sql", "compiled": true, "compiled_code": "-- 15 min\nWITH FORMACOES_ADEQUADAS_LICENCIATURA as (\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\n        FROM \"postgres\".\"raw\".\"DIM_FORMACAO_ADEQUADA\"\n        WHERE \"COM_PEDAGO\"=0),\n    FORMACOES_ADEQUADAS_BACHARELADO as (\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\n        FROM \"postgres\".\"raw\".\"DIM_FORMACAO_ADEQUADA\"\n        WHERE \"COM_PEDAGO\"=1),\n    COMPLEMENTACAO_PEDAGOGICA as (\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME_COMPL\", \"CO_AREA_COMPL\"\n        FROM \"postgres\".\"raw\".\"DIM_COMPLEMENTACAO_PEDAGOGICA\"),\n    DOCENTES_RAW as (\n        SELECT\n            *,\n            'MULTIDISCIPLINAR' as \"DISCIPLINA_NOME\",\n            '1_ENSINO_INFANTIL' as \"ETAPA\",\n            -- Cancel courses that \"in progress\"\n            CASE WHEN \"TP_SITUACAO_CURSO_1\"=1 THEN \"CO_CURSO_1\" ELSE '' END AS \"COD_CURSO_1\",\n            CASE WHEN \"TP_SITUACAO_CURSO_2\"=1 THEN \"CO_CURSO_2\" ELSE '' END AS \"COD_CURSO_2\",\n            CASE WHEN \"TP_SITUACAO_CURSO_3\"=1 THEN \"CO_CURSO_3\" ELSE '' END AS \"COD_CURSO_3\"\n        FROM\n            (\n            --  #}\n            -- \n            \n            \n            \n                \n                SELECT\n                    2019 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2019\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2020 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2020\"\n                \n                \n            \n                UNION ALL\n            \n            \n                \n                SELECT\n                    2019 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2019\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2020 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2020\"\n                \n                \n            \n                UNION ALL\n            \n            \n                \n                SELECT\n                    2019 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2019\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2020 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2020\"\n                \n                \n            \n                UNION ALL\n            \n            \n                \n                SELECT\n                    2019 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2019\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2020 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2020\"\n                \n                \n            \n                UNION ALL\n            \n            \n                \n                SELECT\n                    2019 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2019\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2020 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2020\"\n                \n                \n            \n            \n            ) as tbs_raw\n        -- 'where clause' out of the loop was 15% faster than inside the loop\n        WHERE \"TP_ETAPA_ENSINO\" in (1, 2, 3) and \"TP_TIPO_DOCENTE\" in (1, 5, 6)\n        ),\n    ADEQUACAO_BASE as (\n        SELECT *,\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                    WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                          FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\n                ) THEN 1 ELSE 0\n            END AS \"CURSO_1_ADEQUADO_LICEN\",\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM FORMACOES_ADEQUADAS_BACHARELADO\n                    WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                          FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\n                ) THEN 1 ELSE 0\n            END AS \"CURSO_1_BACH\",\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                    WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                          FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\n                ) THEN 1 ELSE 0\n            END AS \"CURSO_2_ADEQUADO_LICEN\",\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM FORMACOES_ADEQUADAS_BACHARELADO\n                    WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                          FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\n                ) THEN 1 ELSE 0\n            END AS \"CURSO_2_BACH\",\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                    WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                          FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\n                ) THEN 1 ELSE 0\n            END AS \"CURSO_3_ADEQUADO_LICEN\",\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM FORMACOES_ADEQUADAS_BACHARELADO\n                    WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                          FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\n                ) THEN 1 ELSE 0\n            END AS \"CURSO_3_BACH\"\n        FROM\n            DOCENTES_RAW),\n    ADD_COMPL_PEDAGO_ADEQUADA as (\n        SELECT *, \"COMPL_1\".\"CO_AREA_COMPL\" as \"COD_COMPL_PEDAGOGICA_ADEQUADA\"\n        FROM ADEQUACAO_BASE\n        LEFT JOIN COMPLEMENTACAO_PEDAGOGICA AS \"COMPL_1\" ON ADEQUACAO_BASE.\"DISCIPLINA_NOME\" = \"COMPL_1\".\"DISCIPLINA_NOME_COMPL\"\n    ),\n    ADD_COMPL_PEDAGO_ADEQUADA2 as (\n        SELECT *,\n            CASE WHEN \"CO_AREA_COMPL_PEDAGOGICA_1\"=\"COD_COMPL_PEDAGOGICA_ADEQUADA\" OR \"CO_AREA_COMPL_PEDAGOGICA_2\"=\"COD_COMPL_PEDAGOGICA_ADEQUADA\" OR \"CO_AREA_COMPL_PEDAGOGICA_3\"=\"COD_COMPL_PEDAGOGICA_ADEQUADA\"\n                THEN 1 ELSE 0 END AS \"FLAG_COMPL_PEDAGOGICA_ADEQUADA\"\n        FROM ADD_COMPL_PEDAGO_ADEQUADA\n    ),\n    ADEQUACAO_FINAL as (SELECT *,\n            CASE WHEN \"FLAG_COMPL_PEDAGOGICA_ADEQUADA\"=1 AND \"CURSO_1_BACH\"=1 THEN 1 ELSE 0 END AS \"CURSO_1_ADEQUADO_BACH\",\n            CASE WHEN \"FLAG_COMPL_PEDAGOGICA_ADEQUADA\"=1 AND \"CURSO_2_BACH\"=1 THEN 1 ELSE 0 END AS \"CURSO_2_ADEQUADO_BACH\",\n            CASE WHEN \"FLAG_COMPL_PEDAGOGICA_ADEQUADA\"=1 AND \"CURSO_3_BACH\"=1 THEN 1 ELSE 0 END AS \"CURSO_3_ADEQUADO_BACH\"\n        FROM ADD_COMPL_PEDAGO_ADEQUADA2\n    ),\n    CODIGOS_FORMACAO as(\n        SELECT *,\n            COALESCE(\"COD_CURSO_1\", '') || '|' || COALESCE(\"COD_CURSO_2\", '') || '|' || COALESCE(\"COD_CURSO_3\", '') AS \"CODIGO_FORMACAO_DRAFT\",\n            CASE WHEN \"CURSO_1_ADEQUADO_LICEN\"=1 OR \"CURSO_1_ADEQUADO_BACH\"=1 OR\n                      \"CURSO_2_ADEQUADO_LICEN\"=1 OR \"CURSO_2_ADEQUADO_BACH\"=1 OR\n                      \"CURSO_3_ADEQUADO_LICEN\"=1 OR \"CURSO_3_ADEQUADO_BACH\"=1\n                      THEN 1 ELSE 0\n                END AS \"FORMACAO_ADEQUADA\",\n            1 as \"DOCENCIA_TOTAL\"\n        FROM ADEQUACAO_FINAL),\n    NOMES_FORMACAO as (\n        SELECT *,\n            COALESCE(\"FORMACAO_1\".\"CURSO\", '') || '|' || COALESCE(\"FORMACAO_2\".\"CURSO\", '') || '|' || COALESCE(\"FORMACAO_3\".\"CURSO\", '') AS \"NOME_FORMACAO_DRAFT\"\n        FROM CODIGOS_FORMACAO\n        LEFT JOIN \"postgres\".\"raw\".\"DIM_CURSO_SUPERIOR\" AS \"FORMACAO_1\" ON CODIGOS_FORMACAO.\"COD_CURSO_1\" = \"FORMACAO_1\".\"CODIGO\"\n        LEFT JOIN \"postgres\".\"raw\".\"DIM_CURSO_SUPERIOR\" AS \"FORMACAO_2\" ON CODIGOS_FORMACAO.\"COD_CURSO_2\" = \"FORMACAO_2\".\"CODIGO\"\n        LEFT JOIN \"postgres\".\"raw\".\"DIM_CURSO_SUPERIOR\" AS \"FORMACAO_3\" ON CODIGOS_FORMACAO.\"COD_CURSO_3\" = \"FORMACAO_3\".\"CODIGO\"),\n    RESULTADOS_FORMACAO_ADEQUADA as (\n        SELECT\n            \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\",\n            REGEXP_REPLACE(\"CODIGO_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_COD\",\n            REGEXP_REPLACE(\"NOME_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_NOME\",\n            \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\n        FROM NOMES_FORMACAO)\n\nSELECT\n    \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\",\n    SUM(\"FORMACAO_ADEQUADA\") AS \"FORMACAO_ADEQUADA\",\n    SUM(\"DOCENCIA_TOTAL\") AS \"DOCENCIA_TOTAL\"\nFROM RESULTADOS_FORMACAO_ADEQUADA\nGROUP BY\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"ETAPA\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\"\nORDER BY\n    \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_ADEQUADA\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_15b_2014_to_2018": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_15b_2014_to_2018", "resource_type": "model", "package_name": "exp", "path": "educ_bas_docentes_15\\dim_educ_bas_docentes_15b_2014_to_2018.sql", "original_file_path": "models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15b_2014_to_2018.sql", "unique_id": "model.exp.dim_educ_bas_docentes_15b_2014_to_2018", "fqn": ["exp", "educ_bas_docentes_15", "dim_educ_bas_docentes_15b_2014_to_2018"], "alias": "dim_educ_bas_docentes_15b_2014_to_2018", "checksum": {"name": "sha256", "checksum": "674756a03365f650c9ec16675e110f849c5364abb9b39c943967913974656e20"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.2535655, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15b_2014_to_2018\"", "raw_code": "WITH FORMACOES_ADEQUADAS_LICENCIATURA as (\r\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\r\n        FROM {{ source(\"raw\", \"DIM_FORMACAO_ADEQUADA\") }}\r\n        WHERE \"COM_PEDAGO\"=0),\r\n    FORMACOES_ADEQUADAS_BACHARELADO as (\r\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\r\n        FROM {{ source(\"raw\", \"DIM_FORMACAO_ADEQUADA\") }}\r\n        WHERE \"COM_PEDAGO\"=1),\r\n    DIM_CURSO_SUPERIOR as (\r\n        SELECT \"CURSO\", \"CODIGO\"\r\n        FROM {{ source(\"raw\", \"DIM_CURSO_SUPERIOR\") }}),\r\n    DOCENTES_RAW as (\r\n        SELECT\r\n            '2_FUND_ANOS_INICIAIS' as \"ETAPA\",\r\n            CASE\r\n                WHEN \"DISCIPLINA_NOME\" IN ('IN_DISC_LINGUA_INGLES', 'IN_DISC_LINGUA_ESPANHOL', 'IN_DISC_LINGUA_FRANCES', 'IN_DISC_LINGUA_OUTRA') THEN 'IN_DISC_LINGUA_ESTRANGEIRA'\r\n                ELSE \"DISCIPLINA_NOME\"\r\n            END AS \"DISCIPLINA_NOME\",\r\n            \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\r\n        FROM\r\n            {{ ref(\"dim_educ_bas_docentes_15_2014_to_2018_reshape_disc\") }}\r\n        WHERE \"TP_ETAPA_ENSINO\" in (4, 5, 6, 7, 8, 14, 15, 16, 17, 18)),\r\n    ADEQUACAO_BASE as (\r\n        SELECT\r\n            CASE WHEN \"C_1_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_1_ADQ_BACH_ESPECIFICA\"=1 OR\r\n                      \"C_2_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_2_ADQ_BACH_ESPECIFICA\"=1 OR\r\n                      \"C_3_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_3_ADQ_BACH_ESPECIFICA\"=1\r\n                      THEN 1 ELSE 0\r\n                END AS \"FORMACAO_ADEQUADA_ESPECIFICA\",\r\n            CASE WHEN \"C_1_ADQ_LICEN_PEDAGOGICA\"=1 OR \"C_1_ADQ_BACH_PEDAGOGICA\"=1 OR\r\n                      \"C_2_ADQ_LICEN_PEDAGOGICA\"=1 OR \"C_2_ADQ_BACH_PEDAGOGICA\"=1 OR\r\n                      \"C_3_ADQ_LICEN_PEDAGOGICA\"=1 OR \"C_3_ADQ_BACH_PEDAGOGICA\"=1\r\n                      THEN 1 ELSE 0\r\n                END AS \"FORMACAO_ADEQUADA_PEDAGOGICA\",\r\n            \"DISCIPLINA_NOME\", \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\", \"ETAPA\"\r\n            --*\r\n        FROM (\r\n            SELECT *,\r\n                CASE WHEN \"IN_COM_PEDAGOGICA_1\"=1 AND \"C_1_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_1_ADQ_BACH_ESPECIFICA\",\r\n                CASE WHEN \"IN_COM_PEDAGOGICA_2\"=1 AND \"C_2_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_2_ADQ_BACH_ESPECIFICA\",\r\n                CASE WHEN \"IN_COM_PEDAGOGICA_3\"=1 AND \"C_3_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_3_ADQ_BACH_ESPECIFICA\",\r\n                CASE WHEN \"IN_COM_PEDAGOGICA_1\"=1 AND \"C_1_ADQ_BACH_PRE_PEDAGOGICA\"=1 THEN 1 ELSE 0 END AS \"C_1_ADQ_BACH_PEDAGOGICA\",\r\n                CASE WHEN \"IN_COM_PEDAGOGICA_2\"=1 AND \"C_2_ADQ_BACH_PRE_PEDAGOGICA\"=1 THEN 1 ELSE 0 END AS \"C_2_ADQ_BACH_PEDAGOGICA\",\r\n                CASE WHEN \"IN_COM_PEDAGOGICA_3\"=1 AND \"C_3_ADQ_BACH_PRE_PEDAGOGICA\"=1 THEN 1 ELSE 0 END AS \"C_3_ADQ_BACH_PEDAGOGICA\"\r\n            FROM (\r\n                SELECT *,\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_1_ADQ_LICEN_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_2_ADQ_LICEN_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_3_ADQ_LICEN_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_1_ADQ_BACH_PRE_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_2_ADQ_BACH_PRE_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_3_ADQ_BACH_PRE_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\r\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_1_ADQ_LICEN_PEDAGOGICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\r\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_2_ADQ_LICEN_PEDAGOGICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\r\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_3_ADQ_LICEN_PEDAGOGICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\r\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_1_ADQ_BACH_PRE_PEDAGOGICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\r\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_2_ADQ_BACH_PRE_PEDAGOGICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\r\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_3_ADQ_BACH_PRE_PEDAGOGICA\"\r\n                FROM\r\n                    DOCENTES_RAW) as adq_especifica_pre) as adq_especifica),\r\n    ADEQUACAO_FINAL as (\r\n        SELECT\r\n            CASE WHEN \"DISCIPLINA_NOME\"='IN_DISC_LINGUA_ESTRANGEIRA' THEN \"FORMACAO_ADEQUADA_ESPECIFICA\" ELSE\r\n            CASE WHEN \"FORMACAO_ADEQUADA_ESPECIFICA\"=1 OR \"FORMACAO_ADEQUADA_PEDAGOGICA\"=1 THEN 1 ELSE 0\r\n            END END AS \"FORMACAO_ADEQUADA\",\r\n            1 as \"DOCENCIA_TOTAL\",\r\n            *\r\n        FROM ADEQUACAO_BASE),\r\n    CODIGOS_FORMACAO as(\r\n        SELECT\r\n            CONCAT(COALESCE(\"COD_CURSO_1\", ''), '|', COALESCE(\"COD_CURSO_2\", ''), '|', COALESCE(\"COD_CURSO_3\", '')) AS \"CODIGO_FORMACAO_DRAFT\",\r\n            *\r\n        FROM ADEQUACAO_FINAL),\r\n    NOMES_FORMACAO as (\r\n        SELECT\r\n            CONCAT(COALESCE(\"FORMACAO_1\".\"CURSO\", ''), '|', COALESCE(\"FORMACAO_2\".\"CURSO\", ''), '|', COALESCE(\"FORMACAO_3\".\"CURSO\", '')) AS \"NOME_FORMACAO_DRAFT\",\r\n            *\r\n        FROM CODIGOS_FORMACAO\r\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_1\" ON CODIGOS_FORMACAO.\"COD_CURSO_1\" = \"FORMACAO_1\".\"CODIGO\"\r\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_2\" ON CODIGOS_FORMACAO.\"COD_CURSO_2\" = \"FORMACAO_2\".\"CODIGO\"\r\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_3\" ON CODIGOS_FORMACAO.\"COD_CURSO_3\" = \"FORMACAO_3\".\"CODIGO\"),\r\n    RESULTADOS_FORMACAO_ADEQUADA as (\r\n        SELECT\r\n            \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\",\r\n            REGEXP_REPLACE(\"CODIGO_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_COD\",\r\n            REGEXP_REPLACE(\"NOME_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_NOME\",\r\n            \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\r\n        FROM NOMES_FORMACAO)\r\n\r\nSELECT\r\n    \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\",\r\n    SUM(\"FORMACAO_ADEQUADA\") AS \"FORMACAO_ADEQUADA\",\r\n    SUM(\"DOCENCIA_TOTAL\") AS \"DOCENCIA_TOTAL\"\r\nFROM RESULTADOS_FORMACAO_ADEQUADA\r\nGROUP BY\r\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"ETAPA\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\"\r\nORDER BY\r\n    \"FK_MUNICIPIO_CODIGO\", \"FORMACAO_ADEQUADA\", \"DISCIPLINA_NOME\"", "language": "sql", "refs": [{"name": "dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "package": null, "version": null}], "sources": [["raw", "DIM_FORMACAO_ADEQUADA"], ["raw", "DIM_CURSO_SUPERIOR"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_FORMACAO_ADEQUADA", "source.exp.raw.DIM_CURSO_SUPERIOR", "model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc"]}, "compiled_path": "target\\compiled\\exp\\models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15b_2014_to_2018.sql", "compiled": true, "compiled_code": "WITH FORMACOES_ADEQUADAS_LICENCIATURA as (\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\n        FROM \"postgres\".\"raw\".\"DIM_FORMACAO_ADEQUADA\"\n        WHERE \"COM_PEDAGO\"=0),\n    FORMACOES_ADEQUADAS_BACHARELADO as (\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\n        FROM \"postgres\".\"raw\".\"DIM_FORMACAO_ADEQUADA\"\n        WHERE \"COM_PEDAGO\"=1),\n    DIM_CURSO_SUPERIOR as (\n        SELECT \"CURSO\", \"CODIGO\"\n        FROM \"postgres\".\"raw\".\"DIM_CURSO_SUPERIOR\"),\n    DOCENTES_RAW as (\n        SELECT\n            '2_FUND_ANOS_INICIAIS' as \"ETAPA\",\n            CASE\n                WHEN \"DISCIPLINA_NOME\" IN ('IN_DISC_LINGUA_INGLES', 'IN_DISC_LINGUA_ESPANHOL', 'IN_DISC_LINGUA_FRANCES', 'IN_DISC_LINGUA_OUTRA') THEN 'IN_DISC_LINGUA_ESTRANGEIRA'\n                ELSE \"DISCIPLINA_NOME\"\n            END AS \"DISCIPLINA_NOME\",\n            \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n        FROM\n            \"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15_2014_to_2018_reshape_disc\"\n        WHERE \"TP_ETAPA_ENSINO\" in (4, 5, 6, 7, 8, 14, 15, 16, 17, 18)),\n    ADEQUACAO_BASE as (\n        SELECT\n            CASE WHEN \"C_1_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_1_ADQ_BACH_ESPECIFICA\"=1 OR\n                      \"C_2_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_2_ADQ_BACH_ESPECIFICA\"=1 OR\n                      \"C_3_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_3_ADQ_BACH_ESPECIFICA\"=1\n                      THEN 1 ELSE 0\n                END AS \"FORMACAO_ADEQUADA_ESPECIFICA\",\n            CASE WHEN \"C_1_ADQ_LICEN_PEDAGOGICA\"=1 OR \"C_1_ADQ_BACH_PEDAGOGICA\"=1 OR\n                      \"C_2_ADQ_LICEN_PEDAGOGICA\"=1 OR \"C_2_ADQ_BACH_PEDAGOGICA\"=1 OR\n                      \"C_3_ADQ_LICEN_PEDAGOGICA\"=1 OR \"C_3_ADQ_BACH_PEDAGOGICA\"=1\n                      THEN 1 ELSE 0\n                END AS \"FORMACAO_ADEQUADA_PEDAGOGICA\",\n            \"DISCIPLINA_NOME\", \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\", \"ETAPA\"\n            --*\n        FROM (\n            SELECT *,\n                CASE WHEN \"IN_COM_PEDAGOGICA_1\"=1 AND \"C_1_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_1_ADQ_BACH_ESPECIFICA\",\n                CASE WHEN \"IN_COM_PEDAGOGICA_2\"=1 AND \"C_2_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_2_ADQ_BACH_ESPECIFICA\",\n                CASE WHEN \"IN_COM_PEDAGOGICA_3\"=1 AND \"C_3_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_3_ADQ_BACH_ESPECIFICA\",\n                CASE WHEN \"IN_COM_PEDAGOGICA_1\"=1 AND \"C_1_ADQ_BACH_PRE_PEDAGOGICA\"=1 THEN 1 ELSE 0 END AS \"C_1_ADQ_BACH_PEDAGOGICA\",\n                CASE WHEN \"IN_COM_PEDAGOGICA_2\"=1 AND \"C_2_ADQ_BACH_PRE_PEDAGOGICA\"=1 THEN 1 ELSE 0 END AS \"C_2_ADQ_BACH_PEDAGOGICA\",\n                CASE WHEN \"IN_COM_PEDAGOGICA_3\"=1 AND \"C_3_ADQ_BACH_PRE_PEDAGOGICA\"=1 THEN 1 ELSE 0 END AS \"C_3_ADQ_BACH_PEDAGOGICA\"\n            FROM (\n                SELECT *,\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_1_ADQ_LICEN_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_2_ADQ_LICEN_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_3_ADQ_LICEN_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_1_ADQ_BACH_PRE_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_2_ADQ_BACH_PRE_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_3_ADQ_BACH_PRE_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_1_ADQ_LICEN_PEDAGOGICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_2_ADQ_LICEN_PEDAGOGICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_3_ADQ_LICEN_PEDAGOGICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_1_ADQ_BACH_PRE_PEDAGOGICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_2_ADQ_BACH_PRE_PEDAGOGICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_3_ADQ_BACH_PRE_PEDAGOGICA\"\n                FROM\n                    DOCENTES_RAW) as adq_especifica_pre) as adq_especifica),\n    ADEQUACAO_FINAL as (\n        SELECT\n            CASE WHEN \"DISCIPLINA_NOME\"='IN_DISC_LINGUA_ESTRANGEIRA' THEN \"FORMACAO_ADEQUADA_ESPECIFICA\" ELSE\n            CASE WHEN \"FORMACAO_ADEQUADA_ESPECIFICA\"=1 OR \"FORMACAO_ADEQUADA_PEDAGOGICA\"=1 THEN 1 ELSE 0\n            END END AS \"FORMACAO_ADEQUADA\",\n            1 as \"DOCENCIA_TOTAL\",\n            *\n        FROM ADEQUACAO_BASE),\n    CODIGOS_FORMACAO as(\n        SELECT\n            CONCAT(COALESCE(\"COD_CURSO_1\", ''), '|', COALESCE(\"COD_CURSO_2\", ''), '|', COALESCE(\"COD_CURSO_3\", '')) AS \"CODIGO_FORMACAO_DRAFT\",\n            *\n        FROM ADEQUACAO_FINAL),\n    NOMES_FORMACAO as (\n        SELECT\n            CONCAT(COALESCE(\"FORMACAO_1\".\"CURSO\", ''), '|', COALESCE(\"FORMACAO_2\".\"CURSO\", ''), '|', COALESCE(\"FORMACAO_3\".\"CURSO\", '')) AS \"NOME_FORMACAO_DRAFT\",\n            *\n        FROM CODIGOS_FORMACAO\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_1\" ON CODIGOS_FORMACAO.\"COD_CURSO_1\" = \"FORMACAO_1\".\"CODIGO\"\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_2\" ON CODIGOS_FORMACAO.\"COD_CURSO_2\" = \"FORMACAO_2\".\"CODIGO\"\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_3\" ON CODIGOS_FORMACAO.\"COD_CURSO_3\" = \"FORMACAO_3\".\"CODIGO\"),\n    RESULTADOS_FORMACAO_ADEQUADA as (\n        SELECT\n            \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\",\n            REGEXP_REPLACE(\"CODIGO_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_COD\",\n            REGEXP_REPLACE(\"NOME_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_NOME\",\n            \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\n        FROM NOMES_FORMACAO)\n\nSELECT\n    \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\",\n    SUM(\"FORMACAO_ADEQUADA\") AS \"FORMACAO_ADEQUADA\",\n    SUM(\"DOCENCIA_TOTAL\") AS \"DOCENCIA_TOTAL\"\nFROM RESULTADOS_FORMACAO_ADEQUADA\nGROUP BY\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"ETAPA\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\"\nORDER BY\n    \"FK_MUNICIPIO_CODIGO\", \"FORMACAO_ADEQUADA\", \"DISCIPLINA_NOME\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_15b_2019_2020": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_15b_2019_2020", "resource_type": "model", "package_name": "exp", "path": "educ_bas_docentes_15\\dim_educ_bas_docentes_15b_2019_2020.sql", "original_file_path": "models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15b_2019_2020.sql", "unique_id": "model.exp.dim_educ_bas_docentes_15b_2019_2020", "fqn": ["exp", "educ_bas_docentes_15", "dim_educ_bas_docentes_15b_2019_2020"], "alias": "dim_educ_bas_docentes_15b_2019_2020", "checksum": {"name": "sha256", "checksum": "19ed607165fa53ea18bfc74d994db625629bafc61d5e8c8b2d191b8b7b99cc5b"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.257586, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15b_2019_2020\"", "raw_code": "-- 6 min 21s\r\nWITH FORMACOES_ADEQUADAS_LICENCIATURA as (\r\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\r\n        FROM {{ source(\"raw\", \"DIM_FORMACAO_ADEQUADA\") }}\r\n        WHERE \"COM_PEDAGO\"=0),\r\n    FORMACOES_ADEQUADAS_BACHARELADO as (\r\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\r\n        FROM {{ source(\"raw\", \"DIM_FORMACAO_ADEQUADA\") }}\r\n        WHERE \"COM_PEDAGO\"=1),\r\n    DIM_CURSO_SUPERIOR as (\r\n        SELECT \"CURSO\", \"CODIGO\"\r\n        FROM {{ source(\"raw\", \"DIM_CURSO_SUPERIOR\") }}),\r\n    COMPLEMENTACAO_PEDAGOGICA as (\r\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME_COMPL\", \"CO_AREA_COMPL\"\r\n        FROM \"raw\".\"DIM_COMPLEMENTACAO_PEDAGOGICA\"),\r\n    PRE_DF as (\r\n        SELECT\r\n            '2_FUND_ANOS_INICIAIS' as \"ETAPA\",\r\n            CASE\r\n                WHEN \"DISCIPLINA_NOME\" IN ('IN_DISC_LINGUA_INGLES', 'IN_DISC_LINGUA_ESPANHOL', 'IN_DISC_LINGUA_FRANCES', 'IN_DISC_LINGUA_OUTRA') THEN 'IN_DISC_LINGUA_ESTRANGEIRA'\r\n                ELSE \"DISCIPLINA_NOME\"\r\n            END AS \"DISCIPLINA_NOME\",\r\n            \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\r\n        FROM\r\n            \"dbt_staging\".\"dim_educ_bas_docentes_15_2019_2020_reshape_disc\"\r\n        WHERE \"TP_ETAPA_ENSINO\" in (4, 5, 6, 7, 8, 14, 15, 16, 17, 18)),\r\n    COM_COMPL_PEDAGO as (\r\n        SELECT\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM COMPLEMENTACAO_PEDAGOGICA\r\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = PRE_DF.\"DISCIPLINA_NOME\" AND\r\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_1\"\r\n                ) THEN 1 ELSE 0 END AS \"AREA_1_COMPL_PEDAGO_ESPECIFICO\",\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM COMPLEMENTACAO_PEDAGOGICA\r\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = PRE_DF.\"DISCIPLINA_NOME\" AND\r\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_2\"\r\n                ) THEN 1 ELSE 0 END AS \"AREA_2_COMPL_PEDAGO_ESPECIFICO\",\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM COMPLEMENTACAO_PEDAGOGICA\r\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = PRE_DF.\"DISCIPLINA_NOME\" AND\r\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_3\"\r\n                ) THEN 1 ELSE 0 END AS \"AREA_3_COMPL_PEDAGO_ESPECIFICO\",\r\n\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM COMPLEMENTACAO_PEDAGOGICA\r\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = 'MULTIDISCIPLINAR' AND\r\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_1\"\r\n                ) THEN 1 ELSE 0 END AS \"AREA_1_COMPL_PEDAGO_MULTIDISCIPLINAR\",\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM COMPLEMENTACAO_PEDAGOGICA\r\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = 'MULTIDISCIPLINAR' AND\r\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_2\"\r\n                ) THEN 1 ELSE 0 END AS \"AREA_2_COMPL_PEDAGO_MULTIDISCIPLINAR\",\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM COMPLEMENTACAO_PEDAGOGICA\r\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = 'MULTIDISCIPLINAR' AND\r\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_3\"\r\n                ) THEN 1 ELSE 0 END AS \"AREA_3_COMPL_PEDAGO_MULTIDISCIPLINAR\",\r\n            *\r\n        FROM PRE_DF),\r\n    DOCENTES_RAW as (\r\n        SELECT\r\n            CASE WHEN 1 IN (\"AREA_1_COMPL_PEDAGO_ESPECIFICO\", \"AREA_2_COMPL_PEDAGO_ESPECIFICO\", \"AREA_3_COMPL_PEDAGO_ESPECIFICO\")\r\n                THEN 1 ELSE 0 END AS \"FLAG_COMPL_PEDAGO_ESPEC_ADEQUADA\",\r\n            CASE WHEN 1 IN (\"AREA_1_COMPL_PEDAGO_MULTIDISCIPLINAR\", \"AREA_2_COMPL_PEDAGO_MULTIDISCIPLINAR\", \"AREA_3_COMPL_PEDAGO_MULTIDISCIPLINAR\")\r\n                THEN 1 ELSE 0 END AS \"FLAG_COMPL_PEDAGO_MULTI_ADEQUADA\",\r\n            *\r\n        FROM COM_COMPL_PEDAGO),\r\n    ADEQUACAO_BASE as (\r\n        SELECT\r\n            CASE WHEN \"C_1_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_1_ADQ_BACH_ESPECIFICA\"=1 OR\r\n                      \"C_2_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_2_ADQ_BACH_ESPECIFICA\"=1 OR\r\n                      \"C_3_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_3_ADQ_BACH_ESPECIFICA\"=1\r\n                      THEN 1 ELSE 0\r\n                END AS \"FORMACAO_ADEQUADA_ESPECIFICA\",\r\n            CASE WHEN \"C_1_ADQ_LICEN_PEDAGOGICA\"=1 OR \"C_1_ADQ_BACH_PEDAGOGICA\"=1 OR\r\n                      \"C_2_ADQ_LICEN_PEDAGOGICA\"=1 OR \"C_2_ADQ_BACH_PEDAGOGICA\"=1 OR\r\n                      \"C_3_ADQ_LICEN_PEDAGOGICA\"=1 OR \"C_3_ADQ_BACH_PEDAGOGICA\"=1\r\n                      THEN 1 ELSE 0\r\n                END AS \"FORMACAO_ADEQUADA_PEDAGOGICA\",\r\n            -- \"DISCIPLINA_NOME\", \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\", \"ETAPA\"\r\n            *\r\n        FROM (\r\n            SELECT\r\n                CASE WHEN \"FLAG_COMPL_PEDAGO_ESPEC_ADEQUADA\"=1 AND \"C_1_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_1_ADQ_BACH_ESPECIFICA\",\r\n                CASE WHEN \"FLAG_COMPL_PEDAGO_ESPEC_ADEQUADA\"=1 AND \"C_2_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_2_ADQ_BACH_ESPECIFICA\",\r\n                CASE WHEN \"FLAG_COMPL_PEDAGO_ESPEC_ADEQUADA\"=1 AND \"C_3_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_3_ADQ_BACH_ESPECIFICA\",\r\n                CASE WHEN \"FLAG_COMPL_PEDAGO_MULTI_ADEQUADA\"=1 AND \"C_1_ADQ_BACH_PRE_PEDAGOGICA\"=1 THEN 1 ELSE 0 END AS \"C_1_ADQ_BACH_PEDAGOGICA\",\r\n                CASE WHEN \"FLAG_COMPL_PEDAGO_MULTI_ADEQUADA\"=1 AND \"C_2_ADQ_BACH_PRE_PEDAGOGICA\"=1 THEN 1 ELSE 0 END AS \"C_2_ADQ_BACH_PEDAGOGICA\",\r\n                CASE WHEN \"FLAG_COMPL_PEDAGO_MULTI_ADEQUADA\"=1 AND \"C_3_ADQ_BACH_PRE_PEDAGOGICA\"=1 THEN 1 ELSE 0 END AS \"C_3_ADQ_BACH_PEDAGOGICA\",\r\n                *\r\n            FROM (\r\n                SELECT\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_1_ADQ_LICEN_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_2_ADQ_LICEN_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_3_ADQ_LICEN_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_1_ADQ_BACH_PRE_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_2_ADQ_BACH_PRE_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_3_ADQ_BACH_PRE_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\r\n                                FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_1_ADQ_LICEN_PEDAGOGICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\r\n                                FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_2_ADQ_LICEN_PEDAGOGICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\r\n                                FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_3_ADQ_LICEN_PEDAGOGICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\r\n                                FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_1_ADQ_BACH_PRE_PEDAGOGICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\r\n                                FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_2_ADQ_BACH_PRE_PEDAGOGICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\r\n                                FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_3_ADQ_BACH_PRE_PEDAGOGICA\",\r\n                    *\r\n                FROM DOCENTES_RAW) as adq_especifica_pre) as adq_especifica),\r\n    ADEQUACAO_FINAL as (\r\n        SELECT\r\n            CASE WHEN \"DISCIPLINA_NOME\"='IN_DISC_LINGUA_ESTRANGEIRA' THEN \"FORMACAO_ADEQUADA_ESPECIFICA\" ELSE\r\n            CASE WHEN \"FORMACAO_ADEQUADA_ESPECIFICA\"=1 OR \"FORMACAO_ADEQUADA_PEDAGOGICA\"=1 THEN 1 ELSE 0\r\n            END END AS \"FORMACAO_ADEQUADA\",\r\n            1 as \"DOCENCIA_TOTAL\",\r\n            *\r\n        FROM ADEQUACAO_BASE),\r\n    CODIGOS_FORMACAO as(\r\n        SELECT\r\n            CONCAT(COALESCE(\"COD_CURSO_1\", ''), '|', COALESCE(\"COD_CURSO_2\", ''), '|', COALESCE(\"COD_CURSO_3\", '')) AS \"CODIGO_FORMACAO_DRAFT\",\r\n            *\r\n        FROM ADEQUACAO_FINAL),\r\n    NOMES_FORMACAO as (\r\n        SELECT\r\n            CONCAT(COALESCE(\"FORMACAO_1\".\"CURSO\", ''), '|', COALESCE(\"FORMACAO_2\".\"CURSO\", ''), '|', COALESCE(\"FORMACAO_3\".\"CURSO\", '')) AS \"NOME_FORMACAO_DRAFT\",\r\n            *\r\n        FROM CODIGOS_FORMACAO\r\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_1\" ON CODIGOS_FORMACAO.\"COD_CURSO_1\" = \"FORMACAO_1\".\"CODIGO\"\r\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_2\" ON CODIGOS_FORMACAO.\"COD_CURSO_2\" = \"FORMACAO_2\".\"CODIGO\"\r\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_3\" ON CODIGOS_FORMACAO.\"COD_CURSO_3\" = \"FORMACAO_3\".\"CODIGO\"),\r\n    RESULTADOS_FORMACAO_ADEQUADA as (\r\n        SELECT\r\n            \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\",\r\n            REGEXP_REPLACE(\"CODIGO_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_COD\",\r\n            REGEXP_REPLACE(\"NOME_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_NOME\",\r\n            \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\r\n        FROM NOMES_FORMACAO)\r\n\r\nSELECT\r\n    \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\",\r\n    SUM(\"FORMACAO_ADEQUADA\") AS \"FORMACAO_ADEQUADA\",\r\n    SUM(\"DOCENCIA_TOTAL\") AS \"DOCENCIA_TOTAL\"\r\nFROM RESULTADOS_FORMACAO_ADEQUADA\r\nGROUP BY\r\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"ETAPA\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\"\r\nORDER BY\r\n    \"FK_MUNICIPIO_CODIGO\", \"FORMACAO_ADEQUADA\", \"DISCIPLINA_NOME\"", "language": "sql", "refs": [], "sources": [["raw", "DIM_FORMACAO_ADEQUADA"], ["raw", "DIM_CURSO_SUPERIOR"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_FORMACAO_ADEQUADA", "source.exp.raw.DIM_CURSO_SUPERIOR"]}, "compiled_path": "target\\compiled\\exp\\models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15b_2019_2020.sql", "compiled": true, "compiled_code": "-- 6 min 21s\nWITH FORMACOES_ADEQUADAS_LICENCIATURA as (\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\n        FROM \"postgres\".\"raw\".\"DIM_FORMACAO_ADEQUADA\"\n        WHERE \"COM_PEDAGO\"=0),\n    FORMACOES_ADEQUADAS_BACHARELADO as (\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\n        FROM \"postgres\".\"raw\".\"DIM_FORMACAO_ADEQUADA\"\n        WHERE \"COM_PEDAGO\"=1),\n    DIM_CURSO_SUPERIOR as (\n        SELECT \"CURSO\", \"CODIGO\"\n        FROM \"postgres\".\"raw\".\"DIM_CURSO_SUPERIOR\"),\n    COMPLEMENTACAO_PEDAGOGICA as (\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME_COMPL\", \"CO_AREA_COMPL\"\n        FROM \"raw\".\"DIM_COMPLEMENTACAO_PEDAGOGICA\"),\n    PRE_DF as (\n        SELECT\n            '2_FUND_ANOS_INICIAIS' as \"ETAPA\",\n            CASE\n                WHEN \"DISCIPLINA_NOME\" IN ('IN_DISC_LINGUA_INGLES', 'IN_DISC_LINGUA_ESPANHOL', 'IN_DISC_LINGUA_FRANCES', 'IN_DISC_LINGUA_OUTRA') THEN 'IN_DISC_LINGUA_ESTRANGEIRA'\n                ELSE \"DISCIPLINA_NOME\"\n            END AS \"DISCIPLINA_NOME\",\n            \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n        FROM\n            \"dbt_staging\".\"dim_educ_bas_docentes_15_2019_2020_reshape_disc\"\n        WHERE \"TP_ETAPA_ENSINO\" in (4, 5, 6, 7, 8, 14, 15, 16, 17, 18)),\n    COM_COMPL_PEDAGO as (\n        SELECT\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM COMPLEMENTACAO_PEDAGOGICA\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = PRE_DF.\"DISCIPLINA_NOME\" AND\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_1\"\n                ) THEN 1 ELSE 0 END AS \"AREA_1_COMPL_PEDAGO_ESPECIFICO\",\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM COMPLEMENTACAO_PEDAGOGICA\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = PRE_DF.\"DISCIPLINA_NOME\" AND\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_2\"\n                ) THEN 1 ELSE 0 END AS \"AREA_2_COMPL_PEDAGO_ESPECIFICO\",\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM COMPLEMENTACAO_PEDAGOGICA\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = PRE_DF.\"DISCIPLINA_NOME\" AND\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_3\"\n                ) THEN 1 ELSE 0 END AS \"AREA_3_COMPL_PEDAGO_ESPECIFICO\",\n\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM COMPLEMENTACAO_PEDAGOGICA\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = 'MULTIDISCIPLINAR' AND\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_1\"\n                ) THEN 1 ELSE 0 END AS \"AREA_1_COMPL_PEDAGO_MULTIDISCIPLINAR\",\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM COMPLEMENTACAO_PEDAGOGICA\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = 'MULTIDISCIPLINAR' AND\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_2\"\n                ) THEN 1 ELSE 0 END AS \"AREA_2_COMPL_PEDAGO_MULTIDISCIPLINAR\",\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM COMPLEMENTACAO_PEDAGOGICA\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = 'MULTIDISCIPLINAR' AND\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_3\"\n                ) THEN 1 ELSE 0 END AS \"AREA_3_COMPL_PEDAGO_MULTIDISCIPLINAR\",\n            *\n        FROM PRE_DF),\n    DOCENTES_RAW as (\n        SELECT\n            CASE WHEN 1 IN (\"AREA_1_COMPL_PEDAGO_ESPECIFICO\", \"AREA_2_COMPL_PEDAGO_ESPECIFICO\", \"AREA_3_COMPL_PEDAGO_ESPECIFICO\")\n                THEN 1 ELSE 0 END AS \"FLAG_COMPL_PEDAGO_ESPEC_ADEQUADA\",\n            CASE WHEN 1 IN (\"AREA_1_COMPL_PEDAGO_MULTIDISCIPLINAR\", \"AREA_2_COMPL_PEDAGO_MULTIDISCIPLINAR\", \"AREA_3_COMPL_PEDAGO_MULTIDISCIPLINAR\")\n                THEN 1 ELSE 0 END AS \"FLAG_COMPL_PEDAGO_MULTI_ADEQUADA\",\n            *\n        FROM COM_COMPL_PEDAGO),\n    ADEQUACAO_BASE as (\n        SELECT\n            CASE WHEN \"C_1_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_1_ADQ_BACH_ESPECIFICA\"=1 OR\n                      \"C_2_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_2_ADQ_BACH_ESPECIFICA\"=1 OR\n                      \"C_3_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_3_ADQ_BACH_ESPECIFICA\"=1\n                      THEN 1 ELSE 0\n                END AS \"FORMACAO_ADEQUADA_ESPECIFICA\",\n            CASE WHEN \"C_1_ADQ_LICEN_PEDAGOGICA\"=1 OR \"C_1_ADQ_BACH_PEDAGOGICA\"=1 OR\n                      \"C_2_ADQ_LICEN_PEDAGOGICA\"=1 OR \"C_2_ADQ_BACH_PEDAGOGICA\"=1 OR\n                      \"C_3_ADQ_LICEN_PEDAGOGICA\"=1 OR \"C_3_ADQ_BACH_PEDAGOGICA\"=1\n                      THEN 1 ELSE 0\n                END AS \"FORMACAO_ADEQUADA_PEDAGOGICA\",\n            -- \"DISCIPLINA_NOME\", \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\", \"ETAPA\"\n            *\n        FROM (\n            SELECT\n                CASE WHEN \"FLAG_COMPL_PEDAGO_ESPEC_ADEQUADA\"=1 AND \"C_1_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_1_ADQ_BACH_ESPECIFICA\",\n                CASE WHEN \"FLAG_COMPL_PEDAGO_ESPEC_ADEQUADA\"=1 AND \"C_2_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_2_ADQ_BACH_ESPECIFICA\",\n                CASE WHEN \"FLAG_COMPL_PEDAGO_ESPEC_ADEQUADA\"=1 AND \"C_3_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_3_ADQ_BACH_ESPECIFICA\",\n                CASE WHEN \"FLAG_COMPL_PEDAGO_MULTI_ADEQUADA\"=1 AND \"C_1_ADQ_BACH_PRE_PEDAGOGICA\"=1 THEN 1 ELSE 0 END AS \"C_1_ADQ_BACH_PEDAGOGICA\",\n                CASE WHEN \"FLAG_COMPL_PEDAGO_MULTI_ADEQUADA\"=1 AND \"C_2_ADQ_BACH_PRE_PEDAGOGICA\"=1 THEN 1 ELSE 0 END AS \"C_2_ADQ_BACH_PEDAGOGICA\",\n                CASE WHEN \"FLAG_COMPL_PEDAGO_MULTI_ADEQUADA\"=1 AND \"C_3_ADQ_BACH_PRE_PEDAGOGICA\"=1 THEN 1 ELSE 0 END AS \"C_3_ADQ_BACH_PEDAGOGICA\",\n                *\n            FROM (\n                SELECT\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_1_ADQ_LICEN_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_2_ADQ_LICEN_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_3_ADQ_LICEN_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_1_ADQ_BACH_PRE_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_2_ADQ_BACH_PRE_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_3_ADQ_BACH_PRE_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\n                                FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_1_ADQ_LICEN_PEDAGOGICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\n                                FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_2_ADQ_LICEN_PEDAGOGICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\n                                FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_3_ADQ_LICEN_PEDAGOGICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\n                                FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_1_ADQ_BACH_PRE_PEDAGOGICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\n                                FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_2_ADQ_BACH_PRE_PEDAGOGICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = 'MULTIDISCIPLINAR' AND\n                                FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_3_ADQ_BACH_PRE_PEDAGOGICA\",\n                    *\n                FROM DOCENTES_RAW) as adq_especifica_pre) as adq_especifica),\n    ADEQUACAO_FINAL as (\n        SELECT\n            CASE WHEN \"DISCIPLINA_NOME\"='IN_DISC_LINGUA_ESTRANGEIRA' THEN \"FORMACAO_ADEQUADA_ESPECIFICA\" ELSE\n            CASE WHEN \"FORMACAO_ADEQUADA_ESPECIFICA\"=1 OR \"FORMACAO_ADEQUADA_PEDAGOGICA\"=1 THEN 1 ELSE 0\n            END END AS \"FORMACAO_ADEQUADA\",\n            1 as \"DOCENCIA_TOTAL\",\n            *\n        FROM ADEQUACAO_BASE),\n    CODIGOS_FORMACAO as(\n        SELECT\n            CONCAT(COALESCE(\"COD_CURSO_1\", ''), '|', COALESCE(\"COD_CURSO_2\", ''), '|', COALESCE(\"COD_CURSO_3\", '')) AS \"CODIGO_FORMACAO_DRAFT\",\n            *\n        FROM ADEQUACAO_FINAL),\n    NOMES_FORMACAO as (\n        SELECT\n            CONCAT(COALESCE(\"FORMACAO_1\".\"CURSO\", ''), '|', COALESCE(\"FORMACAO_2\".\"CURSO\", ''), '|', COALESCE(\"FORMACAO_3\".\"CURSO\", '')) AS \"NOME_FORMACAO_DRAFT\",\n            *\n        FROM CODIGOS_FORMACAO\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_1\" ON CODIGOS_FORMACAO.\"COD_CURSO_1\" = \"FORMACAO_1\".\"CODIGO\"\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_2\" ON CODIGOS_FORMACAO.\"COD_CURSO_2\" = \"FORMACAO_2\".\"CODIGO\"\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_3\" ON CODIGOS_FORMACAO.\"COD_CURSO_3\" = \"FORMACAO_3\".\"CODIGO\"),\n    RESULTADOS_FORMACAO_ADEQUADA as (\n        SELECT\n            \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\",\n            REGEXP_REPLACE(\"CODIGO_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_COD\",\n            REGEXP_REPLACE(\"NOME_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_NOME\",\n            \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\n        FROM NOMES_FORMACAO)\n\nSELECT\n    \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\",\n    SUM(\"FORMACAO_ADEQUADA\") AS \"FORMACAO_ADEQUADA\",\n    SUM(\"DOCENCIA_TOTAL\") AS \"DOCENCIA_TOTAL\"\nFROM RESULTADOS_FORMACAO_ADEQUADA\nGROUP BY\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"ETAPA\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\"\nORDER BY\n    \"FK_MUNICIPIO_CODIGO\", \"FORMACAO_ADEQUADA\", \"DISCIPLINA_NOME\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_15cd_2014_to_2018": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_15cd_2014_to_2018", "resource_type": "model", "package_name": "exp", "path": "educ_bas_docentes_15\\dim_educ_bas_docentes_15cd_2014_to_2018.sql", "original_file_path": "models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15cd_2014_to_2018.sql", "unique_id": "model.exp.dim_educ_bas_docentes_15cd_2014_to_2018", "fqn": ["exp", "educ_bas_docentes_15", "dim_educ_bas_docentes_15cd_2014_to_2018"], "alias": "dim_educ_bas_docentes_15cd_2014_to_2018", "checksum": {"name": "sha256", "checksum": "374fced1c1508e905e5237cead840a044636f8d11f25864afbb3fb9d17911937"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.2616296, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15cd_2014_to_2018\"", "raw_code": "-- 15min\r\nWITH FORMACOES_ADEQUADAS_LICENCIATURA as (\r\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\r\n        FROM {{ source(\"raw\", \"DIM_FORMACAO_ADEQUADA\") }}\r\n        WHERE \"COM_PEDAGO\"=0),\r\n    FORMACOES_ADEQUADAS_BACHARELADO as (\r\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\r\n        FROM {{ source(\"raw\", \"DIM_FORMACAO_ADEQUADA\") }}\r\n        WHERE \"COM_PEDAGO\"=1),\r\n    DIM_CURSO_SUPERIOR as (\r\n        SELECT \"CURSO\", \"CODIGO\"\r\n        FROM {{ source(\"raw\", \"DIM_CURSO_SUPERIOR\") }}),\r\n    DOCENTES_RAW as (\r\n        SELECT\r\n            CASE\r\n                WHEN \"TP_ETAPA_ENSINO\" in (9, 10, 11, 12, 13, 19, 20, 21, 41, 22, 23, 24) THEN '3_FUND_ANOS_FINAIS'\r\n                WHEN \"TP_ETAPA_ENSINO\" in (25, 26, 27, 28, 29, 35, 36, 37, 38) THEN '4_ENSINO_MEDIO'\r\n                ELSE '' END AS \"ETAPA\",\r\n            CASE\r\n                WHEN \"DISCIPLINA_NOME\" IN ('IN_DISC_LINGUA_INGLES', 'IN_DISC_LINGUA_ESPANHOL', 'IN_DISC_LINGUA_FRANCES', 'IN_DISC_LINGUA_OUTRA') THEN 'IN_DISC_LINGUA_ESTRANGEIRA'\r\n                ELSE \"DISCIPLINA_NOME\"\r\n            END AS \"DISCIPLINA_NOME\",\r\n            \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\r\n        FROM\r\n            {{ ref(\"dim_educ_bas_docentes_15_2014_to_2018_reshape_disc\") }}\r\n        WHERE \"TP_ETAPA_ENSINO\" in (9, 10, 11, 12, 13, 19, 20, 21, 41, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 37, 38)),\r\n    ADEQUACAO_BASE as (\r\n        SELECT\r\n            CASE WHEN \"C_1_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_1_ADQ_BACH_ESPECIFICA\"=1 OR\r\n                      \"C_2_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_2_ADQ_BACH_ESPECIFICA\"=1 OR\r\n                      \"C_3_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_3_ADQ_BACH_ESPECIFICA\"=1\r\n                      THEN 1 ELSE 0\r\n                END AS \"FORMACAO_ADEQUADA_ESPECIFICA\",\r\n            \"DISCIPLINA_NOME\", \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\", \"ETAPA\"\r\n            --*\r\n        FROM (\r\n            SELECT *,\r\n                CASE WHEN \"IN_COM_PEDAGOGICA_1\"=1 AND \"C_1_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_1_ADQ_BACH_ESPECIFICA\",\r\n                CASE WHEN \"IN_COM_PEDAGOGICA_2\"=1 AND \"C_2_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_2_ADQ_BACH_ESPECIFICA\",\r\n                CASE WHEN \"IN_COM_PEDAGOGICA_3\"=1 AND \"C_3_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_3_ADQ_BACH_ESPECIFICA\"\r\n            FROM (\r\n                SELECT *,\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_1_ADQ_LICEN_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_2_ADQ_LICEN_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_3_ADQ_LICEN_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_1_ADQ_BACH_PRE_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_2_ADQ_BACH_PRE_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_3_ADQ_BACH_PRE_ESPECIFICA\"\r\n                FROM\r\n                    DOCENTES_RAW) as adq_especifica_pre) as adq_especifica),\r\n    ADEQUACAO_FINAL as (\r\n        SELECT\r\n            CASE WHEN \"DISCIPLINA_NOME\"='IN_DISC_LINGUA_ESTRANGEIRA' THEN \"FORMACAO_ADEQUADA_ESPECIFICA\" ELSE\r\n            CASE WHEN \"FORMACAO_ADEQUADA_ESPECIFICA\"=1 THEN 1 ELSE 0\r\n            END END AS \"FORMACAO_ADEQUADA\",\r\n            1 as \"DOCENCIA_TOTAL\",\r\n            *\r\n        FROM ADEQUACAO_BASE),\r\n    CODIGOS_FORMACAO as(\r\n        SELECT\r\n            CONCAT(COALESCE(\"COD_CURSO_1\", ''), '|', COALESCE(\"COD_CURSO_2\", ''), '|', COALESCE(\"COD_CURSO_3\", '')) AS \"CODIGO_FORMACAO_DRAFT\",\r\n            *\r\n        FROM ADEQUACAO_FINAL),\r\n    NOMES_FORMACAO as (\r\n        SELECT\r\n            CONCAT(COALESCE(\"FORMACAO_1\".\"CURSO\", ''), '|', COALESCE(\"FORMACAO_2\".\"CURSO\", ''), '|', COALESCE(\"FORMACAO_3\".\"CURSO\", '')) AS \"NOME_FORMACAO_DRAFT\",\r\n            *\r\n        FROM CODIGOS_FORMACAO\r\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_1\" ON CODIGOS_FORMACAO.\"COD_CURSO_1\" = \"FORMACAO_1\".\"CODIGO\"\r\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_2\" ON CODIGOS_FORMACAO.\"COD_CURSO_2\" = \"FORMACAO_2\".\"CODIGO\"\r\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_3\" ON CODIGOS_FORMACAO.\"COD_CURSO_3\" = \"FORMACAO_3\".\"CODIGO\"),\r\n    RESULTADOS_FORMACAO_ADEQUADA as (\r\n        SELECT\r\n            \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\",\r\n            REGEXP_REPLACE(\"CODIGO_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_COD\",\r\n            REGEXP_REPLACE(\"NOME_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_NOME\",\r\n            \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\r\n        FROM NOMES_FORMACAO)\r\n\r\nSELECT\r\n    \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\",\r\n    SUM(\"FORMACAO_ADEQUADA\") AS \"FORMACAO_ADEQUADA\",\r\n    SUM(\"DOCENCIA_TOTAL\") AS \"DOCENCIA_TOTAL\"\r\nFROM RESULTADOS_FORMACAO_ADEQUADA\r\nGROUP BY\r\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"ETAPA\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\"\r\nORDER BY\r\n    \"FK_MUNICIPIO_CODIGO\", \"FORMACAO_ADEQUADA\", \"DISCIPLINA_NOME\"", "language": "sql", "refs": [{"name": "dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "package": null, "version": null}], "sources": [["raw", "DIM_FORMACAO_ADEQUADA"], ["raw", "DIM_CURSO_SUPERIOR"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_FORMACAO_ADEQUADA", "source.exp.raw.DIM_CURSO_SUPERIOR", "model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc"]}, "compiled_path": "target\\compiled\\exp\\models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15cd_2014_to_2018.sql", "compiled": true, "compiled_code": "-- 15min\nWITH FORMACOES_ADEQUADAS_LICENCIATURA as (\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\n        FROM \"postgres\".\"raw\".\"DIM_FORMACAO_ADEQUADA\"\n        WHERE \"COM_PEDAGO\"=0),\n    FORMACOES_ADEQUADAS_BACHARELADO as (\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\n        FROM \"postgres\".\"raw\".\"DIM_FORMACAO_ADEQUADA\"\n        WHERE \"COM_PEDAGO\"=1),\n    DIM_CURSO_SUPERIOR as (\n        SELECT \"CURSO\", \"CODIGO\"\n        FROM \"postgres\".\"raw\".\"DIM_CURSO_SUPERIOR\"),\n    DOCENTES_RAW as (\n        SELECT\n            CASE\n                WHEN \"TP_ETAPA_ENSINO\" in (9, 10, 11, 12, 13, 19, 20, 21, 41, 22, 23, 24) THEN '3_FUND_ANOS_FINAIS'\n                WHEN \"TP_ETAPA_ENSINO\" in (25, 26, 27, 28, 29, 35, 36, 37, 38) THEN '4_ENSINO_MEDIO'\n                ELSE '' END AS \"ETAPA\",\n            CASE\n                WHEN \"DISCIPLINA_NOME\" IN ('IN_DISC_LINGUA_INGLES', 'IN_DISC_LINGUA_ESPANHOL', 'IN_DISC_LINGUA_FRANCES', 'IN_DISC_LINGUA_OUTRA') THEN 'IN_DISC_LINGUA_ESTRANGEIRA'\n                ELSE \"DISCIPLINA_NOME\"\n            END AS \"DISCIPLINA_NOME\",\n            \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n        FROM\n            \"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15_2014_to_2018_reshape_disc\"\n        WHERE \"TP_ETAPA_ENSINO\" in (9, 10, 11, 12, 13, 19, 20, 21, 41, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 37, 38)),\n    ADEQUACAO_BASE as (\n        SELECT\n            CASE WHEN \"C_1_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_1_ADQ_BACH_ESPECIFICA\"=1 OR\n                      \"C_2_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_2_ADQ_BACH_ESPECIFICA\"=1 OR\n                      \"C_3_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_3_ADQ_BACH_ESPECIFICA\"=1\n                      THEN 1 ELSE 0\n                END AS \"FORMACAO_ADEQUADA_ESPECIFICA\",\n            \"DISCIPLINA_NOME\", \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\", \"ETAPA\"\n            --*\n        FROM (\n            SELECT *,\n                CASE WHEN \"IN_COM_PEDAGOGICA_1\"=1 AND \"C_1_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_1_ADQ_BACH_ESPECIFICA\",\n                CASE WHEN \"IN_COM_PEDAGOGICA_2\"=1 AND \"C_2_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_2_ADQ_BACH_ESPECIFICA\",\n                CASE WHEN \"IN_COM_PEDAGOGICA_3\"=1 AND \"C_3_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_3_ADQ_BACH_ESPECIFICA\"\n            FROM (\n                SELECT *,\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_1_ADQ_LICEN_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_2_ADQ_LICEN_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_3_ADQ_LICEN_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_1_ADQ_BACH_PRE_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_2_ADQ_BACH_PRE_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_3_ADQ_BACH_PRE_ESPECIFICA\"\n                FROM\n                    DOCENTES_RAW) as adq_especifica_pre) as adq_especifica),\n    ADEQUACAO_FINAL as (\n        SELECT\n            CASE WHEN \"DISCIPLINA_NOME\"='IN_DISC_LINGUA_ESTRANGEIRA' THEN \"FORMACAO_ADEQUADA_ESPECIFICA\" ELSE\n            CASE WHEN \"FORMACAO_ADEQUADA_ESPECIFICA\"=1 THEN 1 ELSE 0\n            END END AS \"FORMACAO_ADEQUADA\",\n            1 as \"DOCENCIA_TOTAL\",\n            *\n        FROM ADEQUACAO_BASE),\n    CODIGOS_FORMACAO as(\n        SELECT\n            CONCAT(COALESCE(\"COD_CURSO_1\", ''), '|', COALESCE(\"COD_CURSO_2\", ''), '|', COALESCE(\"COD_CURSO_3\", '')) AS \"CODIGO_FORMACAO_DRAFT\",\n            *\n        FROM ADEQUACAO_FINAL),\n    NOMES_FORMACAO as (\n        SELECT\n            CONCAT(COALESCE(\"FORMACAO_1\".\"CURSO\", ''), '|', COALESCE(\"FORMACAO_2\".\"CURSO\", ''), '|', COALESCE(\"FORMACAO_3\".\"CURSO\", '')) AS \"NOME_FORMACAO_DRAFT\",\n            *\n        FROM CODIGOS_FORMACAO\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_1\" ON CODIGOS_FORMACAO.\"COD_CURSO_1\" = \"FORMACAO_1\".\"CODIGO\"\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_2\" ON CODIGOS_FORMACAO.\"COD_CURSO_2\" = \"FORMACAO_2\".\"CODIGO\"\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_3\" ON CODIGOS_FORMACAO.\"COD_CURSO_3\" = \"FORMACAO_3\".\"CODIGO\"),\n    RESULTADOS_FORMACAO_ADEQUADA as (\n        SELECT\n            \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\",\n            REGEXP_REPLACE(\"CODIGO_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_COD\",\n            REGEXP_REPLACE(\"NOME_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_NOME\",\n            \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\n        FROM NOMES_FORMACAO)\n\nSELECT\n    \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\",\n    SUM(\"FORMACAO_ADEQUADA\") AS \"FORMACAO_ADEQUADA\",\n    SUM(\"DOCENCIA_TOTAL\") AS \"DOCENCIA_TOTAL\"\nFROM RESULTADOS_FORMACAO_ADEQUADA\nGROUP BY\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"ETAPA\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\"\nORDER BY\n    \"FK_MUNICIPIO_CODIGO\", \"FORMACAO_ADEQUADA\", \"DISCIPLINA_NOME\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_15cd_2019_2020": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_15cd_2019_2020", "resource_type": "model", "package_name": "exp", "path": "educ_bas_docentes_15\\dim_educ_bas_docentes_15cd_2019_2020.sql", "original_file_path": "models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15cd_2019_2020.sql", "unique_id": "model.exp.dim_educ_bas_docentes_15cd_2019_2020", "fqn": ["exp", "educ_bas_docentes_15", "dim_educ_bas_docentes_15cd_2019_2020"], "alias": "dim_educ_bas_docentes_15cd_2019_2020", "checksum": {"name": "sha256", "checksum": "4ba9250138a170d283613c040643c850716a708e5000b1e8b479ee8c677e4003"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.2661924, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15cd_2019_2020\"", "raw_code": "-- 15 min\r\nWITH FORMACOES_ADEQUADAS_LICENCIATURA as (\r\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\r\n        FROM {{ source(\"raw\", \"DIM_FORMACAO_ADEQUADA\") }}\r\n        WHERE \"COM_PEDAGO\"=0),\r\n    FORMACOES_ADEQUADAS_BACHARELADO as (\r\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\r\n        FROM {{ source(\"raw\", \"DIM_FORMACAO_ADEQUADA\") }}\r\n        WHERE \"COM_PEDAGO\"=1),\r\n    DIM_CURSO_SUPERIOR as (\r\n        SELECT \"CURSO\", \"CODIGO\"\r\n        FROM {{ source(\"raw\", \"DIM_CURSO_SUPERIOR\") }}),\r\n    COMPLEMENTACAO_PEDAGOGICA as (\r\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME_COMPL\", \"CO_AREA_COMPL\"\r\n        FROM \"raw\".\"DIM_COMPLEMENTACAO_PEDAGOGICA\"),\r\n    PRE_DF as (\r\n        SELECT\r\n            CASE\r\n                WHEN \"TP_ETAPA_ENSINO\" in (9, 10, 11, 12, 13, 19, 20, 21, 41, 22, 23, 24) THEN '3_FUND_ANOS_FINAIS'\r\n                WHEN \"TP_ETAPA_ENSINO\" in (25, 26, 27, 28, 29, 35, 36, 37, 38) THEN '4_ENSINO_MEDIO'\r\n                ELSE '' END AS \"ETAPA\",\r\n            CASE\r\n                WHEN \"DISCIPLINA_NOME\" IN ('IN_DISC_LINGUA_INGLES', 'IN_DISC_LINGUA_ESPANHOL', 'IN_DISC_LINGUA_FRANCES', 'IN_DISC_LINGUA_OUTRA') THEN 'IN_DISC_LINGUA_ESTRANGEIRA'\r\n                ELSE \"DISCIPLINA_NOME\"\r\n            END AS \"DISCIPLINA_NOME\",\r\n            \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\r\n        FROM\r\n            {{ ref(\"dim_educ_bas_docentes_15_2019_2020_reshape_disc\") }}\r\n        WHERE \"TP_ETAPA_ENSINO\" in (9, 10, 11, 12, 13, 19, 20, 21, 41, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 37, 38)),\r\n    COM_COMPL_PEDAGO as (\r\n        SELECT\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM COMPLEMENTACAO_PEDAGOGICA\r\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = PRE_DF.\"DISCIPLINA_NOME\" AND\r\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_1\"\r\n                ) THEN 1 ELSE 0 END AS \"AREA_1_COMPL_PEDAGO_ESPECIFICO\",\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM COMPLEMENTACAO_PEDAGOGICA\r\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = PRE_DF.\"DISCIPLINA_NOME\" AND\r\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_2\"\r\n                ) THEN 1 ELSE 0 END AS \"AREA_2_COMPL_PEDAGO_ESPECIFICO\",\r\n            CASE WHEN EXISTS (\r\n                    SELECT 1\r\n                    FROM COMPLEMENTACAO_PEDAGOGICA\r\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = PRE_DF.\"DISCIPLINA_NOME\" AND\r\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_3\"\r\n                ) THEN 1 ELSE 0 END AS \"AREA_3_COMPL_PEDAGO_ESPECIFICO\",\r\n            *\r\n        FROM PRE_DF),\r\n    DOCENTES_RAW as (\r\n        SELECT\r\n            CASE WHEN 1 IN (\"AREA_1_COMPL_PEDAGO_ESPECIFICO\", \"AREA_2_COMPL_PEDAGO_ESPECIFICO\", \"AREA_3_COMPL_PEDAGO_ESPECIFICO\")\r\n                THEN 1 ELSE 0 END AS \"FLAG_COMPL_PEDAGO_ESPEC_ADEQUADA\",\r\n            *\r\n        FROM COM_COMPL_PEDAGO),\r\n    ADEQUACAO_BASE as (\r\n        SELECT\r\n            CASE WHEN \"C_1_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_1_ADQ_BACH_ESPECIFICA\"=1 OR\r\n                      \"C_2_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_2_ADQ_BACH_ESPECIFICA\"=1 OR\r\n                      \"C_3_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_3_ADQ_BACH_ESPECIFICA\"=1\r\n                      THEN 1 ELSE 0\r\n                END AS \"FORMACAO_ADEQUADA_ESPECIFICA\",\r\n            -- \"DISCIPLINA_NOME\", \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\", \"ETAPA\"\r\n            *\r\n        FROM (\r\n            SELECT\r\n                CASE WHEN \"FLAG_COMPL_PEDAGO_ESPEC_ADEQUADA\"=1 AND \"C_1_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_1_ADQ_BACH_ESPECIFICA\",\r\n                CASE WHEN \"FLAG_COMPL_PEDAGO_ESPEC_ADEQUADA\"=1 AND \"C_2_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_2_ADQ_BACH_ESPECIFICA\",\r\n                CASE WHEN \"FLAG_COMPL_PEDAGO_ESPEC_ADEQUADA\"=1 AND \"C_3_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_3_ADQ_BACH_ESPECIFICA\",\r\n                *\r\n            FROM (\r\n                SELECT\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_1_ADQ_LICEN_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_2_ADQ_LICEN_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\r\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_3_ADQ_LICEN_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_1_ADQ_BACH_PRE_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_2_ADQ_BACH_PRE_ESPECIFICA\",\r\n                    CASE WHEN EXISTS (\r\n                            SELECT 1\r\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\r\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\r\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\r\n                        ) THEN 1 ELSE 0\r\n                    END AS \"C_3_ADQ_BACH_PRE_ESPECIFICA\",\r\n                    *\r\n                FROM DOCENTES_RAW) as adq_especifica_pre) as adq_especifica),\r\n    ADEQUACAO_FINAL as (\r\n        SELECT\r\n            \"FORMACAO_ADEQUADA_ESPECIFICA\" AS \"FORMACAO_ADEQUADA\",\r\n            1 as \"DOCENCIA_TOTAL\",\r\n            *\r\n        FROM ADEQUACAO_BASE),\r\n    CODIGOS_FORMACAO as(\r\n        SELECT\r\n            CONCAT(COALESCE(\"COD_CURSO_1\", ''), '|', COALESCE(\"COD_CURSO_2\", ''), '|', COALESCE(\"COD_CURSO_3\", '')) AS \"CODIGO_FORMACAO_DRAFT\",\r\n            *\r\n        FROM ADEQUACAO_FINAL),\r\n    NOMES_FORMACAO as (\r\n        SELECT\r\n            CONCAT(COALESCE(\"FORMACAO_1\".\"CURSO\", ''), '|', COALESCE(\"FORMACAO_2\".\"CURSO\", ''), '|', COALESCE(\"FORMACAO_3\".\"CURSO\", '')) AS \"NOME_FORMACAO_DRAFT\",\r\n            *\r\n        FROM CODIGOS_FORMACAO\r\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_1\" ON CODIGOS_FORMACAO.\"COD_CURSO_1\" = \"FORMACAO_1\".\"CODIGO\"\r\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_2\" ON CODIGOS_FORMACAO.\"COD_CURSO_2\" = \"FORMACAO_2\".\"CODIGO\"\r\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_3\" ON CODIGOS_FORMACAO.\"COD_CURSO_3\" = \"FORMACAO_3\".\"CODIGO\"),\r\n    RESULTADOS_FORMACAO_ADEQUADA as (\r\n        SELECT\r\n            \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\",\r\n            REGEXP_REPLACE(\"CODIGO_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_COD\",\r\n            REGEXP_REPLACE(\"NOME_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_NOME\",\r\n            \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\r\n        FROM NOMES_FORMACAO)\r\n\r\nSELECT\r\n    \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\",\r\n    SUM(\"FORMACAO_ADEQUADA\") AS \"FORMACAO_ADEQUADA\",\r\n    SUM(\"DOCENCIA_TOTAL\") AS \"DOCENCIA_TOTAL\"\r\nFROM RESULTADOS_FORMACAO_ADEQUADA\r\nGROUP BY\r\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"ETAPA\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\"\r\nORDER BY\r\n    \"FK_MUNICIPIO_CODIGO\", \"FORMACAO_ADEQUADA\", \"DISCIPLINA_NOME\"", "language": "sql", "refs": [{"name": "dim_educ_bas_docentes_15_2019_2020_reshape_disc", "package": null, "version": null}], "sources": [["raw", "DIM_FORMACAO_ADEQUADA"], ["raw", "DIM_CURSO_SUPERIOR"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_FORMACAO_ADEQUADA", "source.exp.raw.DIM_CURSO_SUPERIOR", "model.exp.dim_educ_bas_docentes_15_2019_2020_reshape_disc"]}, "compiled_path": "target\\compiled\\exp\\models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15cd_2019_2020.sql", "compiled": true, "compiled_code": "-- 15 min\nWITH FORMACOES_ADEQUADAS_LICENCIATURA as (\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\n        FROM \"postgres\".\"raw\".\"DIM_FORMACAO_ADEQUADA\"\n        WHERE \"COM_PEDAGO\"=0),\n    FORMACOES_ADEQUADAS_BACHARELADO as (\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME\",\"CURSO_COD\",\"COM_PEDAGO\"\n        FROM \"postgres\".\"raw\".\"DIM_FORMACAO_ADEQUADA\"\n        WHERE \"COM_PEDAGO\"=1),\n    DIM_CURSO_SUPERIOR as (\n        SELECT \"CURSO\", \"CODIGO\"\n        FROM \"postgres\".\"raw\".\"DIM_CURSO_SUPERIOR\"),\n    COMPLEMENTACAO_PEDAGOGICA as (\n        SELECT \"DISCIPLINA\" as \"DISCIPLINA_NOME_COMPL\", \"CO_AREA_COMPL\"\n        FROM \"raw\".\"DIM_COMPLEMENTACAO_PEDAGOGICA\"),\n    PRE_DF as (\n        SELECT\n            CASE\n                WHEN \"TP_ETAPA_ENSINO\" in (9, 10, 11, 12, 13, 19, 20, 21, 41, 22, 23, 24) THEN '3_FUND_ANOS_FINAIS'\n                WHEN \"TP_ETAPA_ENSINO\" in (25, 26, 27, 28, 29, 35, 36, 37, 38) THEN '4_ENSINO_MEDIO'\n                ELSE '' END AS \"ETAPA\",\n            CASE\n                WHEN \"DISCIPLINA_NOME\" IN ('IN_DISC_LINGUA_INGLES', 'IN_DISC_LINGUA_ESPANHOL', 'IN_DISC_LINGUA_FRANCES', 'IN_DISC_LINGUA_OUTRA') THEN 'IN_DISC_LINGUA_ESTRANGEIRA'\n                ELSE \"DISCIPLINA_NOME\"\n            END AS \"DISCIPLINA_NOME\",\n            \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n        FROM\n            \"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15_2019_2020_reshape_disc\"\n        WHERE \"TP_ETAPA_ENSINO\" in (9, 10, 11, 12, 13, 19, 20, 21, 41, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 37, 38)),\n    COM_COMPL_PEDAGO as (\n        SELECT\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM COMPLEMENTACAO_PEDAGOGICA\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = PRE_DF.\"DISCIPLINA_NOME\" AND\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_1\"\n                ) THEN 1 ELSE 0 END AS \"AREA_1_COMPL_PEDAGO_ESPECIFICO\",\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM COMPLEMENTACAO_PEDAGOGICA\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = PRE_DF.\"DISCIPLINA_NOME\" AND\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_2\"\n                ) THEN 1 ELSE 0 END AS \"AREA_2_COMPL_PEDAGO_ESPECIFICO\",\n            CASE WHEN EXISTS (\n                    SELECT 1\n                    FROM COMPLEMENTACAO_PEDAGOGICA\n                    WHERE COMPLEMENTACAO_PEDAGOGICA.\"DISCIPLINA_NOME_COMPL\" = PRE_DF.\"DISCIPLINA_NOME\" AND\n                          COMPLEMENTACAO_PEDAGOGICA.\"CO_AREA_COMPL\" = PRE_DF.\"CO_AREA_COMPL_PEDAGOGICA_3\"\n                ) THEN 1 ELSE 0 END AS \"AREA_3_COMPL_PEDAGO_ESPECIFICO\",\n            *\n        FROM PRE_DF),\n    DOCENTES_RAW as (\n        SELECT\n            CASE WHEN 1 IN (\"AREA_1_COMPL_PEDAGO_ESPECIFICO\", \"AREA_2_COMPL_PEDAGO_ESPECIFICO\", \"AREA_3_COMPL_PEDAGO_ESPECIFICO\")\n                THEN 1 ELSE 0 END AS \"FLAG_COMPL_PEDAGO_ESPEC_ADEQUADA\",\n            *\n        FROM COM_COMPL_PEDAGO),\n    ADEQUACAO_BASE as (\n        SELECT\n            CASE WHEN \"C_1_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_1_ADQ_BACH_ESPECIFICA\"=1 OR\n                      \"C_2_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_2_ADQ_BACH_ESPECIFICA\"=1 OR\n                      \"C_3_ADQ_LICEN_ESPECIFICA\"=1 OR \"C_3_ADQ_BACH_ESPECIFICA\"=1\n                      THEN 1 ELSE 0\n                END AS \"FORMACAO_ADEQUADA_ESPECIFICA\",\n            -- \"DISCIPLINA_NOME\", \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\", \"ETAPA\"\n            *\n        FROM (\n            SELECT\n                CASE WHEN \"FLAG_COMPL_PEDAGO_ESPEC_ADEQUADA\"=1 AND \"C_1_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_1_ADQ_BACH_ESPECIFICA\",\n                CASE WHEN \"FLAG_COMPL_PEDAGO_ESPEC_ADEQUADA\"=1 AND \"C_2_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_2_ADQ_BACH_ESPECIFICA\",\n                CASE WHEN \"FLAG_COMPL_PEDAGO_ESPEC_ADEQUADA\"=1 AND \"C_3_ADQ_BACH_PRE_ESPECIFICA\"=1 THEN 1 ELSE 0 END AS \"C_3_ADQ_BACH_ESPECIFICA\",\n                *\n            FROM (\n                SELECT\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_1_ADQ_LICEN_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_2_ADQ_LICEN_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_LICENCIATURA\n                            WHERE FORMACOES_ADEQUADAS_LICENCIATURA.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_LICENCIATURA.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_3_ADQ_LICEN_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_1\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_1_ADQ_BACH_PRE_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_2\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_2_ADQ_BACH_PRE_ESPECIFICA\",\n                    CASE WHEN EXISTS (\n                            SELECT 1\n                            FROM FORMACOES_ADEQUADAS_BACHARELADO\n                            WHERE FORMACOES_ADEQUADAS_BACHARELADO.\"DISCIPLINA_NOME\" = DOCENTES_RAW.\"DISCIPLINA_NOME\" AND\n                                  FORMACOES_ADEQUADAS_BACHARELADO.\"CURSO_COD\" = DOCENTES_RAW.\"COD_CURSO_3\"\n                        ) THEN 1 ELSE 0\n                    END AS \"C_3_ADQ_BACH_PRE_ESPECIFICA\",\n                    *\n                FROM DOCENTES_RAW) as adq_especifica_pre) as adq_especifica),\n    ADEQUACAO_FINAL as (\n        SELECT\n            \"FORMACAO_ADEQUADA_ESPECIFICA\" AS \"FORMACAO_ADEQUADA\",\n            1 as \"DOCENCIA_TOTAL\",\n            *\n        FROM ADEQUACAO_BASE),\n    CODIGOS_FORMACAO as(\n        SELECT\n            CONCAT(COALESCE(\"COD_CURSO_1\", ''), '|', COALESCE(\"COD_CURSO_2\", ''), '|', COALESCE(\"COD_CURSO_3\", '')) AS \"CODIGO_FORMACAO_DRAFT\",\n            *\n        FROM ADEQUACAO_FINAL),\n    NOMES_FORMACAO as (\n        SELECT\n            CONCAT(COALESCE(\"FORMACAO_1\".\"CURSO\", ''), '|', COALESCE(\"FORMACAO_2\".\"CURSO\", ''), '|', COALESCE(\"FORMACAO_3\".\"CURSO\", '')) AS \"NOME_FORMACAO_DRAFT\",\n            *\n        FROM CODIGOS_FORMACAO\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_1\" ON CODIGOS_FORMACAO.\"COD_CURSO_1\" = \"FORMACAO_1\".\"CODIGO\"\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_2\" ON CODIGOS_FORMACAO.\"COD_CURSO_2\" = \"FORMACAO_2\".\"CODIGO\"\n        LEFT JOIN DIM_CURSO_SUPERIOR AS \"FORMACAO_3\" ON CODIGOS_FORMACAO.\"COD_CURSO_3\" = \"FORMACAO_3\".\"CODIGO\"),\n    RESULTADOS_FORMACAO_ADEQUADA as (\n        SELECT\n            \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\",\n            REGEXP_REPLACE(\"CODIGO_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_COD\",\n            REGEXP_REPLACE(\"NOME_FORMACAO_DRAFT\", '\\|*$', '') AS \"FORMACAO_NOME\",\n            \"FORMACAO_ADEQUADA\", \"DOCENCIA_TOTAL\"\n        FROM NOMES_FORMACAO)\n\nSELECT\n    \"ANO\", \"ETAPA\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\",\n    SUM(\"FORMACAO_ADEQUADA\") AS \"FORMACAO_ADEQUADA\",\n    SUM(\"DOCENCIA_TOTAL\") AS \"DOCENCIA_TOTAL\"\nFROM RESULTADOS_FORMACAO_ADEQUADA\nGROUP BY\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"ETAPA\", \"TP_DEPENDENCIA\", \"DISCIPLINA_NOME\", \"FORMACAO_COD\", \"FORMACAO_NOME\"\nORDER BY\n    \"FK_MUNICIPIO_CODIGO\", \"FORMACAO_ADEQUADA\", \"DISCIPLINA_NOME\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "resource_type": "model", "package_name": "exp", "path": "educ_bas_docentes_15\\dim_educ_bas_docentes_15_2014_to_2018_reshape_disc.sql", "original_file_path": "models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15_2014_to_2018_reshape_disc.sql", "unique_id": "model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "fqn": ["exp", "educ_bas_docentes_15", "dim_educ_bas_docentes_15_2014_to_2018_reshape_disc"], "alias": "dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "checksum": {"name": "sha256", "checksum": "91b0a804b9b3d4b4f7c5513814aa615e54b9c35612e34c640027124852274a00"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.270231, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15_2014_to_2018_reshape_disc\"", "raw_code": "-- 24 minutos\r\nWITH DOCENTES_RAW as (\r\n        SELECT\r\n            *,\r\n            -- Cancel courses that \"in progress\"\r\n            CASE WHEN \"TP_SITUACAO_CURSO_1\"=1 THEN \"CO_CURSO_1\" ELSE '' END AS \"COD_CURSO_1\",\r\n            CASE WHEN \"TP_SITUACAO_CURSO_2\"=1 THEN \"CO_CURSO_2\" ELSE '' END AS \"COD_CURSO_2\",\r\n            CASE WHEN \"TP_SITUACAO_CURSO_3\"=1 THEN \"CO_CURSO_3\" ELSE '' END AS \"COD_CURSO_3\"\r\n        FROM (\r\n            {% set years = [2014, 2015, 2016, 2017, 2018] %}\r\n            {% set regions = [\"CO\", \"NORTE\", \"NORDESTE\", \"SUDESTE\", \"SUL\"] %}\r\n            {% for region in regions %}\r\n                {% for year in years %}\r\n                SELECT\r\n                    {{year}} as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\r\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\r\n                FROM\r\n                    {{source(\"raw\", \"DIM_DOCENTES_\" ~ region ~\"_\" ~ year) }}\r\n                {% if not loop.last %}\r\n                UNION ALL\r\n                {% endif %}\r\n                {% endfor %}\r\n            {% if not loop.last %}\r\n                UNION ALL\r\n            {% endif %}\r\n            {% endfor %}\r\n            ) as temp\r\n        WHERE \"TP_ETAPA_ENSINO\" in (4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 9, 10, 11, 12, 13, 19, 20, 21, 41, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 37, 38) and \"TP_TIPO_DOCENTE\" in (1, 5, 6)\r\n            ),\r\n    RESHAPE_DISCIPLINAS as (\r\n            {% set list_disc = [\"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\"] %}\r\n            {% for disc in list_disc %}\r\n            SELECT '{{disc}}' as \"DISCIPLINA_NOME\",\r\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\r\n            FROM DOCENTES_RAW\r\n            WHERE \"{{disc}}\"=1\r\n            {% if not loop.last %}\r\n            UNION ALL\r\n            {% endif %}\r\n            {% endfor %}\r\n            )\r\nSELECT\r\n    *\r\nFROM RESHAPE_DISCIPLINAS", "language": "sql", "refs": [], "sources": [["raw", "DIM_DOCENTES_CO_2014"], ["raw", "DIM_DOCENTES_CO_2015"], ["raw", "DIM_DOCENTES_CO_2016"], ["raw", "DIM_DOCENTES_CO_2017"], ["raw", "DIM_DOCENTES_CO_2018"], ["raw", "DIM_DOCENTES_NORTE_2014"], ["raw", "DIM_DOCENTES_NORTE_2015"], ["raw", "DIM_DOCENTES_NORTE_2016"], ["raw", "DIM_DOCENTES_NORTE_2017"], ["raw", "DIM_DOCENTES_NORTE_2018"], ["raw", "DIM_DOCENTES_NORDESTE_2014"], ["raw", "DIM_DOCENTES_NORDESTE_2015"], ["raw", "DIM_DOCENTES_NORDESTE_2016"], ["raw", "DIM_DOCENTES_NORDESTE_2017"], ["raw", "DIM_DOCENTES_NORDESTE_2018"], ["raw", "DIM_DOCENTES_SUDESTE_2014"], ["raw", "DIM_DOCENTES_SUDESTE_2015"], ["raw", "DIM_DOCENTES_SUDESTE_2016"], ["raw", "DIM_DOCENTES_SUDESTE_2017"], ["raw", "DIM_DOCENTES_SUDESTE_2018"], ["raw", "DIM_DOCENTES_SUL_2014"], ["raw", "DIM_DOCENTES_SUL_2015"], ["raw", "DIM_DOCENTES_SUL_2016"], ["raw", "DIM_DOCENTES_SUL_2017"], ["raw", "DIM_DOCENTES_SUL_2018"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_DOCENTES_CO_2014", "source.exp.raw.DIM_DOCENTES_CO_2015", "source.exp.raw.DIM_DOCENTES_CO_2016", "source.exp.raw.DIM_DOCENTES_CO_2017", "source.exp.raw.DIM_DOCENTES_CO_2018", "source.exp.raw.DIM_DOCENTES_NORTE_2014", "source.exp.raw.DIM_DOCENTES_NORTE_2015", "source.exp.raw.DIM_DOCENTES_NORTE_2016", "source.exp.raw.DIM_DOCENTES_NORTE_2017", "source.exp.raw.DIM_DOCENTES_NORTE_2018", "source.exp.raw.DIM_DOCENTES_NORDESTE_2014", "source.exp.raw.DIM_DOCENTES_NORDESTE_2015", "source.exp.raw.DIM_DOCENTES_NORDESTE_2016", "source.exp.raw.DIM_DOCENTES_NORDESTE_2017", "source.exp.raw.DIM_DOCENTES_NORDESTE_2018", "source.exp.raw.DIM_DOCENTES_SUDESTE_2014", "source.exp.raw.DIM_DOCENTES_SUDESTE_2015", "source.exp.raw.DIM_DOCENTES_SUDESTE_2016", "source.exp.raw.DIM_DOCENTES_SUDESTE_2017", "source.exp.raw.DIM_DOCENTES_SUDESTE_2018", "source.exp.raw.DIM_DOCENTES_SUL_2014", "source.exp.raw.DIM_DOCENTES_SUL_2015", "source.exp.raw.DIM_DOCENTES_SUL_2016", "source.exp.raw.DIM_DOCENTES_SUL_2017", "source.exp.raw.DIM_DOCENTES_SUL_2018"]}, "compiled_path": "target\\compiled\\exp\\models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15_2014_to_2018_reshape_disc.sql", "compiled": true, "compiled_code": "-- 24 minutos\nWITH DOCENTES_RAW as (\n        SELECT\n            *,\n            -- Cancel courses that \"in progress\"\n            CASE WHEN \"TP_SITUACAO_CURSO_1\"=1 THEN \"CO_CURSO_1\" ELSE '' END AS \"COD_CURSO_1\",\n            CASE WHEN \"TP_SITUACAO_CURSO_2\"=1 THEN \"CO_CURSO_2\" ELSE '' END AS \"COD_CURSO_2\",\n            CASE WHEN \"TP_SITUACAO_CURSO_3\"=1 THEN \"CO_CURSO_3\" ELSE '' END AS \"COD_CURSO_3\"\n        FROM (\n            \n            \n            \n                \n                SELECT\n                    2014 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2014\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2015 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2015\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2016 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2016\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2017 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2017\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2018 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2018\"\n                \n                \n            \n                UNION ALL\n            \n            \n                \n                SELECT\n                    2014 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2014\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2015 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2015\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2016 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2016\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2017 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2017\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2018 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2018\"\n                \n                \n            \n                UNION ALL\n            \n            \n                \n                SELECT\n                    2014 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2014\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2015 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2015\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2016 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2016\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2017 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2017\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2018 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2018\"\n                \n                \n            \n                UNION ALL\n            \n            \n                \n                SELECT\n                    2014 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2014\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2015 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2015\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2016 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2016\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2017 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2017\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2018 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2018\"\n                \n                \n            \n                UNION ALL\n            \n            \n                \n                SELECT\n                    2014 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2014\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2015 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2015\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2016 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2016\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2017 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2017\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2018 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2018\"\n                \n                \n            \n            \n            ) as temp\n        WHERE \"TP_ETAPA_ENSINO\" in (4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 9, 10, 11, 12, 13, 19, 20, 21, 41, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 37, 38) and \"TP_TIPO_DOCENTE\" in (1, 5, 6)\n            ),\n    RESHAPE_DISCIPLINAS as (\n            \n            \n            SELECT 'IN_DISC_LINGUA_PORTUGUESA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_LINGUA_PORTUGUESA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_LINGUA_INGLES' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_LINGUA_INGLES\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_LINGUA_ESPANHOL' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_LINGUA_ESPANHOL\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_LINGUA_FRANCES' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_LINGUA_FRANCES\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_LINGUA_OUTRA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_LINGUA_OUTRA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_ARTES' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_ARTES\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_EDUCACAO_FISICA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_EDUCACAO_FISICA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_MATEMATICA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_MATEMATICA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_CIENCIAS' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_CIENCIAS\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_QUIMICA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_QUIMICA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_FISICA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_FISICA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_BIOLOGIA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_BIOLOGIA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_ESTUDOS_SOCIAIS' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_ESTUDOS_SOCIAIS\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_HISTORIA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_HISTORIA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_GEOGRAFIA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_GEOGRAFIA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_SOCIOLOGIA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_SOCIOLOGIA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_FILOSOFIA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_FILOSOFIA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_ENSINO_RELIGIOSO' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_COM_PEDAGOGICA_1\", \"IN_COM_PEDAGOGICA_2\", \"IN_COM_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_ENSINO_RELIGIOSO\"=1\n            \n            \n            )\nSELECT\n    *\nFROM RESHAPE_DISCIPLINAS", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_15_2019_2020_reshape_disc": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_15_2019_2020_reshape_disc", "resource_type": "model", "package_name": "exp", "path": "educ_bas_docentes_15\\dim_educ_bas_docentes_15_2019_2020_reshape_disc.sql", "original_file_path": "models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15_2019_2020_reshape_disc.sql", "unique_id": "model.exp.dim_educ_bas_docentes_15_2019_2020_reshape_disc", "fqn": ["exp", "educ_bas_docentes_15", "dim_educ_bas_docentes_15_2019_2020_reshape_disc"], "alias": "dim_educ_bas_docentes_15_2019_2020_reshape_disc", "checksum": {"name": "sha256", "checksum": "844d1a923eeccf8724f780b59f96a2526cd6d73662e4493468a2f962ac3d7f62"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.2808003, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15_2019_2020_reshape_disc\"", "raw_code": "-- 9 min\r\nWITH DOCENTES_RAW as (\r\n        SELECT\r\n            *,\r\n            -- Cancel courses that \"in progress\"\r\n            CASE WHEN \"TP_SITUACAO_CURSO_1\"=1 THEN \"CO_CURSO_1\" ELSE '' END AS \"COD_CURSO_1\",\r\n            CASE WHEN \"TP_SITUACAO_CURSO_2\"=1 THEN \"CO_CURSO_2\" ELSE '' END AS \"COD_CURSO_2\",\r\n            CASE WHEN \"TP_SITUACAO_CURSO_3\"=1 THEN \"CO_CURSO_3\" ELSE '' END AS \"COD_CURSO_3\"\r\n        FROM (\r\n            {% set years = [2019, 2020] %}\r\n            {% set regions = [\"CO\", \"NORTE\", \"NORDESTE\", \"SUDESTE\", \"SUL\"] %}\r\n            {% for region in regions %}\r\n                {% for year in years %}\r\n                SELECT\r\n                    {{year}} as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\r\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\r\n                FROM\r\n                    {{source(\"raw\", \"DIM_DOCENTES_\" ~ region ~ \"_\" ~ year) }}\r\n                {% if not loop.last %}\r\n                UNION ALL\r\n                {% endif %}\r\n                {% endfor %}\r\n            {% if not loop.last %}\r\n                UNION ALL\r\n            {% endif %}\r\n            {% endfor %}\r\n            ) as temp\r\n        WHERE \"TP_ETAPA_ENSINO\" in (4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 9, 10, 11, 12, 13, 19, 20, 21, 41, 22, 23, 24,25, 26, 27, 28, 29, 35, 36, 37, 38) and \"TP_TIPO_DOCENTE\" in (1, 5, 6)\r\n            ),\r\n    RESHAPE_DISCIPLINAS as (\r\n            {% set list_disc = [\"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\"] %}\r\n            {% for disc in list_disc %}\r\n            SELECT '{{disc}}' as \"DISCIPLINA_NOME\",\r\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\r\n            FROM DOCENTES_RAW\r\n            WHERE \"{{disc}}\"=1\r\n            {% if not loop.last %}\r\n            UNION ALL\r\n            {% endif %}\r\n            {% endfor %}\r\n            )\r\nSELECT\r\n    *\r\nFROM RESHAPE_DISCIPLINAS", "language": "sql", "refs": [], "sources": [["raw", "DIM_DOCENTES_CO_2019"], ["raw", "DIM_DOCENTES_CO_2020"], ["raw", "DIM_DOCENTES_NORTE_2019"], ["raw", "DIM_DOCENTES_NORTE_2020"], ["raw", "DIM_DOCENTES_NORDESTE_2019"], ["raw", "DIM_DOCENTES_NORDESTE_2020"], ["raw", "DIM_DOCENTES_SUDESTE_2019"], ["raw", "DIM_DOCENTES_SUDESTE_2020"], ["raw", "DIM_DOCENTES_SUL_2019"], ["raw", "DIM_DOCENTES_SUL_2020"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_DOCENTES_CO_2019", "source.exp.raw.DIM_DOCENTES_CO_2020", "source.exp.raw.DIM_DOCENTES_NORTE_2019", "source.exp.raw.DIM_DOCENTES_NORTE_2020", "source.exp.raw.DIM_DOCENTES_NORDESTE_2019", "source.exp.raw.DIM_DOCENTES_NORDESTE_2020", "source.exp.raw.DIM_DOCENTES_SUDESTE_2019", "source.exp.raw.DIM_DOCENTES_SUDESTE_2020", "source.exp.raw.DIM_DOCENTES_SUL_2019", "source.exp.raw.DIM_DOCENTES_SUL_2020"]}, "compiled_path": "target\\compiled\\exp\\models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15_2019_2020_reshape_disc.sql", "compiled": true, "compiled_code": "-- 9 min\nWITH DOCENTES_RAW as (\n        SELECT\n            *,\n            -- Cancel courses that \"in progress\"\n            CASE WHEN \"TP_SITUACAO_CURSO_1\"=1 THEN \"CO_CURSO_1\" ELSE '' END AS \"COD_CURSO_1\",\n            CASE WHEN \"TP_SITUACAO_CURSO_2\"=1 THEN \"CO_CURSO_2\" ELSE '' END AS \"COD_CURSO_2\",\n            CASE WHEN \"TP_SITUACAO_CURSO_3\"=1 THEN \"CO_CURSO_3\" ELSE '' END AS \"COD_CURSO_3\"\n        FROM (\n            \n            \n            \n                \n                SELECT\n                    2019 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2019\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2020 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_CO_2020\"\n                \n                \n            \n                UNION ALL\n            \n            \n                \n                SELECT\n                    2019 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2019\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2020 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2020\"\n                \n                \n            \n                UNION ALL\n            \n            \n                \n                SELECT\n                    2019 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2019\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2020 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2020\"\n                \n                \n            \n                UNION ALL\n            \n            \n                \n                SELECT\n                    2019 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2019\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2020 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2020\"\n                \n                \n            \n                UNION ALL\n            \n            \n                \n                SELECT\n                    2019 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2019\"\n                \n                UNION ALL\n                \n                \n                SELECT\n                    2020 as \"ANO\", \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\",\n                    \"TP_ETAPA_ENSINO\", \"TP_DEPENDENCIA\",\"TP_TIPO_DOCENTE\", \"CO_CURSO_1\", \"CO_CURSO_2\", \"CO_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"IN_DISC_LINGUA_PORTUGUESA\", \"IN_DISC_LINGUA_INGLES\", \"IN_DISC_LINGUA_ESPANHOL\", \"IN_DISC_LINGUA_FRANCES\", \"IN_DISC_LINGUA_OUTRA\", \"IN_DISC_ARTES\", \"IN_DISC_EDUCACAO_FISICA\", \"IN_DISC_MATEMATICA\", \"IN_DISC_CIENCIAS\", \"IN_DISC_QUIMICA\", \"IN_DISC_FISICA\", \"IN_DISC_BIOLOGIA\", \"IN_DISC_ESTUDOS_SOCIAIS\", \"IN_DISC_HISTORIA\", \"IN_DISC_GEOGRAFIA\", \"IN_DISC_SOCIOLOGIA\", \"IN_DISC_FILOSOFIA\", \"IN_DISC_ENSINO_RELIGIOSO\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n                FROM\n                    \"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2020\"\n                \n                \n            \n            \n            ) as temp\n        WHERE \"TP_ETAPA_ENSINO\" in (4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 9, 10, 11, 12, 13, 19, 20, 21, 41, 22, 23, 24,25, 26, 27, 28, 29, 35, 36, 37, 38) and \"TP_TIPO_DOCENTE\" in (1, 5, 6)\n            ),\n    RESHAPE_DISCIPLINAS as (\n            \n            \n            SELECT 'IN_DISC_LINGUA_PORTUGUESA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_LINGUA_PORTUGUESA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_LINGUA_INGLES' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_LINGUA_INGLES\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_LINGUA_ESPANHOL' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_LINGUA_ESPANHOL\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_LINGUA_FRANCES' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_LINGUA_FRANCES\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_LINGUA_OUTRA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_LINGUA_OUTRA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_ARTES' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_ARTES\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_EDUCACAO_FISICA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_EDUCACAO_FISICA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_MATEMATICA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_MATEMATICA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_CIENCIAS' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_CIENCIAS\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_QUIMICA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_QUIMICA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_FISICA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_FISICA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_BIOLOGIA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_BIOLOGIA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_ESTUDOS_SOCIAIS' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_ESTUDOS_SOCIAIS\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_HISTORIA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_HISTORIA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_GEOGRAFIA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_GEOGRAFIA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_SOCIOLOGIA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_SOCIOLOGIA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_FILOSOFIA' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_FILOSOFIA\"=1\n            \n            UNION ALL\n            \n            \n            SELECT 'IN_DISC_ENSINO_RELIGIOSO' as \"DISCIPLINA_NOME\",\n                \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"TP_DEPENDENCIA\", \"TP_ETAPA_ENSINO\", \"TP_TIPO_DOCENTE\", \"COD_CURSO_1\", \"COD_CURSO_2\", \"COD_CURSO_3\", \"TP_SITUACAO_CURSO_1\", \"TP_SITUACAO_CURSO_2\", \"TP_SITUACAO_CURSO_3\", \"CO_AREA_COMPL_PEDAGOGICA_1\", \"CO_AREA_COMPL_PEDAGOGICA_2\", \"CO_AREA_COMPL_PEDAGOGICA_3\"\n            FROM DOCENTES_RAW\n            WHERE \"IN_DISC_ENSINO_RELIGIOSO\"=1\n            \n            \n            )\nSELECT\n    *\nFROM RESHAPE_DISCIPLINAS", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_educ_bas_docentes_15_group": {"database": "postgres", "schema": "dbt_staging", "name": "dim_educ_bas_docentes_15_group", "resource_type": "model", "package_name": "exp", "path": "educ_bas_docentes_15\\dim_educ_bas_docentes_15_group.sql", "original_file_path": "models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15_group.sql", "unique_id": "model.exp.dim_educ_bas_docentes_15_group", "fqn": ["exp", "educ_bas_docentes_15", "dim_educ_bas_docentes_15_group"], "alias": "dim_educ_bas_docentes_15_group", "checksum": {"name": "sha256", "checksum": "bc4020acf5d6d3d6e2cdb7ea6cb64b1dec61d25566555e6719fb570f1d85c9e0"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.29377, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15_group\"", "raw_code": "SELECT\r\n    \"ANO\",\r\n    \"ETAPA\",\r\n    \"FK_MUNICIPIO_CODIGO\",\r\n    SUM(\"FORMACAO_ADEQUADA\") as \"FORMACAO_ADEQUADA\",\r\n    SUM(\"DOCENCIA_TOTAL\") as \"DOCENCIA_TOTAL\"\r\nFROM\r\n    {{ref( \"dim_educ_bas_docentes_15\" )}}\r\nGROUP BY\r\n    \"ANO\",\r\n    \"ETAPA\",\r\n    \"FK_MUNICIPIO_CODIGO\"", "language": "sql", "refs": [{"name": "dim_educ_bas_docentes_15", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.exp.dim_educ_bas_docentes_15"]}, "compiled_path": "target\\compiled\\exp\\models\\educ_bas_docentes_15\\dim_educ_bas_docentes_15_group.sql", "compiled": true, "compiled_code": "SELECT\n    \"ANO\",\n    \"ETAPA\",\n    \"FK_MUNICIPIO_CODIGO\",\n    SUM(\"FORMACAO_ADEQUADA\") as \"FORMACAO_ADEQUADA\",\n    SUM(\"DOCENCIA_TOTAL\") as \"DOCENCIA_TOTAL\"\nFROM\n    \"postgres\".\"dbt_staging\".\"dim_educ_bas_docentes_15\"\nGROUP BY\n    \"ANO\",\n    \"ETAPA\",\n    \"FK_MUNICIPIO_CODIGO\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_projecao_populacional": {"database": "postgres", "schema": "dbt_staging", "name": "fct_projecao_populacional", "resource_type": "model", "package_name": "exp", "path": "fct_projecao_populacional\\fct_projecao_populacional.sql", "original_file_path": "models\\fct_projecao_populacional\\fct_projecao_populacional.sql", "unique_id": "model.exp.fct_projecao_populacional", "fqn": ["exp", "fct_projecao_populacional", "fct_projecao_populacional"], "alias": "fct_projecao_populacional", "checksum": {"name": "sha256", "checksum": "35f3a8e5d1705a6f46234f8b1d416fec88c96a1a2779171a439c803b39fb38e3"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Informa\u00e7\u00f5es sobre estimativa populacional por faixa et\u00e1ria.", "columns": {"ANO": {"name": "ANO", "description": "Sigla do estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "FK_ESTADO_CODIGO": {"name": "FK_ESTADO_CODIGO", "description": "C\u00f3digo do estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do munic\u00edpio", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "FK_FAIXAS_ETARIAS_ID": {"name": "FK_FAIXAS_ETARIAS_ID", "description": "C\u00f3digo da Faixa Et\u00e1ria. Faixa 1, at\u00e9 3 anos. 2, at\u00e9 5 anos. 3, at\u00e9 10 anos. 4, at\u00e9 14 anos. 5, at\u00e9 17 anos. 6, at\u00e9 24 anos. 7, at\u00e9 29 anos. 8, at\u00e9 40 anos. 9, at\u00e9 50 anos. 10, at\u00e9 64 anos. 11, at\u00e9 99 anos.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "QUANTIDADE_ESTIMADA": {"name": "QUANTIDADE_ESTIMADA", "description": "Somat\u00f3rio populacional estimado para a faixa et\u00e1ria", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\fct_projecao_populacional\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.6609423, "relation_name": "\"postgres\".\"dbt_staging\".\"fct_projecao_populacional\"", "raw_code": "WITH TB AS (\r\nSELECT\r\n  *\r\nFROM {{ source(\"raw\", \"DIM_ESTIMATIVA_DA_POPULACAO_POR_ANO_MUNICIPIO_IDADE\") }} as \"pop\"\r\n),\r\n\r\nTB_ADD_FAIXA_IDADE AS (\r\nSELECT\r\n    TB.\"ANO\" as \"ANO\",\r\n    TB.\"ESTADO_CODIGO\" as \"FK_ESTADO_CODIGO\",\r\n    TB.\"MUNICIPIO_CODIGO\" as \"FK_MUNICIPIO_CODIGO\",\r\n    TB.\"QUANTIDADE_ESTIMADA\" as \"QUANTIDADE_ESTIMADA\",\r\n    CASE\r\n        WHEN TB.\"IDADE\" BETWEEN 0 AND 3 THEN '1'\r\n        WHEN TB.\"IDADE\" BETWEEN 4 AND 5 THEN '2'\r\n        WHEN TB.\"IDADE\" BETWEEN 6 AND 10 THEN '3'\r\n        WHEN TB.\"IDADE\" BETWEEN 11 AND 14 THEN '4'\r\n        WHEN TB.\"IDADE\" BETWEEN 15 AND 17 THEN '5'\r\n        WHEN TB.\"IDADE\" BETWEEN 18 AND 24 THEN '6'\r\n        WHEN TB.\"IDADE\" BETWEEN 25 AND 29 THEN '7'\r\n        WHEN TB.\"IDADE\" BETWEEN 30 AND 40 THEN '8'\r\n        WHEN TB.\"IDADE\" BETWEEN 41 AND 50 THEN '9'\r\n        WHEN TB.\"IDADE\" BETWEEN 51 AND 64 THEN '10'\r\n        ELSE '11'\r\n    END AS \"FK_FAIXAS_ETARIAS_ID\"\r\nFROM\r\n    TB),\r\n\r\nESTIMATIVA_POP AS (\r\nSELECT\r\n    CAST(\"ANO\" AS INT),\r\n    CAST(\"FK_ESTADO_CODIGO\" AS INT),\r\n    CAST(\"FK_MUNICIPIO_CODIGO\" AS INT),\r\n    CAST(\"FK_FAIXAS_ETARIAS_ID\" AS INT),\r\n    CAST(ROUND(SUM(\"QUANTIDADE_ESTIMADA\")) AS INT) AS \"QUANTIDADE_ESTIMADA\"\r\nFROM\r\n    TB_ADD_FAIXA_IDADE\r\nGROUP BY\r\n    \"FK_FAIXAS_ETARIAS_ID\",\r\n    \"ANO\",\r\n    \"FK_ESTADO_CODIGO\",\r\n    \"FK_MUNICIPIO_CODIGO\"\r\n)\r\nSELECT * FROM ESTIMATIVA_POP", "language": "sql", "refs": [], "sources": [["raw", "DIM_ESTIMATIVA_DA_POPULACAO_POR_ANO_MUNICIPIO_IDADE"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_ESTIMATIVA_DA_POPULACAO_POR_ANO_MUNICIPIO_IDADE"]}, "compiled_path": "target\\compiled\\exp\\models\\fct_projecao_populacional\\fct_projecao_populacional.sql", "compiled": true, "compiled_code": "WITH TB AS (\nSELECT\n  *\nFROM \"postgres\".\"raw\".\"DIM_ESTIMATIVA_DA_POPULACAO_POR_ANO_MUNICIPIO_IDADE\" as \"pop\"\n),\n\nTB_ADD_FAIXA_IDADE AS (\nSELECT\n    TB.\"ANO\" as \"ANO\",\n    TB.\"ESTADO_CODIGO\" as \"FK_ESTADO_CODIGO\",\n    TB.\"MUNICIPIO_CODIGO\" as \"FK_MUNICIPIO_CODIGO\",\n    TB.\"QUANTIDADE_ESTIMADA\" as \"QUANTIDADE_ESTIMADA\",\n    CASE\n        WHEN TB.\"IDADE\" BETWEEN 0 AND 3 THEN '1'\n        WHEN TB.\"IDADE\" BETWEEN 4 AND 5 THEN '2'\n        WHEN TB.\"IDADE\" BETWEEN 6 AND 10 THEN '3'\n        WHEN TB.\"IDADE\" BETWEEN 11 AND 14 THEN '4'\n        WHEN TB.\"IDADE\" BETWEEN 15 AND 17 THEN '5'\n        WHEN TB.\"IDADE\" BETWEEN 18 AND 24 THEN '6'\n        WHEN TB.\"IDADE\" BETWEEN 25 AND 29 THEN '7'\n        WHEN TB.\"IDADE\" BETWEEN 30 AND 40 THEN '8'\n        WHEN TB.\"IDADE\" BETWEEN 41 AND 50 THEN '9'\n        WHEN TB.\"IDADE\" BETWEEN 51 AND 64 THEN '10'\n        ELSE '11'\n    END AS \"FK_FAIXAS_ETARIAS_ID\"\nFROM\n    TB),\n\nESTIMATIVA_POP AS (\nSELECT\n    CAST(\"ANO\" AS INT),\n    CAST(\"FK_ESTADO_CODIGO\" AS INT),\n    CAST(\"FK_MUNICIPIO_CODIGO\" AS INT),\n    CAST(\"FK_FAIXAS_ETARIAS_ID\" AS INT),\n    CAST(ROUND(SUM(\"QUANTIDADE_ESTIMADA\")) AS INT) AS \"QUANTIDADE_ESTIMADA\"\nFROM\n    TB_ADD_FAIXA_IDADE\nGROUP BY\n    \"FK_FAIXAS_ETARIAS_ID\",\n    \"ANO\",\n    \"FK_ESTADO_CODIGO\",\n    \"FK_MUNICIPIO_CODIGO\"\n)\nSELECT * FROM ESTIMATIVA_POP", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.info_estados": {"database": "postgres", "schema": "dbt_staging", "name": "info_estados", "resource_type": "model", "package_name": "exp", "path": "info_estados\\info_estados.sql", "original_file_path": "models\\info_estados\\info_estados.sql", "unique_id": "model.exp.info_estados", "fqn": ["exp", "info_estados", "info_estados"], "alias": "info_estados", "checksum": {"name": "sha256", "checksum": "20ebc9bf043de40f58d55610c8df2f751663f1d74f8bad366422e167907e7d96"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Informa\u00e7\u00f5es sobre os estados brasileiros", "columns": {"ESTADO_CODIGO": {"name": "ESTADO_CODIGO", "description": "C\u00f3digo do estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ESTADO_NOME": {"name": "ESTADO_NOME", "description": "Nome do estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ESTADO_SIGLA": {"name": "ESTADO_SIGLA", "description": "Sigla do estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AREA_GEOGRAFICA": {"name": "AREA_GEOGRAFICA", "description": "\u00c1rea geogr\u00e1fica do estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "CAPITAL": {"name": "CAPITAL", "description": "Capital do estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "RDPC": {"name": "RDPC", "description": "Renda per capita", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "IDHM": {"name": "IDHM", "description": "\u00cdndice de desenvolvimento humano", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "IDHM_R": {"name": "IDHM_R", "description": "\u00cdndice de desenvolvimento humano - renda", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "IDHM_E": {"name": "IDHM_E", "description": "\u00cdndice de desenvolvimento humano - educa\u00e7\u00e3o", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "IDHM_L": {"name": "IDHM_L", "description": "\u00cdndice de desenvolvimento humano - longevidade", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\info_estados\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.6659439, "relation_name": "\"postgres\".\"dbt_staging\".\"info_estados\"", "raw_code": "WITH estados_info AS (\r\n    SELECT\r\n        CAST(estados.\"UF_CODIGO\" AS INT) as \"ESTADO_CODIGO\",\r\n\t\testados.\"UF_NOME\" as \"ESTADO_NOME\",\r\n\t\testados.\"UF_SIGLA\" as \"ESTADO_SIGLA\",\r\n        estados_area.\"AR_UF_2021\" as \"AREA_GEOGRAFICA\",\r\n\t\testados_capitais.\"CAPITAL\",\r\n\t\testados_censo_atlas.\"RDPC\",\r\n\t\testados_censo_atlas.\"IDHM\",\r\n\t\testados_censo_atlas.\"IDHM_R\",\r\n\t\testados_censo_atlas.\"IDHM_E\",\r\n\t\testados_censo_atlas.\"IDHM_L\"\r\n    FROM\r\n        {{ source(\"raw\", \"DIM_ESTADOS\") }} AS estados\r\n\r\n\tJOIN\r\n        {{ source(\"raw\", \"DIM_ESTADOS_AREA\") }} AS estados_area\r\n    ON\r\n        estados.\"UF_CODIGO\" = estados_area.\"CD_UF\"\r\n\r\n    JOIN\r\n        {{ source(\"raw\", \"DIM_ESTADOS_CAPITAIS\") }} AS estados_capitais\r\n    ON\r\n        estados.\"UF_SIGLA\" = estados_capitais.\"SIGLA\"\r\n\r\n\tJOIN\r\n    (\r\n        SELECT *\r\n        FROM {{ source(\"raw\", \"DIM_ESTADOS_CENSO_ATLAS_2013\") }}\r\n        WHERE \"ANO\" = 2010\r\n    ) AS estados_censo_atlas\r\n\tON\r\n\t\testados.\"UF_CODIGO\" = estados_censo_atlas.\"UF\"\r\n)\r\n\r\nSELECT\r\n    *\r\nFROM\r\n    estados_info", "language": "sql", "refs": [], "sources": [["raw", "DIM_ESTADOS_CENSO_ATLAS_2013"], ["raw", "DIM_ESTADOS"], ["raw", "DIM_ESTADOS_AREA"], ["raw", "DIM_ESTADOS_CAPITAIS"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_ESTADOS_CENSO_ATLAS_2013", "source.exp.raw.DIM_ESTADOS", "source.exp.raw.DIM_ESTADOS_AREA", "source.exp.raw.DIM_ESTADOS_CAPITAIS"]}, "compiled_path": "target\\compiled\\exp\\models\\info_estados\\info_estados.sql", "compiled": true, "compiled_code": "WITH estados_info AS (\n    SELECT\n        CAST(estados.\"UF_CODIGO\" AS INT) as \"ESTADO_CODIGO\",\n\t\testados.\"UF_NOME\" as \"ESTADO_NOME\",\n\t\testados.\"UF_SIGLA\" as \"ESTADO_SIGLA\",\n        estados_area.\"AR_UF_2021\" as \"AREA_GEOGRAFICA\",\n\t\testados_capitais.\"CAPITAL\",\n\t\testados_censo_atlas.\"RDPC\",\n\t\testados_censo_atlas.\"IDHM\",\n\t\testados_censo_atlas.\"IDHM_R\",\n\t\testados_censo_atlas.\"IDHM_E\",\n\t\testados_censo_atlas.\"IDHM_L\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_ESTADOS\" AS estados\n\n\tJOIN\n        \"postgres\".\"raw\".\"DIM_ESTADOS_AREA\" AS estados_area\n    ON\n        estados.\"UF_CODIGO\" = estados_area.\"CD_UF\"\n\n    JOIN\n        \"postgres\".\"raw\".\"DIM_ESTADOS_CAPITAIS\" AS estados_capitais\n    ON\n        estados.\"UF_SIGLA\" = estados_capitais.\"SIGLA\"\n\n\tJOIN\n    (\n        SELECT *\n        FROM \"postgres\".\"raw\".\"DIM_ESTADOS_CENSO_ATLAS_2013\"\n        WHERE \"ANO\" = 2010\n    ) AS estados_censo_atlas\n\tON\n\t\testados.\"UF_CODIGO\" = estados_censo_atlas.\"UF\"\n)\n\nSELECT\n    *\nFROM\n    estados_info", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.info_municipios": {"database": "postgres", "schema": "dbt_staging", "name": "info_municipios", "resource_type": "model", "package_name": "exp", "path": "info_municipios\\info_municipios.sql", "original_file_path": "models\\info_municipios\\info_municipios.sql", "unique_id": "model.exp.info_municipios", "fqn": ["exp", "info_municipios", "info_municipios"], "alias": "info_municipios", "checksum": {"name": "sha256", "checksum": "f790f953474903643442182900e5f7301be41bfc7d8941d2465e889f9ed1c7ec"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Informa\u00e7\u00f5es sobre os munic\u00edpios brasileiros. Removido 2 c\u00f3digos de regi\u00f5es que n\u00e3o s\u00e3o munic\u00edpios. 4300001 Lagoa Mirim, 4300002 Lagoa dos Patos", "columns": {"MUNICIPIO_CODIGO": {"name": "MUNICIPIO_CODIGO", "description": "C\u00f3digo do munic\u00edpio", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "MUNICIPIO_NOME": {"name": "MUNICIPIO_NOME", "description": "Nome do munic\u00edpio", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "AREA_GEOGRAFICA": {"name": "AREA_GEOGRAFICA", "description": "\u00c1rea geogr\u00e1fica do munic\u00edpio em 2022", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ESTADO_CODIGO": {"name": "ESTADO_CODIGO", "description": "C\u00f3digo do estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ESTADO_NOME": {"name": "ESTADO_NOME", "description": "Nome do estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ESTADO_SIGLA": {"name": "ESTADO_SIGLA", "description": "Sigla do estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "REGIAO_CODIGO": {"name": "REGIAO_CODIGO", "description": "C\u00f3digo da regi\u00e3o", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "REGIAO_NOME": {"name": "REGIAO_NOME", "description": "Nome da regi\u00e3o", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\info_municipios\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.6719449, "relation_name": "\"postgres\".\"dbt_staging\".\"info_municipios\"", "raw_code": "WITH municipios_info AS (\r\n    SELECT\r\n        municipios.\"CD_MUN\" as \"MUNICIPIO_CODIGO\",\r\n        municipios.\"NM_MUN\" as  \"MUNICIPIO_NOME\",\r\n        municipios.\"AREA_KM2\" as \"AREA_GEOGRAFICA\",\r\n        estados.\"UF_CODIGO\" as \"ESTADO_CODIGO\",\r\n        estados.\"UF_NOME\" as \"ESTADO_NOME\",\r\n        municipios.\"SIGLA_UF\" as \"ESTADO_SIGLA\",\r\n        estados.\"REGIAO_CODIGO\",\r\n        estados.\"REGIAO_NOME\"\r\n    FROM\r\n        {{ source(\"raw\", \"DIM_MUNICIPIOS_MALHA_2022\") }} as municipios\r\n\r\n    LEFT JOIN\r\n        {{ source(\"raw\", \"DIM_ESTADOS\") }} AS estados\r\n    ON\r\n        estados.\"UF_SIGLA\" = municipios.\"SIGLA_UF\"\r\n)\r\nSELECT\r\n    *\r\nFROM\r\n    municipios_info\r\nWHERE\r\n    \"MUNICIPIO_CODIGO\" NOT IN (4300001, 4300002)", "language": "sql", "refs": [], "sources": [["raw", "DIM_ESTADOS"], ["raw", "DIM_MUNICIPIOS_MALHA_2022"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_ESTADOS", "source.exp.raw.DIM_MUNICIPIOS_MALHA_2022"]}, "compiled_path": "target\\compiled\\exp\\models\\info_municipios\\info_municipios.sql", "compiled": true, "compiled_code": "WITH municipios_info AS (\n    SELECT\n        municipios.\"CD_MUN\" as \"MUNICIPIO_CODIGO\",\n        municipios.\"NM_MUN\" as  \"MUNICIPIO_NOME\",\n        municipios.\"AREA_KM2\" as \"AREA_GEOGRAFICA\",\n        estados.\"UF_CODIGO\" as \"ESTADO_CODIGO\",\n        estados.\"UF_NOME\" as \"ESTADO_NOME\",\n        municipios.\"SIGLA_UF\" as \"ESTADO_SIGLA\",\n        estados.\"REGIAO_CODIGO\",\n        estados.\"REGIAO_NOME\"\n    FROM\n        \"postgres\".\"raw\".\"DIM_MUNICIPIOS_MALHA_2022\" as municipios\n\n    LEFT JOIN\n        \"postgres\".\"raw\".\"DIM_ESTADOS\" AS estados\n    ON\n        estados.\"UF_SIGLA\" = municipios.\"SIGLA_UF\"\n)\nSELECT\n    *\nFROM\n    municipios_info\nWHERE\n    \"MUNICIPIO_CODIGO\" NOT IN (4300001, 4300002)", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_matricula_ept": {"database": "postgres", "schema": "dbt_staging", "name": "dim_matricula_ept", "resource_type": "model", "package_name": "exp", "path": "matricula_ept\\dim_matricula_ept.sql", "original_file_path": "models\\matricula_ept\\dim_matricula_ept.sql", "unique_id": "model.exp.dim_matricula_ept", "fqn": ["exp", "matricula_ept", "dim_matricula_ept"], "alias": "dim_matricula_ept", "checksum": {"name": "sha256", "checksum": "5f2430ee837636ac9fdc955f167491fffe48fe400d2fdaa0f8c03587e323a600"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.3077667, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_matricula_ept\"", "raw_code": "{% for year in range(2014, 2021) %}\r\n\r\nselect *\r\nfrom {{ ref(\"matricula_ept_\" + year|string) }}\r\n{% if not loop.last %}\r\nUNION ALL\r\n{% endif %}\r\n\r\n{% endfor %}", "language": "sql", "refs": [{"name": "matricula_ept_2014", "package": null, "version": null}, {"name": "matricula_ept_2015", "package": null, "version": null}, {"name": "matricula_ept_2016", "package": null, "version": null}, {"name": "matricula_ept_2017", "package": null, "version": null}, {"name": "matricula_ept_2018", "package": null, "version": null}, {"name": "matricula_ept_2019", "package": null, "version": null}, {"name": "matricula_ept_2020", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.exp.matricula_ept_2014", "model.exp.matricula_ept_2015", "model.exp.matricula_ept_2016", "model.exp.matricula_ept_2017", "model.exp.matricula_ept_2018", "model.exp.matricula_ept_2019", "model.exp.matricula_ept_2020"]}, "compiled_path": "target\\compiled\\exp\\models\\matricula_ept\\dim_matricula_ept.sql", "compiled": true, "compiled_code": "\n\nwith __dbt__cte__matricula_ept_2014 as (\nwith with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2014\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept\n),  __dbt__cte__matricula_ept_2015 as (\nwith with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2015\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept\n),  __dbt__cte__matricula_ept_2016 as (\nwith with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2016\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept\n),  __dbt__cte__matricula_ept_2017 as (\nwith with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2017\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept\n),  __dbt__cte__matricula_ept_2018 as (\nwith with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2018\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept\n),  __dbt__cte__matricula_ept_2019 as (\nwith with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2019\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept\n),  __dbt__cte__matricula_ept_2020 as (\nwith with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2020\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept\n)select *\nfrom __dbt__cte__matricula_ept_2014\n\nUNION ALL\n\n\n\n\nselect *\nfrom __dbt__cte__matricula_ept_2015\n\nUNION ALL\n\n\n\n\nselect *\nfrom __dbt__cte__matricula_ept_2016\n\nUNION ALL\n\n\n\n\nselect *\nfrom __dbt__cte__matricula_ept_2017\n\nUNION ALL\n\n\n\n\nselect *\nfrom __dbt__cte__matricula_ept_2018\n\nUNION ALL\n\n\n\n\nselect *\nfrom __dbt__cte__matricula_ept_2019\n\nUNION ALL\n\n\n\n\nselect *\nfrom __dbt__cte__matricula_ept_2020\n\n\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.exp.matricula_ept_2014", "sql": " __dbt__cte__matricula_ept_2014 as (\nwith with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2014\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept\n)"}, {"id": "model.exp.matricula_ept_2015", "sql": " __dbt__cte__matricula_ept_2015 as (\nwith with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2015\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept\n)"}, {"id": "model.exp.matricula_ept_2016", "sql": " __dbt__cte__matricula_ept_2016 as (\nwith with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2016\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept\n)"}, {"id": "model.exp.matricula_ept_2017", "sql": " __dbt__cte__matricula_ept_2017 as (\nwith with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2017\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept\n)"}, {"id": "model.exp.matricula_ept_2018", "sql": " __dbt__cte__matricula_ept_2018 as (\nwith with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2018\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept\n)"}, {"id": "model.exp.matricula_ept_2019", "sql": " __dbt__cte__matricula_ept_2019 as (\nwith with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2019\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept\n)"}, {"id": "model.exp.matricula_ept_2020", "sql": " __dbt__cte__matricula_ept_2020 as (\nwith with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2020\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept\n)"}], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.matricula_ept_2014": {"database": "postgres", "schema": "dbt_staging", "name": "matricula_ept_2014", "resource_type": "model", "package_name": "exp", "path": "matricula_ept\\ephemeral\\matricula_ept_2014.sql", "original_file_path": "models\\matricula_ept\\ephemeral\\matricula_ept_2014.sql", "unique_id": "model.exp.matricula_ept_2014", "fqn": ["exp", "matricula_ept", "ephemeral", "matricula_ept_2014"], "alias": "matricula_ept_2014", "checksum": {"name": "sha256", "checksum": "9c0a401990f4dd1114eee8260f33831be2161c7a192a6f21224789051ad89872"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "ephemeral"}, "created_at": 1723502084.314767, "relation_name": null, "raw_code": "with with_col_publico as (\r\n    select\r\n        \"NU_ANO_CENSO\" as \"ANO\"\r\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\r\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\r\n    from\r\n        {{source(\"raw\", \"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2014\") }}\r\n    where\r\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\r\n),\r\nept_privado as (\r\n    select\r\n        \"ANO\"\r\n        , \"FK_MUNICIPIO_CODIGO\"\r\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\r\n    from\r\n        with_col_publico\r\n    where\r\n        PUBLICO = 0\r\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n),\r\nept_publico as (\r\n    select\r\n        \"ANO\"\r\n        , \"FK_MUNICIPIO_CODIGO\"\r\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\r\n    from\r\n        with_col_publico\r\n    where\r\n        PUBLICO = 1\r\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n),\r\nmatricula_ept as (\r\n    select\r\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\r\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\r\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\r\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\r\n    from ept_publico\r\n    full join ept_privado\r\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\r\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\r\n\r\n)\r\nselect * from matricula_ept", "language": "sql", "refs": [], "sources": [["raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2014"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2014"]}, "compiled_path": "target\\compiled\\exp\\models\\matricula_ept\\ephemeral\\matricula_ept_2014.sql", "compiled": true, "compiled_code": "with with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2014\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.matricula_ept_2015": {"database": "postgres", "schema": "dbt_staging", "name": "matricula_ept_2015", "resource_type": "model", "package_name": "exp", "path": "matricula_ept\\ephemeral\\matricula_ept_2015.sql", "original_file_path": "models\\matricula_ept\\ephemeral\\matricula_ept_2015.sql", "unique_id": "model.exp.matricula_ept_2015", "fqn": ["exp", "matricula_ept", "ephemeral", "matricula_ept_2015"], "alias": "matricula_ept_2015", "checksum": {"name": "sha256", "checksum": "afeea878bb3dc93739914db6781485020fb245abb00771177c039e1e28898c2c"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "ephemeral"}, "created_at": 1723502084.318767, "relation_name": null, "raw_code": "with with_col_publico as (\r\n    select\r\n        \"NU_ANO_CENSO\" as \"ANO\"\r\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\r\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\r\n    from\r\n        {{source(\"raw\", \"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2015\") }}\r\n    where\r\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\r\n),\r\nept_privado as (\r\n    select\r\n        \"ANO\"\r\n        , \"FK_MUNICIPIO_CODIGO\"\r\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\r\n    from\r\n        with_col_publico\r\n    where\r\n        PUBLICO = 0\r\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n),\r\nept_publico as (\r\n    select\r\n        \"ANO\"\r\n        , \"FK_MUNICIPIO_CODIGO\"\r\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\r\n    from\r\n        with_col_publico\r\n    where\r\n        PUBLICO = 1\r\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n),\r\nmatricula_ept as (\r\n    select\r\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\r\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\r\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\r\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\r\n    from ept_publico\r\n    full join ept_privado\r\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\r\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\r\n\r\n)\r\nselect * from matricula_ept", "language": "sql", "refs": [], "sources": [["raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2015"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2015"]}, "compiled_path": "target\\compiled\\exp\\models\\matricula_ept\\ephemeral\\matricula_ept_2015.sql", "compiled": true, "compiled_code": "with with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2015\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.matricula_ept_2016": {"database": "postgres", "schema": "dbt_staging", "name": "matricula_ept_2016", "resource_type": "model", "package_name": "exp", "path": "matricula_ept\\ephemeral\\matricula_ept_2016.sql", "original_file_path": "models\\matricula_ept\\ephemeral\\matricula_ept_2016.sql", "unique_id": "model.exp.matricula_ept_2016", "fqn": ["exp", "matricula_ept", "ephemeral", "matricula_ept_2016"], "alias": "matricula_ept_2016", "checksum": {"name": "sha256", "checksum": "44801053d575377d2e87103caff516c016217372702feb31adcc16d1b6e2e7cf"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "ephemeral"}, "created_at": 1723502084.3227665, "relation_name": null, "raw_code": "with with_col_publico as (\r\n    select\r\n        \"NU_ANO_CENSO\" as \"ANO\"\r\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\r\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\r\n    from\r\n        {{source(\"raw\", \"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2016\") }}\r\n    where\r\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\r\n),\r\nept_privado as (\r\n    select\r\n        \"ANO\"\r\n        , \"FK_MUNICIPIO_CODIGO\"\r\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\r\n    from\r\n        with_col_publico\r\n    where\r\n        PUBLICO = 0\r\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n),\r\nept_publico as (\r\n    select\r\n        \"ANO\"\r\n        , \"FK_MUNICIPIO_CODIGO\"\r\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\r\n    from\r\n        with_col_publico\r\n    where\r\n        PUBLICO = 1\r\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n),\r\nmatricula_ept as (\r\n    select\r\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\r\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\r\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\r\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\r\n    from ept_publico\r\n    full join ept_privado\r\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\r\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\r\n\r\n)\r\nselect * from matricula_ept", "language": "sql", "refs": [], "sources": [["raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2016"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2016"]}, "compiled_path": "target\\compiled\\exp\\models\\matricula_ept\\ephemeral\\matricula_ept_2016.sql", "compiled": true, "compiled_code": "with with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2016\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.matricula_ept_2017": {"database": "postgres", "schema": "dbt_staging", "name": "matricula_ept_2017", "resource_type": "model", "package_name": "exp", "path": "matricula_ept\\ephemeral\\matricula_ept_2017.sql", "original_file_path": "models\\matricula_ept\\ephemeral\\matricula_ept_2017.sql", "unique_id": "model.exp.matricula_ept_2017", "fqn": ["exp", "matricula_ept", "ephemeral", "matricula_ept_2017"], "alias": "matricula_ept_2017", "checksum": {"name": "sha256", "checksum": "f380d4ca85c6ed45d93bd195235020dfb73cbe1a8eab0a081df662a069a73f9f"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "ephemeral"}, "created_at": 1723502084.3257668, "relation_name": null, "raw_code": "with with_col_publico as (\r\n    select\r\n        \"NU_ANO_CENSO\" as \"ANO\"\r\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\r\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\r\n    from\r\n        {{source(\"raw\", \"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2017\") }}\r\n    where\r\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\r\n),\r\nept_privado as (\r\n    select\r\n        \"ANO\"\r\n        , \"FK_MUNICIPIO_CODIGO\"\r\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\r\n    from\r\n        with_col_publico\r\n    where\r\n        PUBLICO = 0\r\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n),\r\nept_publico as (\r\n    select\r\n        \"ANO\"\r\n        , \"FK_MUNICIPIO_CODIGO\"\r\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\r\n    from\r\n        with_col_publico\r\n    where\r\n        PUBLICO = 1\r\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n),\r\nmatricula_ept as (\r\n    select\r\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\r\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\r\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\r\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\r\n    from ept_publico\r\n    full join ept_privado\r\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\r\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\r\n\r\n)\r\nselect * from matricula_ept", "language": "sql", "refs": [], "sources": [["raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2017"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2017"]}, "compiled_path": "target\\compiled\\exp\\models\\matricula_ept\\ephemeral\\matricula_ept_2017.sql", "compiled": true, "compiled_code": "with with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2017\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.matricula_ept_2018": {"database": "postgres", "schema": "dbt_staging", "name": "matricula_ept_2018", "resource_type": "model", "package_name": "exp", "path": "matricula_ept\\ephemeral\\matricula_ept_2018.sql", "original_file_path": "models\\matricula_ept\\ephemeral\\matricula_ept_2018.sql", "unique_id": "model.exp.matricula_ept_2018", "fqn": ["exp", "matricula_ept", "ephemeral", "matricula_ept_2018"], "alias": "matricula_ept_2018", "checksum": {"name": "sha256", "checksum": "6535a6a0e66830139d5770c3d220e60b5a1dd28baab32e7faa544ad3eec3f9e1"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "ephemeral"}, "created_at": 1723502084.3297675, "relation_name": null, "raw_code": "with with_col_publico as (\r\n    select\r\n        \"NU_ANO_CENSO\" as \"ANO\"\r\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\r\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\r\n    from\r\n        {{source(\"raw\", \"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2018\") }}\r\n    where\r\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\r\n),\r\nept_privado as (\r\n    select\r\n        \"ANO\"\r\n        , \"FK_MUNICIPIO_CODIGO\"\r\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\r\n    from\r\n        with_col_publico\r\n    where\r\n        PUBLICO = 0\r\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n),\r\nept_publico as (\r\n    select\r\n        \"ANO\"\r\n        , \"FK_MUNICIPIO_CODIGO\"\r\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\r\n    from\r\n        with_col_publico\r\n    where\r\n        PUBLICO = 1\r\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n),\r\nmatricula_ept as (\r\n    select\r\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\r\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\r\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\r\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\r\n    from ept_publico\r\n    full join ept_privado\r\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\r\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\r\n\r\n)\r\nselect * from matricula_ept", "language": "sql", "refs": [], "sources": [["raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2018"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2018"]}, "compiled_path": "target\\compiled\\exp\\models\\matricula_ept\\ephemeral\\matricula_ept_2018.sql", "compiled": true, "compiled_code": "with with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2018\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.matricula_ept_2019": {"database": "postgres", "schema": "dbt_staging", "name": "matricula_ept_2019", "resource_type": "model", "package_name": "exp", "path": "matricula_ept\\ephemeral\\matricula_ept_2019.sql", "original_file_path": "models\\matricula_ept\\ephemeral\\matricula_ept_2019.sql", "unique_id": "model.exp.matricula_ept_2019", "fqn": ["exp", "matricula_ept", "ephemeral", "matricula_ept_2019"], "alias": "matricula_ept_2019", "checksum": {"name": "sha256", "checksum": "e2ca155a4975d958d38cd642f54b365b8d1ac58000e0f46d5876c4a3eeda1a42"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "ephemeral"}, "created_at": 1723502084.3337681, "relation_name": null, "raw_code": "with with_col_publico as (\r\n    select\r\n        \"NU_ANO_CENSO\" as \"ANO\"\r\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\r\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\r\n    from\r\n        {{source(\"raw\", \"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2019\") }}\r\n    where\r\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\r\n),\r\nept_privado as (\r\n    select\r\n        \"ANO\"\r\n        , \"FK_MUNICIPIO_CODIGO\"\r\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\r\n    from\r\n        with_col_publico\r\n    where\r\n        PUBLICO = 0\r\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n),\r\nept_publico as (\r\n    select\r\n        \"ANO\"\r\n        , \"FK_MUNICIPIO_CODIGO\"\r\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\r\n    from\r\n        with_col_publico\r\n    where\r\n        PUBLICO = 1\r\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n),\r\nmatricula_ept as (\r\n    select\r\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\r\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\r\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\r\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\r\n    from ept_publico\r\n    full join ept_privado\r\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\r\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\r\n\r\n)\r\nselect * from matricula_ept", "language": "sql", "refs": [], "sources": [["raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2019"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2019"]}, "compiled_path": "target\\compiled\\exp\\models\\matricula_ept\\ephemeral\\matricula_ept_2019.sql", "compiled": true, "compiled_code": "with with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2019\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.matricula_ept_2020": {"database": "postgres", "schema": "dbt_staging", "name": "matricula_ept_2020", "resource_type": "model", "package_name": "exp", "path": "matricula_ept\\ephemeral\\matricula_ept_2020.sql", "original_file_path": "models\\matricula_ept\\ephemeral\\matricula_ept_2020.sql", "unique_id": "model.exp.matricula_ept_2020", "fqn": ["exp", "matricula_ept", "ephemeral", "matricula_ept_2020"], "alias": "matricula_ept_2020", "checksum": {"name": "sha256", "checksum": "c6c9090b6ce62b4f34651df6e387eb06924ca874461a280fe8c1146387ae5016"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "ephemeral"}, "created_at": 1723502084.3377802, "relation_name": null, "raw_code": "with with_col_publico as (\r\n    select\r\n        \"NU_ANO_CENSO\" as \"ANO\"\r\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\r\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\r\n    from\r\n        {{source(\"raw\", \"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2020\") }}\r\n    where\r\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\r\n),\r\nept_privado as (\r\n    select\r\n        \"ANO\"\r\n        , \"FK_MUNICIPIO_CODIGO\"\r\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\r\n    from\r\n        with_col_publico\r\n    where\r\n        PUBLICO = 0\r\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n),\r\nept_publico as (\r\n    select\r\n        \"ANO\"\r\n        , \"FK_MUNICIPIO_CODIGO\"\r\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\r\n    from\r\n        with_col_publico\r\n    where\r\n        PUBLICO = 1\r\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\r\n),\r\nmatricula_ept as (\r\n    select\r\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\r\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\r\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\r\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\r\n    from ept_publico\r\n    full join ept_privado\r\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\r\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\r\n\r\n)\r\nselect * from matricula_ept", "language": "sql", "refs": [], "sources": [["raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2020"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2020"]}, "compiled_path": "target\\compiled\\exp\\models\\matricula_ept\\ephemeral\\matricula_ept_2020.sql", "compiled": true, "compiled_code": "with with_col_publico as (\n    select\n        \"NU_ANO_CENSO\" as \"ANO\"\n        , \"CO_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n        , case when \"TP_DEPENDENCIA\" in (1,2,3) then 1 else 0 end as PUBLICO\n    from\n        \"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2020\"\n    where\n        \"TP_ETAPA_ENSINO\" in (30, 31, 32, 33, 34, 35, 36, 37, 38, 39)\n),\nept_privado as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PRIVADO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 0\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nept_publico as (\n    select\n        \"ANO\"\n        , \"FK_MUNICIPIO_CODIGO\"\n        , count(\"FK_MUNICIPIO_CODIGO\") as \"EPT_PUBLICO\"\n    from\n        with_col_publico\n    where\n        PUBLICO = 1\n    group by \"ANO\", \"FK_MUNICIPIO_CODIGO\"\n),\nmatricula_ept as (\n    select\n        COALESCE(ept_publico.\"ANO\", ept_privado.\"ANO\") as \"ANO\"\n        , COALESCE(ept_publico.\"FK_MUNICIPIO_CODIGO\", ept_privado.\"FK_MUNICIPIO_CODIGO\") as \"FK_MUNICIPIO_CODIGO\"\n        , COALESCE(ept_publico.\"EPT_PUBLICO\",0) as \"EPT_PUBLICO\"\n        , COALESCE(ept_privado.\"EPT_PRIVADO\", 0) as \"EPT_PRIVADO\"\n    from ept_publico\n    full join ept_privado\n        on ept_publico.\"ANO\" = ept_privado.\"ANO\"\n        and ept_publico.\"FK_MUNICIPIO_CODIGO\" = ept_privado.\"FK_MUNICIPIO_CODIGO\"\n\n)\nselect * from matricula_ept", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_tce_es_educacao": {"database": "postgres", "schema": "dbt_staging", "name": "dim_tce_es_educacao", "resource_type": "model", "package_name": "exp", "path": "tce_es_educacao\\dim_tce_es_educacao.sql", "original_file_path": "models\\tce_es_educacao\\dim_tce_es_educacao.sql", "unique_id": "model.exp.dim_tce_es_educacao", "fqn": ["exp", "tce_es_educacao", "dim_tce_es_educacao"], "alias": "dim_tce_es_educacao", "checksum": {"name": "sha256", "checksum": "f89052b97895b90ebc49ed5c9a574075920745dd0dd6dc09c661443786db5d49"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.34177, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_tce_es_educacao\"", "raw_code": "with base as (\r\n    {% for year in range(2014, 2024) %}\r\n        select\r\n            \"ANO\"\r\n            , \"ESFERAADMINISTRATIVA\" as \"MUNICIPIO_NOME\"\r\n            , \"DESCRICAOGRUPONATUREZA\" as \"GRUPO_NATUREZA\"\r\n            , \"DESCRICAOCATEGORIA\" as \"CATEGORIA\"\r\n            , \"PAGA\" as \"VALOR_PAGO\"\r\n        from\r\n            {{source(\"raw\", \"DIM_TCE_ES_DESPESAS_\"~ year )}}\r\n        where\r\n            \"DESCRICAOFUNCAO\" = 'EDUCA\u00c7\u00c3O'\r\n        {% if not loop.last %}union all{% endif %}\r\n    {% endfor %}\r\n    ),\r\ninfo_municipios as (select\r\n    \"MUNICIPIO_CODIGO\" as \"FK_MUNICIPIO_CODIGO\"\r\n    , \"MUNICIPIO_NOME\"\r\nfrom\r\n    {{ ref(\"info_municipios\") }} )\r\n\r\nselect\r\n    base.\"ANO\"\r\n    , base.\"MUNICIPIO_NOME\"\r\n    , info_municipios.\"FK_MUNICIPIO_CODIGO\"\r\n    , base.\"GRUPO_NATUREZA\"\r\n    , base.\"CATEGORIA\"\r\n    , ROUND(CAST(base.\"VALOR_PAGO\" as numeric), 2) as \"VALOR_PAGO\"\r\nfrom base\r\nleft join info_municipios\r\non base.\"MUNICIPIO_NOME\" = info_municipios.\"MUNICIPIO_NOME\"", "language": "sql", "refs": [{"name": "info_municipios", "package": null, "version": null}], "sources": [["raw", "DIM_TCE_ES_DESPESAS_2014"], ["raw", "DIM_TCE_ES_DESPESAS_2015"], ["raw", "DIM_TCE_ES_DESPESAS_2016"], ["raw", "DIM_TCE_ES_DESPESAS_2017"], ["raw", "DIM_TCE_ES_DESPESAS_2018"], ["raw", "DIM_TCE_ES_DESPESAS_2019"], ["raw", "DIM_TCE_ES_DESPESAS_2020"], ["raw", "DIM_TCE_ES_DESPESAS_2021"], ["raw", "DIM_TCE_ES_DESPESAS_2022"], ["raw", "DIM_TCE_ES_DESPESAS_2023"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_TCE_ES_DESPESAS_2014", "source.exp.raw.DIM_TCE_ES_DESPESAS_2015", "source.exp.raw.DIM_TCE_ES_DESPESAS_2016", "source.exp.raw.DIM_TCE_ES_DESPESAS_2017", "source.exp.raw.DIM_TCE_ES_DESPESAS_2018", "source.exp.raw.DIM_TCE_ES_DESPESAS_2019", "source.exp.raw.DIM_TCE_ES_DESPESAS_2020", "source.exp.raw.DIM_TCE_ES_DESPESAS_2021", "source.exp.raw.DIM_TCE_ES_DESPESAS_2022", "source.exp.raw.DIM_TCE_ES_DESPESAS_2023", "model.exp.info_municipios"]}, "compiled_path": "target\\compiled\\exp\\models\\tce_es_educacao\\dim_tce_es_educacao.sql", "compiled": true, "compiled_code": "with base as (\n    \n        select\n            \"ANO\"\n            , \"ESFERAADMINISTRATIVA\" as \"MUNICIPIO_NOME\"\n            , \"DESCRICAOGRUPONATUREZA\" as \"GRUPO_NATUREZA\"\n            , \"DESCRICAOCATEGORIA\" as \"CATEGORIA\"\n            , \"PAGA\" as \"VALOR_PAGO\"\n        from\n            \"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2014\"\n        where\n            \"DESCRICAOFUNCAO\" = 'EDUCA\u00c7\u00c3O'\n        union all\n    \n        select\n            \"ANO\"\n            , \"ESFERAADMINISTRATIVA\" as \"MUNICIPIO_NOME\"\n            , \"DESCRICAOGRUPONATUREZA\" as \"GRUPO_NATUREZA\"\n            , \"DESCRICAOCATEGORIA\" as \"CATEGORIA\"\n            , \"PAGA\" as \"VALOR_PAGO\"\n        from\n            \"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2015\"\n        where\n            \"DESCRICAOFUNCAO\" = 'EDUCA\u00c7\u00c3O'\n        union all\n    \n        select\n            \"ANO\"\n            , \"ESFERAADMINISTRATIVA\" as \"MUNICIPIO_NOME\"\n            , \"DESCRICAOGRUPONATUREZA\" as \"GRUPO_NATUREZA\"\n            , \"DESCRICAOCATEGORIA\" as \"CATEGORIA\"\n            , \"PAGA\" as \"VALOR_PAGO\"\n        from\n            \"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2016\"\n        where\n            \"DESCRICAOFUNCAO\" = 'EDUCA\u00c7\u00c3O'\n        union all\n    \n        select\n            \"ANO\"\n            , \"ESFERAADMINISTRATIVA\" as \"MUNICIPIO_NOME\"\n            , \"DESCRICAOGRUPONATUREZA\" as \"GRUPO_NATUREZA\"\n            , \"DESCRICAOCATEGORIA\" as \"CATEGORIA\"\n            , \"PAGA\" as \"VALOR_PAGO\"\n        from\n            \"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2017\"\n        where\n            \"DESCRICAOFUNCAO\" = 'EDUCA\u00c7\u00c3O'\n        union all\n    \n        select\n            \"ANO\"\n            , \"ESFERAADMINISTRATIVA\" as \"MUNICIPIO_NOME\"\n            , \"DESCRICAOGRUPONATUREZA\" as \"GRUPO_NATUREZA\"\n            , \"DESCRICAOCATEGORIA\" as \"CATEGORIA\"\n            , \"PAGA\" as \"VALOR_PAGO\"\n        from\n            \"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2018\"\n        where\n            \"DESCRICAOFUNCAO\" = 'EDUCA\u00c7\u00c3O'\n        union all\n    \n        select\n            \"ANO\"\n            , \"ESFERAADMINISTRATIVA\" as \"MUNICIPIO_NOME\"\n            , \"DESCRICAOGRUPONATUREZA\" as \"GRUPO_NATUREZA\"\n            , \"DESCRICAOCATEGORIA\" as \"CATEGORIA\"\n            , \"PAGA\" as \"VALOR_PAGO\"\n        from\n            \"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2019\"\n        where\n            \"DESCRICAOFUNCAO\" = 'EDUCA\u00c7\u00c3O'\n        union all\n    \n        select\n            \"ANO\"\n            , \"ESFERAADMINISTRATIVA\" as \"MUNICIPIO_NOME\"\n            , \"DESCRICAOGRUPONATUREZA\" as \"GRUPO_NATUREZA\"\n            , \"DESCRICAOCATEGORIA\" as \"CATEGORIA\"\n            , \"PAGA\" as \"VALOR_PAGO\"\n        from\n            \"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2020\"\n        where\n            \"DESCRICAOFUNCAO\" = 'EDUCA\u00c7\u00c3O'\n        union all\n    \n        select\n            \"ANO\"\n            , \"ESFERAADMINISTRATIVA\" as \"MUNICIPIO_NOME\"\n            , \"DESCRICAOGRUPONATUREZA\" as \"GRUPO_NATUREZA\"\n            , \"DESCRICAOCATEGORIA\" as \"CATEGORIA\"\n            , \"PAGA\" as \"VALOR_PAGO\"\n        from\n            \"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2021\"\n        where\n            \"DESCRICAOFUNCAO\" = 'EDUCA\u00c7\u00c3O'\n        union all\n    \n        select\n            \"ANO\"\n            , \"ESFERAADMINISTRATIVA\" as \"MUNICIPIO_NOME\"\n            , \"DESCRICAOGRUPONATUREZA\" as \"GRUPO_NATUREZA\"\n            , \"DESCRICAOCATEGORIA\" as \"CATEGORIA\"\n            , \"PAGA\" as \"VALOR_PAGO\"\n        from\n            \"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2022\"\n        where\n            \"DESCRICAOFUNCAO\" = 'EDUCA\u00c7\u00c3O'\n        union all\n    \n        select\n            \"ANO\"\n            , \"ESFERAADMINISTRATIVA\" as \"MUNICIPIO_NOME\"\n            , \"DESCRICAOGRUPONATUREZA\" as \"GRUPO_NATUREZA\"\n            , \"DESCRICAOCATEGORIA\" as \"CATEGORIA\"\n            , \"PAGA\" as \"VALOR_PAGO\"\n        from\n            \"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2023\"\n        where\n            \"DESCRICAOFUNCAO\" = 'EDUCA\u00c7\u00c3O'\n        \n    \n    ),\ninfo_municipios as (select\n    \"MUNICIPIO_CODIGO\" as \"FK_MUNICIPIO_CODIGO\"\n    , \"MUNICIPIO_NOME\"\nfrom\n    \"postgres\".\"dbt_staging\".\"info_municipios\" )\n\nselect\n    base.\"ANO\"\n    , base.\"MUNICIPIO_NOME\"\n    , info_municipios.\"FK_MUNICIPIO_CODIGO\"\n    , base.\"GRUPO_NATUREZA\"\n    , base.\"CATEGORIA\"\n    , ROUND(CAST(base.\"VALOR_PAGO\" as numeric), 2) as \"VALOR_PAGO\"\nfrom base\nleft join info_municipios\non base.\"MUNICIPIO_NOME\" = info_municipios.\"MUNICIPIO_NOME\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_tce_mg_educacao": {"database": "postgres", "schema": "dbt_staging", "name": "dim_tce_mg_educacao", "resource_type": "model", "package_name": "exp", "path": "tce_mg_educacao\\dim_tce_mg_educacao.sql", "original_file_path": "models\\tce_mg_educacao\\dim_tce_mg_educacao.sql", "unique_id": "model.exp.dim_tce_mg_educacao", "fqn": ["exp", "tce_mg_educacao", "dim_tce_mg_educacao"], "alias": "dim_tce_mg_educacao", "checksum": {"name": "sha256", "checksum": "d46924f6392d5b4455e64ad3abe06071f80215156e7a35576a62c7fc7cc201c5"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.348767, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_tce_mg_educacao\"", "raw_code": "select\r\n    \"NUM_ANO_REFERENCIA\" as \"ANO\"\r\n    , \"COD_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\r\n    , \"DSC_SUBFUNCAO\" as \"SUBFUNCAO\"\r\n    , \"DSC_PROGRAMA\" as \"PROGRAMA\"\r\n    , \"DSC_ACAO\" as \"ACAO\"\r\n    , \"DSC_SUBACAO\" as \"SUBACAO\"\r\n    , ROUND(CAST(\"VLR_PAGAMENTO\" as numeric), 2) as \"VALOR_PAGO\"\r\nfrom\r\n    {{ source(\"raw\", \"DIM_TCE_MG_EDUCACAO\") }}", "language": "sql", "refs": [], "sources": [["raw", "DIM_TCE_MG_EDUCACAO"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_TCE_MG_EDUCACAO"]}, "compiled_path": "target\\compiled\\exp\\models\\tce_mg_educacao\\dim_tce_mg_educacao.sql", "compiled": true, "compiled_code": "select\n    \"NUM_ANO_REFERENCIA\" as \"ANO\"\n    , \"COD_MUNICIPIO\" as \"FK_MUNICIPIO_CODIGO\"\n    , \"DSC_SUBFUNCAO\" as \"SUBFUNCAO\"\n    , \"DSC_PROGRAMA\" as \"PROGRAMA\"\n    , \"DSC_ACAO\" as \"ACAO\"\n    , \"DSC_SUBACAO\" as \"SUBACAO\"\n    , ROUND(CAST(\"VLR_PAGAMENTO\" as numeric), 2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_MG_EDUCACAO\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_tce_pe_educacao": {"database": "postgres", "schema": "dbt_staging", "name": "dim_tce_pe_educacao", "resource_type": "model", "package_name": "exp", "path": "tce_pe_educacao\\dim_tce_pe_educacao.sql", "original_file_path": "models\\tce_pe_educacao\\dim_tce_pe_educacao.sql", "unique_id": "model.exp.dim_tce_pe_educacao", "fqn": ["exp", "tce_pe_educacao", "dim_tce_pe_educacao"], "alias": "dim_tce_pe_educacao", "checksum": {"name": "sha256", "checksum": "b4ebaa0a2dc31569b463809898c08ce292bd57b9120d5cb8e6cc67d704517c4d"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.3527775, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_tce_pe_educacao\"", "raw_code": "with tb_municipio as (\r\n    select\r\n        \"CODIGO\",\r\n        \"CODIGOIBGE\" as \"FK_MUNICIPIO_CODIGO\"\r\n    from\r\n        {{ source(\"raw\", \"DIM_TCE_PE_MUNICIPIO\") }}\r\n)\r\n\r\n{% for year in range(2014, 2024) %}\r\nselect\r\n    \"ANO_REFERENCIA\" as \"ANO\"\r\n    , tb_municipio.\"FK_MUNICIPIO_CODIGO\"\r\n    , \"NATUREZA\"\r\n    , ROUND(SUM(CAST(\"VALOR_PAGO\" as numeric)),2) as \"VALOR_PAGO\"\r\nfrom\r\n    {{source(\"raw\", \"DIM_TCE_PE_DESPESAS_\" ~ year )}}\r\nLEFT JOIN tb_municipio\r\nON \"CODIGO_MUNICIPIO\" = tb_municipio.\"CODIGO\"\r\nwhere\r\n    \"FUNCAO\" = 'Educa\u00e7\u00e3o'\r\ngroup by\r\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"NATUREZA\"\r\n{% if not loop.last %}\r\nunion all\r\n{% endif %}\r\n{% endfor %}", "language": "sql", "refs": [], "sources": [["raw", "DIM_TCE_PE_MUNICIPIO"], ["raw", "DIM_TCE_PE_DESPESAS_2014"], ["raw", "DIM_TCE_PE_DESPESAS_2015"], ["raw", "DIM_TCE_PE_DESPESAS_2016"], ["raw", "DIM_TCE_PE_DESPESAS_2017"], ["raw", "DIM_TCE_PE_DESPESAS_2018"], ["raw", "DIM_TCE_PE_DESPESAS_2019"], ["raw", "DIM_TCE_PE_DESPESAS_2020"], ["raw", "DIM_TCE_PE_DESPESAS_2021"], ["raw", "DIM_TCE_PE_DESPESAS_2022"], ["raw", "DIM_TCE_PE_DESPESAS_2023"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_TCE_PE_MUNICIPIO", "source.exp.raw.DIM_TCE_PE_DESPESAS_2014", "source.exp.raw.DIM_TCE_PE_DESPESAS_2015", "source.exp.raw.DIM_TCE_PE_DESPESAS_2016", "source.exp.raw.DIM_TCE_PE_DESPESAS_2017", "source.exp.raw.DIM_TCE_PE_DESPESAS_2018", "source.exp.raw.DIM_TCE_PE_DESPESAS_2019", "source.exp.raw.DIM_TCE_PE_DESPESAS_2020", "source.exp.raw.DIM_TCE_PE_DESPESAS_2021", "source.exp.raw.DIM_TCE_PE_DESPESAS_2022", "source.exp.raw.DIM_TCE_PE_DESPESAS_2023"]}, "compiled_path": "target\\compiled\\exp\\models\\tce_pe_educacao\\dim_tce_pe_educacao.sql", "compiled": true, "compiled_code": "with tb_municipio as (\n    select\n        \"CODIGO\",\n        \"CODIGOIBGE\" as \"FK_MUNICIPIO_CODIGO\"\n    from\n        \"postgres\".\"raw\".\"DIM_TCE_PE_MUNICIPIO\"\n)\n\n\nselect\n    \"ANO_REFERENCIA\" as \"ANO\"\n    , tb_municipio.\"FK_MUNICIPIO_CODIGO\"\n    , \"NATUREZA\"\n    , ROUND(SUM(CAST(\"VALOR_PAGO\" as numeric)),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2014\"\nLEFT JOIN tb_municipio\nON \"CODIGO_MUNICIPIO\" = tb_municipio.\"CODIGO\"\nwhere\n    \"FUNCAO\" = 'Educa\u00e7\u00e3o'\ngroup by\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"NATUREZA\"\n\nunion all\n\n\nselect\n    \"ANO_REFERENCIA\" as \"ANO\"\n    , tb_municipio.\"FK_MUNICIPIO_CODIGO\"\n    , \"NATUREZA\"\n    , ROUND(SUM(CAST(\"VALOR_PAGO\" as numeric)),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2015\"\nLEFT JOIN tb_municipio\nON \"CODIGO_MUNICIPIO\" = tb_municipio.\"CODIGO\"\nwhere\n    \"FUNCAO\" = 'Educa\u00e7\u00e3o'\ngroup by\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"NATUREZA\"\n\nunion all\n\n\nselect\n    \"ANO_REFERENCIA\" as \"ANO\"\n    , tb_municipio.\"FK_MUNICIPIO_CODIGO\"\n    , \"NATUREZA\"\n    , ROUND(SUM(CAST(\"VALOR_PAGO\" as numeric)),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2016\"\nLEFT JOIN tb_municipio\nON \"CODIGO_MUNICIPIO\" = tb_municipio.\"CODIGO\"\nwhere\n    \"FUNCAO\" = 'Educa\u00e7\u00e3o'\ngroup by\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"NATUREZA\"\n\nunion all\n\n\nselect\n    \"ANO_REFERENCIA\" as \"ANO\"\n    , tb_municipio.\"FK_MUNICIPIO_CODIGO\"\n    , \"NATUREZA\"\n    , ROUND(SUM(CAST(\"VALOR_PAGO\" as numeric)),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2017\"\nLEFT JOIN tb_municipio\nON \"CODIGO_MUNICIPIO\" = tb_municipio.\"CODIGO\"\nwhere\n    \"FUNCAO\" = 'Educa\u00e7\u00e3o'\ngroup by\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"NATUREZA\"\n\nunion all\n\n\nselect\n    \"ANO_REFERENCIA\" as \"ANO\"\n    , tb_municipio.\"FK_MUNICIPIO_CODIGO\"\n    , \"NATUREZA\"\n    , ROUND(SUM(CAST(\"VALOR_PAGO\" as numeric)),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2018\"\nLEFT JOIN tb_municipio\nON \"CODIGO_MUNICIPIO\" = tb_municipio.\"CODIGO\"\nwhere\n    \"FUNCAO\" = 'Educa\u00e7\u00e3o'\ngroup by\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"NATUREZA\"\n\nunion all\n\n\nselect\n    \"ANO_REFERENCIA\" as \"ANO\"\n    , tb_municipio.\"FK_MUNICIPIO_CODIGO\"\n    , \"NATUREZA\"\n    , ROUND(SUM(CAST(\"VALOR_PAGO\" as numeric)),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2019\"\nLEFT JOIN tb_municipio\nON \"CODIGO_MUNICIPIO\" = tb_municipio.\"CODIGO\"\nwhere\n    \"FUNCAO\" = 'Educa\u00e7\u00e3o'\ngroup by\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"NATUREZA\"\n\nunion all\n\n\nselect\n    \"ANO_REFERENCIA\" as \"ANO\"\n    , tb_municipio.\"FK_MUNICIPIO_CODIGO\"\n    , \"NATUREZA\"\n    , ROUND(SUM(CAST(\"VALOR_PAGO\" as numeric)),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2020\"\nLEFT JOIN tb_municipio\nON \"CODIGO_MUNICIPIO\" = tb_municipio.\"CODIGO\"\nwhere\n    \"FUNCAO\" = 'Educa\u00e7\u00e3o'\ngroup by\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"NATUREZA\"\n\nunion all\n\n\nselect\n    \"ANO_REFERENCIA\" as \"ANO\"\n    , tb_municipio.\"FK_MUNICIPIO_CODIGO\"\n    , \"NATUREZA\"\n    , ROUND(SUM(CAST(\"VALOR_PAGO\" as numeric)),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2021\"\nLEFT JOIN tb_municipio\nON \"CODIGO_MUNICIPIO\" = tb_municipio.\"CODIGO\"\nwhere\n    \"FUNCAO\" = 'Educa\u00e7\u00e3o'\ngroup by\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"NATUREZA\"\n\nunion all\n\n\nselect\n    \"ANO_REFERENCIA\" as \"ANO\"\n    , tb_municipio.\"FK_MUNICIPIO_CODIGO\"\n    , \"NATUREZA\"\n    , ROUND(SUM(CAST(\"VALOR_PAGO\" as numeric)),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2022\"\nLEFT JOIN tb_municipio\nON \"CODIGO_MUNICIPIO\" = tb_municipio.\"CODIGO\"\nwhere\n    \"FUNCAO\" = 'Educa\u00e7\u00e3o'\ngroup by\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"NATUREZA\"\n\nunion all\n\n\nselect\n    \"ANO_REFERENCIA\" as \"ANO\"\n    , tb_municipio.\"FK_MUNICIPIO_CODIGO\"\n    , \"NATUREZA\"\n    , ROUND(SUM(CAST(\"VALOR_PAGO\" as numeric)),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2023\"\nLEFT JOIN tb_municipio\nON \"CODIGO_MUNICIPIO\" = tb_municipio.\"CODIGO\"\nwhere\n    \"FUNCAO\" = 'Educa\u00e7\u00e3o'\ngroup by\n    \"ANO\", \"FK_MUNICIPIO_CODIGO\", \"NATUREZA\"\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_tce_sp_educacao": {"database": "postgres", "schema": "dbt_staging", "name": "dim_tce_sp_educacao", "resource_type": "model", "package_name": "exp", "path": "tce_sp_educacao\\dim_tce_sp_educacao.sql", "original_file_path": "models\\tce_sp_educacao\\dim_tce_sp_educacao.sql", "unique_id": "model.exp.dim_tce_sp_educacao", "fqn": ["exp", "tce_sp_educacao", "dim_tce_sp_educacao"], "alias": "dim_tce_sp_educacao", "checksum": {"name": "sha256", "checksum": "9b6ce4c215ea5b954a4ff92fbe8e062b7420a7295de1fa59fa8dda9594c14176"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.3607686, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_tce_sp_educacao\"", "raw_code": "{% for year in range(2014, 2023+1) %}\r\nselect\r\n    \"ANO_EXERCICIO\" as \"ANO\"\r\n    , \"CODIGO_MUNICIPIO_IBGE\" as \"FK_MUNICIPIO_CODIGO\"\r\n    , \"DS_SUBFUNCAO_GOVERNO\"\r\n    , ROUND(CAST(\"VL_DESPESA\" as numeric),2) as \"VALOR_PAGO\"\r\nfrom\r\n    {{source(\"raw\", \"DIM_TCE_SP_DESPESAS_\" ~ year )}}\r\nwhere\r\n    \"DS_FUNCAO_GOVERNO\" = 'EDUCA\u00c7\u00c3O' AND \"TP_DESPESA\" = 'Valor Pago'\r\n{% if not loop.last %}\r\nunion all\r\n{% endif %}\r\n{% endfor %}", "language": "sql", "refs": [], "sources": [["raw", "DIM_TCE_SP_DESPESAS_2014"], ["raw", "DIM_TCE_SP_DESPESAS_2015"], ["raw", "DIM_TCE_SP_DESPESAS_2016"], ["raw", "DIM_TCE_SP_DESPESAS_2017"], ["raw", "DIM_TCE_SP_DESPESAS_2018"], ["raw", "DIM_TCE_SP_DESPESAS_2019"], ["raw", "DIM_TCE_SP_DESPESAS_2020"], ["raw", "DIM_TCE_SP_DESPESAS_2021"], ["raw", "DIM_TCE_SP_DESPESAS_2022"], ["raw", "DIM_TCE_SP_DESPESAS_2023"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.exp.raw.DIM_TCE_SP_DESPESAS_2014", "source.exp.raw.DIM_TCE_SP_DESPESAS_2015", "source.exp.raw.DIM_TCE_SP_DESPESAS_2016", "source.exp.raw.DIM_TCE_SP_DESPESAS_2017", "source.exp.raw.DIM_TCE_SP_DESPESAS_2018", "source.exp.raw.DIM_TCE_SP_DESPESAS_2019", "source.exp.raw.DIM_TCE_SP_DESPESAS_2020", "source.exp.raw.DIM_TCE_SP_DESPESAS_2021", "source.exp.raw.DIM_TCE_SP_DESPESAS_2022", "source.exp.raw.DIM_TCE_SP_DESPESAS_2023"]}, "compiled_path": "target\\compiled\\exp\\models\\tce_sp_educacao\\dim_tce_sp_educacao.sql", "compiled": true, "compiled_code": "\nselect\n    \"ANO_EXERCICIO\" as \"ANO\"\n    , \"CODIGO_MUNICIPIO_IBGE\" as \"FK_MUNICIPIO_CODIGO\"\n    , \"DS_SUBFUNCAO_GOVERNO\"\n    , ROUND(CAST(\"VL_DESPESA\" as numeric),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2014\"\nwhere\n    \"DS_FUNCAO_GOVERNO\" = 'EDUCA\u00c7\u00c3O' AND \"TP_DESPESA\" = 'Valor Pago'\n\nunion all\n\n\nselect\n    \"ANO_EXERCICIO\" as \"ANO\"\n    , \"CODIGO_MUNICIPIO_IBGE\" as \"FK_MUNICIPIO_CODIGO\"\n    , \"DS_SUBFUNCAO_GOVERNO\"\n    , ROUND(CAST(\"VL_DESPESA\" as numeric),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2015\"\nwhere\n    \"DS_FUNCAO_GOVERNO\" = 'EDUCA\u00c7\u00c3O' AND \"TP_DESPESA\" = 'Valor Pago'\n\nunion all\n\n\nselect\n    \"ANO_EXERCICIO\" as \"ANO\"\n    , \"CODIGO_MUNICIPIO_IBGE\" as \"FK_MUNICIPIO_CODIGO\"\n    , \"DS_SUBFUNCAO_GOVERNO\"\n    , ROUND(CAST(\"VL_DESPESA\" as numeric),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2016\"\nwhere\n    \"DS_FUNCAO_GOVERNO\" = 'EDUCA\u00c7\u00c3O' AND \"TP_DESPESA\" = 'Valor Pago'\n\nunion all\n\n\nselect\n    \"ANO_EXERCICIO\" as \"ANO\"\n    , \"CODIGO_MUNICIPIO_IBGE\" as \"FK_MUNICIPIO_CODIGO\"\n    , \"DS_SUBFUNCAO_GOVERNO\"\n    , ROUND(CAST(\"VL_DESPESA\" as numeric),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2017\"\nwhere\n    \"DS_FUNCAO_GOVERNO\" = 'EDUCA\u00c7\u00c3O' AND \"TP_DESPESA\" = 'Valor Pago'\n\nunion all\n\n\nselect\n    \"ANO_EXERCICIO\" as \"ANO\"\n    , \"CODIGO_MUNICIPIO_IBGE\" as \"FK_MUNICIPIO_CODIGO\"\n    , \"DS_SUBFUNCAO_GOVERNO\"\n    , ROUND(CAST(\"VL_DESPESA\" as numeric),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2018\"\nwhere\n    \"DS_FUNCAO_GOVERNO\" = 'EDUCA\u00c7\u00c3O' AND \"TP_DESPESA\" = 'Valor Pago'\n\nunion all\n\n\nselect\n    \"ANO_EXERCICIO\" as \"ANO\"\n    , \"CODIGO_MUNICIPIO_IBGE\" as \"FK_MUNICIPIO_CODIGO\"\n    , \"DS_SUBFUNCAO_GOVERNO\"\n    , ROUND(CAST(\"VL_DESPESA\" as numeric),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2019\"\nwhere\n    \"DS_FUNCAO_GOVERNO\" = 'EDUCA\u00c7\u00c3O' AND \"TP_DESPESA\" = 'Valor Pago'\n\nunion all\n\n\nselect\n    \"ANO_EXERCICIO\" as \"ANO\"\n    , \"CODIGO_MUNICIPIO_IBGE\" as \"FK_MUNICIPIO_CODIGO\"\n    , \"DS_SUBFUNCAO_GOVERNO\"\n    , ROUND(CAST(\"VL_DESPESA\" as numeric),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2020\"\nwhere\n    \"DS_FUNCAO_GOVERNO\" = 'EDUCA\u00c7\u00c3O' AND \"TP_DESPESA\" = 'Valor Pago'\n\nunion all\n\n\nselect\n    \"ANO_EXERCICIO\" as \"ANO\"\n    , \"CODIGO_MUNICIPIO_IBGE\" as \"FK_MUNICIPIO_CODIGO\"\n    , \"DS_SUBFUNCAO_GOVERNO\"\n    , ROUND(CAST(\"VL_DESPESA\" as numeric),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2021\"\nwhere\n    \"DS_FUNCAO_GOVERNO\" = 'EDUCA\u00c7\u00c3O' AND \"TP_DESPESA\" = 'Valor Pago'\n\nunion all\n\n\nselect\n    \"ANO_EXERCICIO\" as \"ANO\"\n    , \"CODIGO_MUNICIPIO_IBGE\" as \"FK_MUNICIPIO_CODIGO\"\n    , \"DS_SUBFUNCAO_GOVERNO\"\n    , ROUND(CAST(\"VL_DESPESA\" as numeric),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2022\"\nwhere\n    \"DS_FUNCAO_GOVERNO\" = 'EDUCA\u00c7\u00c3O' AND \"TP_DESPESA\" = 'Valor Pago'\n\nunion all\n\n\nselect\n    \"ANO_EXERCICIO\" as \"ANO\"\n    , \"CODIGO_MUNICIPIO_IBGE\" as \"FK_MUNICIPIO_CODIGO\"\n    , \"DS_SUBFUNCAO_GOVERNO\"\n    , ROUND(CAST(\"VL_DESPESA\" as numeric),2) as \"VALOR_PAGO\"\nfrom\n    \"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2023\"\nwhere\n    \"DS_FUNCAO_GOVERNO\" = 'EDUCA\u00c7\u00c3O' AND \"TP_DESPESA\" = 'Valor Pago'\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_estadic_educ": {"database": "postgres", "schema": "dbt_staging", "name": "dim_estadic_educ", "resource_type": "model", "package_name": "exp", "path": "dim_estadic_educ\\dim_estadic_educ.py", "original_file_path": "models\\dim_estadic_educ\\dim_estadic_educ.py", "unique_id": "model.exp.dim_estadic_educ", "fqn": ["exp", "dim_estadic_educ", "dim_estadic_educ"], "alias": "dim_estadic_educ", "checksum": {"name": "sha256", "checksum": "d67a4a2bdc1a41eb3d53254953913ca4402e8c403a1589cb77459a80332c539d"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.3687682, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_estadic_educ\"", "raw_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_estadic_educ_2014 = dbt.source(\"raw\", \"DIM_ESTADIC_2014\")\r\n    df_dim_estadic_educ_2018 = dbt.source(\"raw\", \"DIM_ESTADIC_2018\")\r\n    df_dim_estadic_educ_2021 = dbt.source(\"raw\", \"DIM_ESTADIC_2021\")\r\n\r\n    cols_2014=[\"A1\", \"A208\", \"A225\", \"A228\"]\r\n    cols_2018=[\"COD_UF\", \"EEDU15\", \"EEDU22\", \"EEDU30\", \"EEDU35\", \"EEDU27\",\r\n               \"EEDU261\", \"EEDU262\", \"EEDU34\", \"EEDU331\", \"EEDU332\", \"EEDU40\",\r\n               \"EEDU391\", \"EEDU392\", \"EEDU16\", \"EEDU18\", \"EEDU20\", \"EEDU21\"]\r\n    cols_2021=[\"COD_UF\", \"EEDU15\", \"EEDU22\", \"EEDU30\", \"EEDU35\", \"EEDU27\",\r\n               \"EEDU261\", \"EEDU262\", \"EEDU34\", \"EEDU331\", \"EEDU332\", \"EEDU40\",\r\n               \"EEDU391\", \"EEDU392\", \"EEDU16\", \"EEDU18\", \"EEDU20\", \"EEDU21\"]\r\n\r\n    df_estadic_educ = (\r\n        pd.concat(\r\n            [(df_dim_estadic_educ_2014[cols_2014]\r\n            .rename(columns={'A1': 'FK_ESTADO_CODIGO',\r\n                             'A208': 'EEDU22',\r\n                             'A225': 'EEDU30',\r\n                             'A228': 'EEDU35',\r\n                             'A206': 'EEDU16'})\r\n            .assign(ANO=2014)),\r\n            (df_dim_estadic_educ_2018[cols_2018]\r\n            .rename(columns={'COD_UF': 'FK_ESTADO_CODIGO'})\r\n            .assign(ANO=2018)),\r\n            (df_dim_estadic_educ_2021[cols_2021]\r\n            .rename(columns={'COD_UF': 'FK_ESTADO_CODIGO'})\r\n            .assign(ANO=2021))])\r\n        .sort_values(['ANO','FK_ESTADO_CODIGO'])\r\n        .reset_index(drop=True)\r\n        .reindex(['ANO', 'FK_ESTADO_CODIGO', \"EEDU15\", \"EEDU22\", \"EEDU30\",\r\n                  \"EEDU35\", \"EEDU27\", \"EEDU261\", \"EEDU262\", \"EEDU34\",\r\n                  \"EEDU331\", \"EEDU332\", \"EEDU40\", \"EEDU391\", \"EEDU392\",\r\n                  \"EEDU16\", \"EEDU18\", \"EEDU20\", \"EEDU21\"], axis=1)\r\n    )\r\n\r\n    return df_estadic_educ", "language": "python", "refs": [], "sources": [["raw", "DIM_ESTADIC_2014"], ["raw", "DIM_ESTADIC_2018"], ["raw", "DIM_ESTADIC_2021"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["source.exp.raw.DIM_ESTADIC_2014", "source.exp.raw.DIM_ESTADIC_2018", "source.exp.raw.DIM_ESTADIC_2021"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_estadic_educ\\dim_estadic_educ.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_estadic_educ_2014 = dbt.source(\"raw\", \"DIM_ESTADIC_2014\")\r\n    df_dim_estadic_educ_2018 = dbt.source(\"raw\", \"DIM_ESTADIC_2018\")\r\n    df_dim_estadic_educ_2021 = dbt.source(\"raw\", \"DIM_ESTADIC_2021\")\r\n\r\n    cols_2014=[\"A1\", \"A208\", \"A225\", \"A228\"]\r\n    cols_2018=[\"COD_UF\", \"EEDU15\", \"EEDU22\", \"EEDU30\", \"EEDU35\", \"EEDU27\",\r\n               \"EEDU261\", \"EEDU262\", \"EEDU34\", \"EEDU331\", \"EEDU332\", \"EEDU40\",\r\n               \"EEDU391\", \"EEDU392\", \"EEDU16\", \"EEDU18\", \"EEDU20\", \"EEDU21\"]\r\n    cols_2021=[\"COD_UF\", \"EEDU15\", \"EEDU22\", \"EEDU30\", \"EEDU35\", \"EEDU27\",\r\n               \"EEDU261\", \"EEDU262\", \"EEDU34\", \"EEDU331\", \"EEDU332\", \"EEDU40\",\r\n               \"EEDU391\", \"EEDU392\", \"EEDU16\", \"EEDU18\", \"EEDU20\", \"EEDU21\"]\r\n\r\n    df_estadic_educ = (\r\n        pd.concat(\r\n            [(df_dim_estadic_educ_2014[cols_2014]\r\n            .rename(columns={'A1': 'FK_ESTADO_CODIGO',\r\n                             'A208': 'EEDU22',\r\n                             'A225': 'EEDU30',\r\n                             'A228': 'EEDU35',\r\n                             'A206': 'EEDU16'})\r\n            .assign(ANO=2014)),\r\n            (df_dim_estadic_educ_2018[cols_2018]\r\n            .rename(columns={'COD_UF': 'FK_ESTADO_CODIGO'})\r\n            .assign(ANO=2018)),\r\n            (df_dim_estadic_educ_2021[cols_2021]\r\n            .rename(columns={'COD_UF': 'FK_ESTADO_CODIGO'})\r\n            .assign(ANO=2021))])\r\n        .sort_values(['ANO','FK_ESTADO_CODIGO'])\r\n        .reset_index(drop=True)\r\n        .reindex(['ANO', 'FK_ESTADO_CODIGO', \"EEDU15\", \"EEDU22\", \"EEDU30\",\r\n                  \"EEDU35\", \"EEDU27\", \"EEDU261\", \"EEDU262\", \"EEDU34\",\r\n                  \"EEDU331\", \"EEDU332\", \"EEDU40\", \"EEDU391\", \"EEDU392\",\r\n                  \"EEDU16\", \"EEDU18\", \"EEDU20\", \"EEDU21\"], axis=1)\r\n    )\r\n\r\n    return df_estadic_educ\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {\"raw.DIM_ESTADIC_2014\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_ESTADIC_2014\\\"\", \"raw.DIM_ESTADIC_2018\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_ESTADIC_2018\\\"\", \"raw.DIM_ESTADIC_2021\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_ESTADIC_2021\\\"\"}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_staging\"\n    identifier = \"dim_estadic_educ\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_staging\".\"dim_estadic_educ\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_ideb_estadual": {"database": "postgres", "schema": "dbt_staging", "name": "dim_ideb_estadual", "resource_type": "model", "package_name": "exp", "path": "dim_ideb_estadual\\dim_ideb_estadual.py", "original_file_path": "models\\dim_ideb_estadual\\dim_ideb_estadual.py", "unique_id": "model.exp.dim_ideb_estadual", "fqn": ["exp", "dim_ideb_estadual", "dim_ideb_estadual"], "alias": "dim_ideb_estadual", "checksum": {"name": "sha256", "checksum": "1ee7560cd0fc6fa2d6779fb27b4251b72992f6e21d565f045629edf10f9edf5c"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.3753152, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_ideb_estadual\"", "raw_code": "import pandas as pd\r\n\r\ndict_columns_replace = {\r\n    \"Acre\": 12,\r\n    \"Alagoas\": 27,\r\n    \"Amap\u00e1\": 16,\r\n    \"Amazonas\": 13,\r\n    \"Bahia\": 29,\r\n    \"Cear\u00e1\": 23,\r\n    \"Distrito Federal\": 53,\r\n    \"Esp\u00edrito Santo\": 32,\r\n    \"Goi\u00e1s\": 52,\r\n    \"M. G. do Sul\": 21,\r\n    \"Maranh\u00e3o\": 51,\r\n    \"Mato Grosso\": 50,\r\n    \"Minas Gerais\": 31,\r\n    \"Par\u00e1\": 15,\r\n    \"Para\u00edba\": 25,\r\n    \"Paran\u00e1\": 41,\r\n    \"Pernambuco\": 26,\r\n    \"Piau\u00ed\": 22,\r\n    \"R. G. do Norte\": 24,\r\n    \"R. G. do Sul\": 43,\r\n    \"Rio de Janeiro\": 33,\r\n    \"Rond\u00f4nia\": 11,\r\n    \"Roraima\": 14,\r\n    \"Santa Catarina\": 42,\r\n    \"S\u00e3o Paulo\": 35,\r\n    \"Sergipe\": 28,\r\n    \"Tocantins\": 17,\r\n}\r\n\r\n# fmt: off\r\ndef transform_ideb_2019(df_init, origem):\r\n    return (df_init\r\n     .reindex(['REDE','REGIAO','IDEB_2015_N_X_P','IDEB_2017_N_X_P', 'IDEB_2019_N_X_P'],axis=1)\r\n     .query(\"['Sudeste','Norte','Centro-Oeste','Nordeste','Sul'] not in REGIAO\")\r\n     .query(\"['Total (3)(4)','Total (4)'] not in REDE\")\r\n     .assign(REDE=lambda x:x['REDE'].replace({'P\u00fablica (4)':'P\u00fablica', 'Privada (2)':'Privada'}))\r\n     .assign(CO_UF=lambda x:x['REGIAO'].replace(dict_columns_replace))\r\n     .drop(columns=['REGIAO'])\r\n     .rename(columns=lambda x: x.replace('IDEB_', ''))\r\n     .rename(columns=lambda x: x.replace('_N_X_P', ''))\r\n     .melt(id_vars=['CO_UF','REDE'], var_name='ANO', value_name='IDEB')\r\n     .pivot_table(\r\n        index=[\"CO_UF\",\"ANO\"],\r\n        columns=[\"REDE\"],\r\n        values=[\"IDEB\"],\r\n        aggfunc=sum)\r\n     .reset_index(col_level=1)\r\n     .droplevel(level=0, axis=1)\r\n     .assign(origem=origem)\r\n     .rename(columns=lambda x:x.upper())\r\n     .rename(columns={'CO_UF': 'FK_ESTADO_CODIGO','P\u00daBLICA':'PUBLICA'})\r\n    )\r\n\r\ndef transform_ideb_2021(df_init, origem):\r\n    return (df_init\r\n         .reindex(['REDE','REGIAO','VL_OBSERVADO_2021'],axis=1)\r\n         .query(\"['Sudeste','Norte','Centro-Oeste','Nordeste','Sul'] not in REGIAO\")\r\n         .query(\"['Total (3)(4)','Total (4)','Total'] not in REDE\")\r\n         .assign(REDE=lambda x:x['REDE'].replace({'P\u00fablica (4)':'P\u00fablica', 'Privada (2)':'Privada'}))\r\n         .assign(CO_UF=lambda x:x['REGIAO'].replace(dict_columns_replace))\r\n         .drop(columns=['REGIAO'])\r\n         .rename(columns=lambda x: x.replace('VL_OBSERVADO_', ''))\r\n         .melt(id_vars=['CO_UF','REDE'], var_name='ANO', value_name='IDEB')\r\n         .pivot_table(\r\n            index=[\"CO_UF\",\"ANO\"],\r\n            columns=[\"REDE\"],\r\n            values=[\"IDEB\"],\r\n            aggfunc=sum)\r\n         .reset_index(col_level=1)\r\n         .droplevel(level=0, axis=1)\r\n         .assign(origem=origem)\r\n         .rename(columns=lambda x:x.upper())\r\n         .rename(columns={'CO_UF': 'FK_ESTADO_CODIGO','P\u00daBLICA':'PUBLICA'})\r\n        )\r\n\r\n\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_ideb_estadual_anos_iniciais_2019 = dbt.source(\"raw\",\"DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2019\")\r\n    df_dim_ideb_estadual_anos_iniciais_2021 = dbt.source(\"raw\",\"DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2021\")\r\n\r\n    df_dim_ideb_estadual_anos_finais_2019 = dbt.source(\"raw\",\"DIM_IDEB_ESTADUAL_ANOS_FINAIS_2019\")\r\n    df_dim_ideb_estadual_anos_finais_2021 = dbt.source(\"raw\",\"DIM_IDEB_ESTADUAL_ANOS_FINAIS_2021\")\r\n\r\n    df_dim_ideb_estadual_ensino_medio_2019 = dbt.source(\"raw\",\"DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2019\")\r\n    df_dim_ideb_estadual_ensino_medio_2021 = dbt.source(\"raw\",\"DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2021\")\r\n\r\n    df_ideb_estadual = (pd\r\n           .concat([\r\n               transform_ideb_2019(df_dim_ideb_estadual_anos_iniciais_2019,'anos_iniciais'),\r\n               transform_ideb_2021(df_dim_ideb_estadual_anos_iniciais_2021,'anos_iniciais'),\r\n               transform_ideb_2019(df_dim_ideb_estadual_anos_finais_2019,'anos_finais'),\r\n               transform_ideb_2021(df_dim_ideb_estadual_anos_finais_2021,'anos_finais'),\r\n               transform_ideb_2019(df_dim_ideb_estadual_ensino_medio_2019,'ensino_medio'),\r\n               transform_ideb_2021(df_dim_ideb_estadual_ensino_medio_2021,'ensino_medio')\r\n                   ])\r\n           .reset_index(drop=True)\r\n           .reindex(['ANO', 'FK_ESTADO_CODIGO', 'ORIGEM', 'ESTADUAL', 'PRIVADA', 'PUBLICA'], axis=1)\r\n           .sort_values(by=['ANO', 'ORIGEM', 'FK_ESTADO_CODIGO'])\r\n           .astype({col: 'uint8' for col in ['FK_ESTADO_CODIGO']})\r\n          )\r\n    return df_ideb_estadual", "language": "python", "refs": [], "sources": [["raw", "DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2019"], ["raw", "DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2021"], ["raw", "DIM_IDEB_ESTADUAL_ANOS_FINAIS_2019"], ["raw", "DIM_IDEB_ESTADUAL_ANOS_FINAIS_2021"], ["raw", "DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2019"], ["raw", "DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2021"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2019", "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2021", "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_FINAIS_2019", "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_FINAIS_2021", "source.exp.raw.DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2019", "source.exp.raw.DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2021"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_ideb_estadual\\dim_ideb_estadual.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\ndict_columns_replace = {\r\n    \"Acre\": 12,\r\n    \"Alagoas\": 27,\r\n    \"Amap\u00e1\": 16,\r\n    \"Amazonas\": 13,\r\n    \"Bahia\": 29,\r\n    \"Cear\u00e1\": 23,\r\n    \"Distrito Federal\": 53,\r\n    \"Esp\u00edrito Santo\": 32,\r\n    \"Goi\u00e1s\": 52,\r\n    \"M. G. do Sul\": 21,\r\n    \"Maranh\u00e3o\": 51,\r\n    \"Mato Grosso\": 50,\r\n    \"Minas Gerais\": 31,\r\n    \"Par\u00e1\": 15,\r\n    \"Para\u00edba\": 25,\r\n    \"Paran\u00e1\": 41,\r\n    \"Pernambuco\": 26,\r\n    \"Piau\u00ed\": 22,\r\n    \"R. G. do Norte\": 24,\r\n    \"R. G. do Sul\": 43,\r\n    \"Rio de Janeiro\": 33,\r\n    \"Rond\u00f4nia\": 11,\r\n    \"Roraima\": 14,\r\n    \"Santa Catarina\": 42,\r\n    \"S\u00e3o Paulo\": 35,\r\n    \"Sergipe\": 28,\r\n    \"Tocantins\": 17,\r\n}\r\n\r\n# fmt: off\r\ndef transform_ideb_2019(df_init, origem):\r\n    return (df_init\r\n     .reindex(['REDE','REGIAO','IDEB_2015_N_X_P','IDEB_2017_N_X_P', 'IDEB_2019_N_X_P'],axis=1)\r\n     .query(\"['Sudeste','Norte','Centro-Oeste','Nordeste','Sul'] not in REGIAO\")\r\n     .query(\"['Total (3)(4)','Total (4)'] not in REDE\")\r\n     .assign(REDE=lambda x:x['REDE'].replace({'P\u00fablica (4)':'P\u00fablica', 'Privada (2)':'Privada'}))\r\n     .assign(CO_UF=lambda x:x['REGIAO'].replace(dict_columns_replace))\r\n     .drop(columns=['REGIAO'])\r\n     .rename(columns=lambda x: x.replace('IDEB_', ''))\r\n     .rename(columns=lambda x: x.replace('_N_X_P', ''))\r\n     .melt(id_vars=['CO_UF','REDE'], var_name='ANO', value_name='IDEB')\r\n     .pivot_table(\r\n        index=[\"CO_UF\",\"ANO\"],\r\n        columns=[\"REDE\"],\r\n        values=[\"IDEB\"],\r\n        aggfunc=sum)\r\n     .reset_index(col_level=1)\r\n     .droplevel(level=0, axis=1)\r\n     .assign(origem=origem)\r\n     .rename(columns=lambda x:x.upper())\r\n     .rename(columns={'CO_UF': 'FK_ESTADO_CODIGO','P\u00daBLICA':'PUBLICA'})\r\n    )\r\n\r\ndef transform_ideb_2021(df_init, origem):\r\n    return (df_init\r\n         .reindex(['REDE','REGIAO','VL_OBSERVADO_2021'],axis=1)\r\n         .query(\"['Sudeste','Norte','Centro-Oeste','Nordeste','Sul'] not in REGIAO\")\r\n         .query(\"['Total (3)(4)','Total (4)','Total'] not in REDE\")\r\n         .assign(REDE=lambda x:x['REDE'].replace({'P\u00fablica (4)':'P\u00fablica', 'Privada (2)':'Privada'}))\r\n         .assign(CO_UF=lambda x:x['REGIAO'].replace(dict_columns_replace))\r\n         .drop(columns=['REGIAO'])\r\n         .rename(columns=lambda x: x.replace('VL_OBSERVADO_', ''))\r\n         .melt(id_vars=['CO_UF','REDE'], var_name='ANO', value_name='IDEB')\r\n         .pivot_table(\r\n            index=[\"CO_UF\",\"ANO\"],\r\n            columns=[\"REDE\"],\r\n            values=[\"IDEB\"],\r\n            aggfunc=sum)\r\n         .reset_index(col_level=1)\r\n         .droplevel(level=0, axis=1)\r\n         .assign(origem=origem)\r\n         .rename(columns=lambda x:x.upper())\r\n         .rename(columns={'CO_UF': 'FK_ESTADO_CODIGO','P\u00daBLICA':'PUBLICA'})\r\n        )\r\n\r\n\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_ideb_estadual_anos_iniciais_2019 = dbt.source(\"raw\",\"DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2019\")\r\n    df_dim_ideb_estadual_anos_iniciais_2021 = dbt.source(\"raw\",\"DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2021\")\r\n\r\n    df_dim_ideb_estadual_anos_finais_2019 = dbt.source(\"raw\",\"DIM_IDEB_ESTADUAL_ANOS_FINAIS_2019\")\r\n    df_dim_ideb_estadual_anos_finais_2021 = dbt.source(\"raw\",\"DIM_IDEB_ESTADUAL_ANOS_FINAIS_2021\")\r\n\r\n    df_dim_ideb_estadual_ensino_medio_2019 = dbt.source(\"raw\",\"DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2019\")\r\n    df_dim_ideb_estadual_ensino_medio_2021 = dbt.source(\"raw\",\"DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2021\")\r\n\r\n    df_ideb_estadual = (pd\r\n           .concat([\r\n               transform_ideb_2019(df_dim_ideb_estadual_anos_iniciais_2019,'anos_iniciais'),\r\n               transform_ideb_2021(df_dim_ideb_estadual_anos_iniciais_2021,'anos_iniciais'),\r\n               transform_ideb_2019(df_dim_ideb_estadual_anos_finais_2019,'anos_finais'),\r\n               transform_ideb_2021(df_dim_ideb_estadual_anos_finais_2021,'anos_finais'),\r\n               transform_ideb_2019(df_dim_ideb_estadual_ensino_medio_2019,'ensino_medio'),\r\n               transform_ideb_2021(df_dim_ideb_estadual_ensino_medio_2021,'ensino_medio')\r\n                   ])\r\n           .reset_index(drop=True)\r\n           .reindex(['ANO', 'FK_ESTADO_CODIGO', 'ORIGEM', 'ESTADUAL', 'PRIVADA', 'PUBLICA'], axis=1)\r\n           .sort_values(by=['ANO', 'ORIGEM', 'FK_ESTADO_CODIGO'])\r\n           .astype({col: 'uint8' for col in ['FK_ESTADO_CODIGO']})\r\n          )\r\n    return df_ideb_estadual\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {\"raw.DIM_IDEB_ESTADUAL_ANOS_FINAIS_2019\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_IDEB_ESTADUAL_ANOS_FINAIS_2019\\\"\", \"raw.DIM_IDEB_ESTADUAL_ANOS_FINAIS_2021\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_IDEB_ESTADUAL_ANOS_FINAIS_2021\\\"\", \"raw.DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2019\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2019\\\"\", \"raw.DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2021\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2021\\\"\", \"raw.DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2019\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2019\\\"\", \"raw.DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2021\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2021\\\"\"}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_staging\"\n    identifier = \"dim_ideb_estadual\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_staging\".\"dim_ideb_estadual\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_ideb_municipal": {"database": "postgres", "schema": "dbt_staging", "name": "dim_ideb_municipal", "resource_type": "model", "package_name": "exp", "path": "dim_ideb_municipal\\dim_ideb_municipal.py", "original_file_path": "models\\dim_ideb_municipal\\dim_ideb_municipal.py", "unique_id": "model.exp.dim_ideb_municipal", "fqn": ["exp", "dim_ideb_municipal", "dim_ideb_municipal"], "alias": "dim_ideb_municipal", "checksum": {"name": "sha256", "checksum": "e47b46aea7814e221c2cd65ed6be3d135760d0dacd7dfad65a8aacdf8d0cc9d6"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "\u00cdndice de Desenvolvimento da Educa\u00e7\u00e3o B\u00e1sica (IDEB). Origem-Instituto Nacional de Estudos e Pesquisas Educacionais An\u00edsio Teixeira.", "columns": {"ANO": {"name": "ANO", "description": "Ano da avalia\u00e7\u00e3o", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do munic\u00edpio", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "ORIGEM": {"name": "ORIGEM", "description": "Refer\u00eancia da s\u00e9rie avaliada", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STRING"}, "MUNICIPAL": {"name": "MUNICIPAL", "description": "Nota do IDEB para a rede municipal p\u00fablica", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}, "ESTADUAL": {"name": "ESTADUAL", "description": "Nota do IDEB para a rede estadual p\u00fablica", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}, "FEDERAL": {"name": "FEDERAL", "description": "Nota do IDEB para a rede federal p\u00fablica", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}, "PUBLICA": {"name": "PUBLICA", "description": "Nota do IDEB para a rede p\u00fablica", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.5473952, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_ideb_municipal\"", "raw_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef transform_ideb(df_init, cols_years, origem):\r\n    return (\r\n        df_init[[\"CO_MUNICIPIO\", \"REDE\"] + cols_years]\r\n        .rename(columns=lambda x: x.replace(\"VL_OBSERVADO_\", \"\"))\r\n        .melt(id_vars=[\"CO_MUNICIPIO\", \"REDE\"],\r\n              var_name=\"ANO\",\r\n              value_name=\"IDEB\")\r\n        .pivot_table(\r\n            index=[\"CO_MUNICIPIO\", \"ANO\"],\r\n            columns=[\"REDE\"],\r\n            values=[\"IDEB\"],\r\n            aggfunc=sum)\r\n        .reset_index(col_level=1)\r\n        .droplevel(level=0, axis=1)\r\n        .assign(origem=origem)\r\n        .rename(columns=lambda x: x.upper())\r\n        .rename(columns={\"CO_MUNICIPIO\": \"FK_MUNICIPIO_CODIGO\",\r\n                         \"P\u00daBLICA\": \"PUBLICA\"})\r\n    )\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_ideb_anos_iniciais_2019 = dbt.source(\"raw\",\"DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2019\")\r\n    df_dim_ideb_anos_iniciais_2021 = dbt.source(\"raw\",\"DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2021\")\r\n\r\n    df_dim_ideb_anos_finais_2019 = dbt.source(\"raw\",\"DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2019\")\r\n    df_dim_ideb_anos_finais_2021 = dbt.source(\"raw\",\"DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2021\")\r\n\r\n    df_dim_ideb_ensino_medio_2019 = dbt.source(\"raw\",\"DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2019\")\r\n    df_dim_ideb_ensino_medio_2021 = dbt.source(\"raw\",\"DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2021\")\r\n\r\n    df_ideb = (pd\r\n            .concat([\r\n                transform_ideb(df_dim_ideb_anos_iniciais_2019,\r\n                                [\"VL_OBSERVADO_2015\",\r\n                                 \"VL_OBSERVADO_2017\",\r\n                                 \"VL_OBSERVADO_2019\"],\r\n                                'anos_iniciais'),\r\n                transform_ideb(df_dim_ideb_anos_iniciais_2021,\r\n                                [\"VL_OBSERVADO_2021\"],\r\n                                'anos_iniciais'),\r\n                transform_ideb(df_dim_ideb_anos_finais_2019,\r\n                                [\"VL_OBSERVADO_2015\",\r\n                                 \"VL_OBSERVADO_2017\",\r\n                                 \"VL_OBSERVADO_2019\"],\r\n                                'anos_finais'),\r\n                transform_ideb(df_dim_ideb_anos_finais_2021,\r\n                                [\"VL_OBSERVADO_2021\"],\r\n                                'anos_finais'),\r\n                transform_ideb(df_dim_ideb_ensino_medio_2019,\r\n                                [\"VL_OBSERVADO_2017\",\r\n                                 \"VL_OBSERVADO_2019\"],\r\n                                'ensino_medio'),\r\n                transform_ideb(df_dim_ideb_ensino_medio_2021,\r\n                                [\"VL_OBSERVADO_2021\"],\r\n                                'ensino_medio')\r\n                    ])\r\n            .reset_index(drop=True)\r\n            .reindex(['ANO', 'FK_MUNICIPIO_CODIGO', 'ORIGEM', 'MUNICIPAL',\r\n                      'ESTADUAL', 'FEDERAL', 'PUBLICA'], axis=1)\r\n            .sort_values(by=['ANO', 'ORIGEM', 'FK_MUNICIPIO_CODIGO'])\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO']})\r\n            )\r\n\r\n    return df_ideb", "language": "python", "refs": [], "sources": [["raw", "DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2019"], ["raw", "DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2021"], ["raw", "DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2019"], ["raw", "DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2021"], ["raw", "DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2019"], ["raw", "DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2021"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2019", "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2021", "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2019", "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2021", "source.exp.raw.DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2019", "source.exp.raw.DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2021"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_ideb_municipal\\dim_ideb_municipal.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef transform_ideb(df_init, cols_years, origem):\r\n    return (\r\n        df_init[[\"CO_MUNICIPIO\", \"REDE\"] + cols_years]\r\n        .rename(columns=lambda x: x.replace(\"VL_OBSERVADO_\", \"\"))\r\n        .melt(id_vars=[\"CO_MUNICIPIO\", \"REDE\"],\r\n              var_name=\"ANO\",\r\n              value_name=\"IDEB\")\r\n        .pivot_table(\r\n            index=[\"CO_MUNICIPIO\", \"ANO\"],\r\n            columns=[\"REDE\"],\r\n            values=[\"IDEB\"],\r\n            aggfunc=sum)\r\n        .reset_index(col_level=1)\r\n        .droplevel(level=0, axis=1)\r\n        .assign(origem=origem)\r\n        .rename(columns=lambda x: x.upper())\r\n        .rename(columns={\"CO_MUNICIPIO\": \"FK_MUNICIPIO_CODIGO\",\r\n                         \"P\u00daBLICA\": \"PUBLICA\"})\r\n    )\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_ideb_anos_iniciais_2019 = dbt.source(\"raw\",\"DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2019\")\r\n    df_dim_ideb_anos_iniciais_2021 = dbt.source(\"raw\",\"DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2021\")\r\n\r\n    df_dim_ideb_anos_finais_2019 = dbt.source(\"raw\",\"DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2019\")\r\n    df_dim_ideb_anos_finais_2021 = dbt.source(\"raw\",\"DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2021\")\r\n\r\n    df_dim_ideb_ensino_medio_2019 = dbt.source(\"raw\",\"DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2019\")\r\n    df_dim_ideb_ensino_medio_2021 = dbt.source(\"raw\",\"DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2021\")\r\n\r\n    df_ideb = (pd\r\n            .concat([\r\n                transform_ideb(df_dim_ideb_anos_iniciais_2019,\r\n                                [\"VL_OBSERVADO_2015\",\r\n                                 \"VL_OBSERVADO_2017\",\r\n                                 \"VL_OBSERVADO_2019\"],\r\n                                'anos_iniciais'),\r\n                transform_ideb(df_dim_ideb_anos_iniciais_2021,\r\n                                [\"VL_OBSERVADO_2021\"],\r\n                                'anos_iniciais'),\r\n                transform_ideb(df_dim_ideb_anos_finais_2019,\r\n                                [\"VL_OBSERVADO_2015\",\r\n                                 \"VL_OBSERVADO_2017\",\r\n                                 \"VL_OBSERVADO_2019\"],\r\n                                'anos_finais'),\r\n                transform_ideb(df_dim_ideb_anos_finais_2021,\r\n                                [\"VL_OBSERVADO_2021\"],\r\n                                'anos_finais'),\r\n                transform_ideb(df_dim_ideb_ensino_medio_2019,\r\n                                [\"VL_OBSERVADO_2017\",\r\n                                 \"VL_OBSERVADO_2019\"],\r\n                                'ensino_medio'),\r\n                transform_ideb(df_dim_ideb_ensino_medio_2021,\r\n                                [\"VL_OBSERVADO_2021\"],\r\n                                'ensino_medio')\r\n                    ])\r\n            .reset_index(drop=True)\r\n            .reindex(['ANO', 'FK_MUNICIPIO_CODIGO', 'ORIGEM', 'MUNICIPAL',\r\n                      'ESTADUAL', 'FEDERAL', 'PUBLICA'], axis=1)\r\n            .sort_values(by=['ANO', 'ORIGEM', 'FK_MUNICIPIO_CODIGO'])\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO']})\r\n            )\r\n\r\n    return df_ideb\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {\"raw.DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2019\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2019\\\"\", \"raw.DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2021\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2021\\\"\", \"raw.DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2019\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2019\\\"\", \"raw.DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2021\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2021\\\"\", \"raw.DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2019\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2019\\\"\", \"raw.DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2021\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2021\\\"\"}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_staging\"\n    identifier = \"dim_ideb_municipal\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_staging\".\"dim_ideb_municipal\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_munic_educ": {"database": "postgres", "schema": "dbt_staging", "name": "dim_munic_educ", "resource_type": "model", "package_name": "exp", "path": "dim_munic_educ\\dim_munic_educ.py", "original_file_path": "models\\dim_munic_educ\\dim_munic_educ.py", "unique_id": "model.exp.dim_munic_educ", "fqn": ["exp", "dim_munic_educ", "dim_munic_educ"], "alias": "dim_munic_educ", "checksum": {"name": "sha256", "checksum": "b97a5907a9a0c166f36b467108c3ba7ec825d617c59b72bcf77bcea493217211"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Dados da pesquisa de Informa\u00e7\u00f5es B\u00e1sicas Municipais de 2014, 2018 e 2021", "columns": {"ANO": {"name": "ANO", "description": "Ano da pesquisa", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do munic\u00edpio", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "MEDU16": {"name": "MEDU16", "description": "Plano de Carreira para o Magist\u00e9rio - exist\u00eancia", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "MEDU18": {"name": "MEDU18", "description": "Lei do Plano de Carreira prev\u00ea expressamente o limite de 2/3 (dois ter\u00e7os) da carga hor\u00e1ria para o desempenho das atividades de intera\u00e7\u00e3o com os educandos", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "MEDU21": {"name": "MEDU21", "description": "Plano de Carreira vigente para os profissionais da educa\u00e7\u00e3o n\u00e3o docentes - exist\u00eancia", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "MEDU491": {"name": "MEDU491", "description": "Diretores das escolas da rede municipal de ensino s\u00e3o nomeados por Concurso P\u00fablico (para carreira de diretor escolar constitu\u00edda por cargo p\u00fablico espec\u00edfico de diretor escolar)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "MEDU49211": {"name": "MEDU49211", "description": "Escolha dos diretores das escolas da rede municipal de ensino se d\u00e1 por Livre Nomea\u00e7\u00e3o", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "MEDU492": {"name": "MEDU492", "description": "Diretores das escolas da rede municipal de ensino s\u00e3o nomeados por Elei\u00e7\u00e3o", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "MEDU49214": {"name": "MEDU49214", "description": "Diretores das escolas da rede municipal de ensino s\u00e3o nomeados por Outra Forma", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "MEDU49212": {"name": "MEDU49212", "description": "Diretores das escolas da rede municipal de ensino s\u00e3o nomeados por Elei\u00e7\u00e3o", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "MEDU49213": {"name": "MEDU49213", "description": "Diretores das escolas da rede municipal de ensino s\u00e3o nomeados por Processo Seletivo", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "MEDU117": {"name": "MEDU117", "description": "O \u00f3rg\u00e3o gestor da educa\u00e7\u00e3o est\u00e1 adotando medidas ou a\u00e7\u00f5es para os temas de Forma\u00e7\u00e3o inicial de docentes e forma\u00e7\u00e3o complementar para adequa\u00e7\u00e3o entre forma\u00e7\u00e3o de n\u00edvel superior e as disciplinas que lecionam", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.5563946, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_munic_educ\"", "raw_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_munic_educ_2014 = dbt.source(\"raw\",\"DIM_MUNIC_EDUC_2014\")\r\n    df_dim_munic_educ_2018 = dbt.source(\"raw\",\"DIM_MUNIC_EDUC_2018\")\r\n    df_dim_munic_educ_2021 = dbt.source(\"raw\",\"DIM_MUNIC_EDUC_2021\")\r\n\r\n    cols_2014=[\"A1\",\"A205\", \"A245\", \"A246\", \"A247\", \"A248\",\"A207\", \"A224\", \"A227\", \"A235\"]\r\n    cols_2018=[\"COD_MUNICIPIO\",\"MEDU16\", \"MEDU18\", \"MEDU21\", \"MEDU491\",\r\n               \"MEDU49211\", \"MEDU492\", \"MEDU49214\", \"MEDU49212\", \"MEDU49213\",\r\n               \"MEDU117\",\"MEDU27\", \"MEDU261\", \"MEDU262\", \"MEDU34\", \"MEDU331\", \"MEDU332\", \"MEDU40\", \"MEDU391\", \"MEDU392\", \"MEDU22\", \"MEDU30\", \"MEDU35\", \"MEDU41\"]\r\n    cols_2021=[\"CODMUN\",\"MEDU16\", \"MEDU18\", \"MEDU21\", \"MEDU491\", \"MEDU49211\",\r\n               \"MEDU492\", \"MEDU49214\", \"MEDU49212\", \"MEDU49213\", \"MEDU117\",\"MEDU27\", \"MEDU261\", \"MEDU262\", \"MEDU34\", \"MEDU331\", \"MEDU332\", \"MEDU40\", \"MEDU391\", \"MEDU392\", \"MEDU22\", \"MEDU30\", \"MEDU35\", \"MEDU41\",\"MEDU20A\"]\r\n\r\n    df_munic_educ = (\r\n        pd.concat(\r\n            [(df_dim_munic_educ_2014[cols_2014]\r\n              .rename(columns={'A1':'FK_MUNICIPIO_CODIGO',\r\n                               'A205':'MEDU16',\r\n                               'A245':'MEDU491',\r\n                               'A246':'MEDU49211',\r\n                               'A247':'MEDU492',\r\n                               'A248':'MEDU49214',\r\n                               'A207':'MEDU22',\r\n                               'A224':'MEDU30',\r\n                               'A227':'MEDU35',\r\n                               'A235':'MEDU41'})\r\n              .assign(ANO=2014)),\r\n             (df_dim_munic_educ_2018[cols_2018]\r\n              .rename(columns={'COD_MUNICIPIO':'FK_MUNICIPIO_CODIGO'})\r\n              .assign(ANO=2018)),\r\n             (df_dim_munic_educ_2021[cols_2021]\r\n              .rename(columns={'CODMUN':'FK_MUNICIPIO_CODIGO'})\r\n              .assign(ANO=2021))])\r\n        .sort_values(['ANO','FK_MUNICIPIO_CODIGO'])\r\n        .reindex(['ANO', 'FK_MUNICIPIO_CODIGO', 'MEDU16', 'MEDU18', 'MEDU21',\r\n                'MEDU491', 'MEDU49211', 'MEDU492', 'MEDU49214',\r\n                'MEDU49212', 'MEDU49213', 'MEDU117', 'MEDU27', 'MEDU261',\r\n                'MEDU262', 'MEDU34', 'MEDU331', 'MEDU332', 'MEDU40', 'MEDU391',\r\n                'MEDU392', 'MEDU20A', 'MEDU22', 'MEDU30', 'MEDU35', 'MEDU41'], axis=1)\r\n        )\r\n\r\n    return df_munic_educ", "language": "python", "refs": [], "sources": [["raw", "DIM_MUNIC_EDUC_2014"], ["raw", "DIM_MUNIC_EDUC_2018"], ["raw", "DIM_MUNIC_EDUC_2021"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["source.exp.raw.DIM_MUNIC_EDUC_2014", "source.exp.raw.DIM_MUNIC_EDUC_2018", "source.exp.raw.DIM_MUNIC_EDUC_2021"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_munic_educ\\dim_munic_educ.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_munic_educ_2014 = dbt.source(\"raw\",\"DIM_MUNIC_EDUC_2014\")\r\n    df_dim_munic_educ_2018 = dbt.source(\"raw\",\"DIM_MUNIC_EDUC_2018\")\r\n    df_dim_munic_educ_2021 = dbt.source(\"raw\",\"DIM_MUNIC_EDUC_2021\")\r\n\r\n    cols_2014=[\"A1\",\"A205\", \"A245\", \"A246\", \"A247\", \"A248\",\"A207\", \"A224\", \"A227\", \"A235\"]\r\n    cols_2018=[\"COD_MUNICIPIO\",\"MEDU16\", \"MEDU18\", \"MEDU21\", \"MEDU491\",\r\n               \"MEDU49211\", \"MEDU492\", \"MEDU49214\", \"MEDU49212\", \"MEDU49213\",\r\n               \"MEDU117\",\"MEDU27\", \"MEDU261\", \"MEDU262\", \"MEDU34\", \"MEDU331\", \"MEDU332\", \"MEDU40\", \"MEDU391\", \"MEDU392\", \"MEDU22\", \"MEDU30\", \"MEDU35\", \"MEDU41\"]\r\n    cols_2021=[\"CODMUN\",\"MEDU16\", \"MEDU18\", \"MEDU21\", \"MEDU491\", \"MEDU49211\",\r\n               \"MEDU492\", \"MEDU49214\", \"MEDU49212\", \"MEDU49213\", \"MEDU117\",\"MEDU27\", \"MEDU261\", \"MEDU262\", \"MEDU34\", \"MEDU331\", \"MEDU332\", \"MEDU40\", \"MEDU391\", \"MEDU392\", \"MEDU22\", \"MEDU30\", \"MEDU35\", \"MEDU41\",\"MEDU20A\"]\r\n\r\n    df_munic_educ = (\r\n        pd.concat(\r\n            [(df_dim_munic_educ_2014[cols_2014]\r\n              .rename(columns={'A1':'FK_MUNICIPIO_CODIGO',\r\n                               'A205':'MEDU16',\r\n                               'A245':'MEDU491',\r\n                               'A246':'MEDU49211',\r\n                               'A247':'MEDU492',\r\n                               'A248':'MEDU49214',\r\n                               'A207':'MEDU22',\r\n                               'A224':'MEDU30',\r\n                               'A227':'MEDU35',\r\n                               'A235':'MEDU41'})\r\n              .assign(ANO=2014)),\r\n             (df_dim_munic_educ_2018[cols_2018]\r\n              .rename(columns={'COD_MUNICIPIO':'FK_MUNICIPIO_CODIGO'})\r\n              .assign(ANO=2018)),\r\n             (df_dim_munic_educ_2021[cols_2021]\r\n              .rename(columns={'CODMUN':'FK_MUNICIPIO_CODIGO'})\r\n              .assign(ANO=2021))])\r\n        .sort_values(['ANO','FK_MUNICIPIO_CODIGO'])\r\n        .reindex(['ANO', 'FK_MUNICIPIO_CODIGO', 'MEDU16', 'MEDU18', 'MEDU21',\r\n                'MEDU491', 'MEDU49211', 'MEDU492', 'MEDU49214',\r\n                'MEDU49212', 'MEDU49213', 'MEDU117', 'MEDU27', 'MEDU261',\r\n                'MEDU262', 'MEDU34', 'MEDU331', 'MEDU332', 'MEDU40', 'MEDU391',\r\n                'MEDU392', 'MEDU20A', 'MEDU22', 'MEDU30', 'MEDU35', 'MEDU41'], axis=1)\r\n        )\r\n\r\n    return df_munic_educ\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {\"raw.DIM_MUNIC_EDUC_2014\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_MUNIC_EDUC_2014\\\"\", \"raw.DIM_MUNIC_EDUC_2018\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_MUNIC_EDUC_2018\\\"\", \"raw.DIM_MUNIC_EDUC_2021\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_MUNIC_EDUC_2021\\\"\"}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_staging\"\n    identifier = \"dim_munic_educ\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_staging\".\"dim_munic_educ\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.dim_rais_17": {"database": "postgres", "schema": "dbt_staging", "name": "dim_rais_17", "resource_type": "model", "package_name": "exp", "path": "dim_rais_17\\dim_rais_17.py", "original_file_path": "models\\dim_rais_17\\dim_rais_17.py", "unique_id": "model.exp.dim_rais_17", "fqn": ["exp", "dim_rais_17", "dim_rais_17"], "alias": "dim_rais_17", "checksum": {"name": "sha256", "checksum": "827de7eb4443535c0f436dc760875f660e6559891c8404f07c8cf295231357c3"}, "config": {"enabled": true, "alias": null, "schema": "staging", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging", "materialized": "table"}, "created_at": 1723502084.3933122, "relation_name": "\"postgres\".\"dbt_staging\".\"dim_rais_17\"", "raw_code": "import numpy as np\r\nimport pandas as pd\r\nimport unidecode\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n\r\n    # load\r\n    df_municipios_staging: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_rais_professores_publicos_graduados_2014_2022: pd.DataFrame = dbt.source(\"raw\", \"DIM_RAIS_PROFESSORES_PUBLICOS_GRADUADOS_2014_2022\")\r\n    df_dim_rais_profissionais_graduados_2014_2022: pd.DataFrame = dbt.source(\"raw\", \"DIM_RAIS_PROFISSIONAIS_GRADUADOS_2014_2022\")\r\n\r\n    dict_replace={\r\n        \"AL-OLHO D AGUA DAS FLORES\": \"AL-OLHO D'AGUA DAS FLORES\",\r\n        \"AL-OLHO D AGUA DO CASADO\": \"AL-OLHO D'AGUA DO CASADO\",\r\n        \"AL-OLHO D AGUA GRANDE\": \"AL-OLHO D'AGUA GRANDE\",\r\n        \"AL-TANQUE D ARCA\": \"AL-TANQUE D'ARCA\",\r\n        \"BA-DIAS D AVILA\": \"BA-DIAS D'AVILA\",\r\n        \"BA-MUQUEM DE SAO FRANCISCO\": \"BA-MUQUEM DO SAO FRANCISCO\",\r\n        \"BA-SANTA TERESINHA\": \"BA-SANTA TEREZINHA\",\r\n        \"GO-SAO JOAO D ALIANCA\": \"GO-SAO JOAO D'ALIANCA\",\r\n        \"GO-SITIO D ABADIA\": \"GO-SITIO D'ABADIA\",\r\n        \"MA-OLHO D AGUA DAS CUNHAS\": \"MA-OLHO D'AGUA DAS CUNHAS\",\r\n        \"MG-DONA EUSEBIA\": \"MG-DONA EUZEBIA\",\r\n        \"MG-OLHOS-D AGUA\": \"MG-OLHOS-D'AGUA\",\r\n        \"MG-PASSA-VINTE\": \"MG-PASSA VINTE\",\r\n        \"MG-PINGO-D AGUA\": \"MG-PINGO-D'AGUA\",\r\n        \"MG-SAO THOME DAS LETRAS\": \"MG-SAO TOME DAS LETRAS\",\r\n        \"MT-CONQUISTA D OESTE\": \"MT-CONQUISTA D'OESTE\",\r\n        \"MT-FIGUEIROPOLIS D OESTE\": \"MT-FIGUEIROPOLIS D'OESTE\",\r\n        \"MT-GLORIA D OESTE\": \"MT-GLORIA D'OESTE\",\r\n        \"MT-LAMBARI D OESTE\": \"MT-LAMBARI D'OESTE\",\r\n        \"MT-MIRASSOL D OESTE\": \"MT-MIRASSOL D'OESTE\",\r\n        \"MT-POXOREO\": \"MT-POXOREU\",\r\n        \"MT-SANTO ANTONIO DO LEVERGER\": \"MT-SANTO ANTONIO DE LEVERGER\",\r\n        \"PA-PAU D ARCO\": \"PA-PAU D'ARCO\",\r\n        \"PB-MAE D AGUA\": \"PB-MAE D'AGUA\",\r\n        \"PB-OLHO D AGUA\": \"PB-OLHO D'AGUA\",\r\n        \"PE-BELEM DE SAO FRANCISCO\": \"PE-BELEM DO SAO FRANCISCO\",\r\n        \"PE-LAGOA DO ITAENGA\": \"PE-LAGOA DE ITAENGA\",\r\n        \"PI-BARRA D ALCANTARA\": \"PI-BARRA D'ALCANTARA\",\r\n        \"PI-OLHO D AGUA DO PIAUI\": \"PI-OLHO D'AGUA DO PIAUI\",\r\n        \"PI-PAU D ARCO DO PIAUI\": \"PI-PAU D'ARCO DO PIAUI\",\r\n        \"PR-DIAMANTE D OESTE\": \"PR-DIAMANTE D'OESTE\",\r\n        \"PR-ITAPEJARA D OESTE\": \"PR-ITAPEJARA D'OESTE\",\r\n        \"PR-PEROLA D OESTE\": \"PR-PEROLA D'OESTE\",\r\n        \"PR-RANCHO ALEGRE D OESTE\": \"PR-RANCHO ALEGRE D'OESTE\",\r\n        \"PR-SAO JORGE D OESTE\": \"PR-SAO JORGE D'OESTE\",\r\n        \"RN-AUGUSTO SEVERO\": \"RN-CAMPO GRANDE\",\r\n        \"RN-LAGOA D ANTA\": \"RN-LAGOA D'ANTA\",\r\n        \"RN-OLHO-D AGUA DO BORGES\": \"RN-OLHO D'AGUA DO BORGES\",\r\n        \"RO-ALTA FLORESTA D OESTE\": \"RO-ALTA FLORESTA D'OESTE\",\r\n        \"RO-ALVORADA D OESTE\": \"RO-ALVORADA D'OESTE\",\r\n        \"RO-ESPIGAO D OESTE\": \"RO-ESPIGAO D'OESTE\",\r\n        \"RO-MACHADINHO D OESTE\": \"RO-MACHADINHO D'OESTE\",\r\n        \"RO-NOVA BRASILANDIA D OESTE\": \"RO-NOVA BRASILANDIA D'OESTE\",\r\n        \"RO-SANTA LUZIA D OESTE\": \"RO-SANTA LUZIA D'OESTE\",\r\n        \"RO-SAO FELIPE D OESTE\": \"RO-SAO FELIPE D'OESTE\",\r\n        \"RS - PINTO BANDEIRA\": \"RS-PINTO BANDEIRA\",\r\n        \"RS-SANT ANA DO LIVRAMENTO\": \"RS-SANT'ANA DO LIVRAMENTO\",\r\n        \"SC-GRAO PARA\": \"SC-GRAO-PARA\",\r\n        \"SC-HERVAL D OESTE\": \"SC-HERVAL D'OESTE\",\r\n        \"SE-AMPARO DE SAO FRANCISCO\": \"SE-AMPARO DO SAO FRANCISCO\",\r\n        \"SE-ITAPORANGA D AJUDA\": \"SE-ITAPORANGA D'AJUDA\",\r\n        \"SP-APARECIDA D OESTE\": \"SP-APARECIDA D'OESTE\",\r\n        \"SP-BIRITIBA-MIRIM\": \"SP-BIRITIBA MIRIM\",\r\n        \"SP-ESTRELA D OESTE\": \"SP-ESTRELA D'OESTE\",\r\n        \"SP-FLORINIA\": \"SP-FLORINEA\",\r\n        \"SP-GUARANI D OESTE\": \"SP-GUARANI D'OESTE\",\r\n        \"SP-PALMEIRA D OESTE\": \"SP-PALMEIRA D'OESTE\",\r\n        \"SP-SANTA BARBARA D OESTE\": \"SP-SANTA BARBARA D'OESTE\",\r\n        \"SP-SANTA CLARA D OESTE\": \"SP-SANTA CLARA D'OESTE\",\r\n        \"SP-SANTA RITA D OESTE\": \"SP-SANTA RITA D'OESTE\",\r\n        \"SP-SAO JOAO DO PAU D ALHO\": \"SP-SAO JOAO DO PAU D'ALHO\",\r\n        \"SP-SAO LUIS DO PARAITINGA\": \"SP-SAO LUIZ DO PARAITINGA\",\r\n        \"TO-FORTALEZA DO TABOCAO\": \"TO-TABOCAO\",\r\n        \"TO-PAU D ARCO\": \"TO-PAU D'ARCO\"\r\n    }\r\n\r\n    df_staging_17 = \\\r\n        (df_dim_rais_profissionais_graduados_2014_2022\r\n         .iloc[:, 1:]\r\n         .query('MUNICIPIO!=\"Total\" and MUNICIPIO!=\"{\u00f1 class}\"')\r\n         .melt(id_vars=['MUNICIPIO'],\r\n               value_vars=['2022', '2021', '2020', '2019', '2018', '2017',\r\n                           '2016', '2015', '2014'],\r\n               var_name='ANO',\r\n               value_name='RENDIMENTO_GRADUADOS')\r\n         .assign(RENDIMENTO_GRADUADOS=\r\n                 lambda x: x['RENDIMENTO_GRADUADOS'].str.replace(',', '.').astype(np.float64))\r\n         .merge((df_dim_rais_professores_publicos_graduados_2014_2022\r\n                 .iloc[:, 1:]\r\n                 .query('MUNICIPIO!=\"Total\" and MUNICIPIO!=\"{\u00f1 class}\"')\r\n                 .melt(id_vars=['MUNICIPIO'],\r\n                       value_vars=['2022', '2021', '2020', '2019', '2018',\r\n                                   '2017', '2016', '2015', '2014'],\r\n                       var_name='ANO',\r\n                       value_name='RENDIMENTO_PROF_PUBLICOS_GRADUADOS')\r\n                 .assign(RENDIMENTO_PROF_PUBLICOS_GRADUADOS=\r\n                         lambda x: x['RENDIMENTO_PROF_PUBLICOS_GRADUADOS'].str.replace(',', '.').astype(np.float64))),\r\n                on=['MUNICIPIO', 'ANO'], how='left')\r\n         .rename(columns={\"MUNICIPIO\": 'MUNICIPIO_NOME'})\r\n         .assign(MUNICIPIO_NOME=lambda x: x['MUNICIPIO_NOME'].replace(dict_replace))\r\n         .merge((df_municipios_staging[['MUNICIPIO_CODIGO', 'MUNICIPIO_NOME', 'ESTADO_SIGLA']]\r\n                 .assign(MUNICIPIO_NOME=\r\n                         lambda x: x['ESTADO_SIGLA'] + \"-\" + x['MUNICIPIO_NOME'].str.upper())\r\n                 .reindex(columns=['MUNICIPIO_CODIGO', 'MUNICIPIO_NOME'])\r\n                 .assign(MUNICIPIO_NOME=\r\n                         lambda x: x['MUNICIPIO_NOME'].apply(unidecode.unidecode))),\r\n                on=['MUNICIPIO_NOME'],\r\n                how='left')\r\n         .assign(**{col: lambda x, col=col:\r\n                 x[col].round(2) for col in ['RENDIMENTO_PROF_PUBLICOS_GRADUADOS',\r\n                                             'RENDIMENTO_GRADUADOS']})\r\n         .rename(columns={\"MUNICIPIO_CODIGO\": 'FK_MUNICIPIO_CODIGO'})\r\n         .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                           'RENDIMENTO_PROF_PUBLICOS_GRADUADOS',\r\n                           'RENDIMENTO_GRADUADOS'])\r\n         )\r\n    return df_staging_17", "language": "python", "refs": [{"name": "info_municipios", "package": null, "version": null}], "sources": [["raw", "DIM_RAIS_PROFESSORES_PUBLICOS_GRADUADOS_2014_2022"], ["raw", "DIM_RAIS_PROFISSIONAIS_GRADUADOS_2014_2022"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["source.exp.raw.DIM_RAIS_PROFESSORES_PUBLICOS_GRADUADOS_2014_2022", "source.exp.raw.DIM_RAIS_PROFISSIONAIS_GRADUADOS_2014_2022", "model.exp.info_municipios"]}, "compiled_path": "target\\compiled\\exp\\models\\dim_rais_17\\dim_rais_17.py", "compiled": true, "compiled_code": "import numpy as np\r\nimport pandas as pd\r\nimport unidecode\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n\r\n    # load\r\n    df_municipios_staging: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_rais_professores_publicos_graduados_2014_2022: pd.DataFrame = dbt.source(\"raw\", \"DIM_RAIS_PROFESSORES_PUBLICOS_GRADUADOS_2014_2022\")\r\n    df_dim_rais_profissionais_graduados_2014_2022: pd.DataFrame = dbt.source(\"raw\", \"DIM_RAIS_PROFISSIONAIS_GRADUADOS_2014_2022\")\r\n\r\n    dict_replace={\r\n        \"AL-OLHO D AGUA DAS FLORES\": \"AL-OLHO D'AGUA DAS FLORES\",\r\n        \"AL-OLHO D AGUA DO CASADO\": \"AL-OLHO D'AGUA DO CASADO\",\r\n        \"AL-OLHO D AGUA GRANDE\": \"AL-OLHO D'AGUA GRANDE\",\r\n        \"AL-TANQUE D ARCA\": \"AL-TANQUE D'ARCA\",\r\n        \"BA-DIAS D AVILA\": \"BA-DIAS D'AVILA\",\r\n        \"BA-MUQUEM DE SAO FRANCISCO\": \"BA-MUQUEM DO SAO FRANCISCO\",\r\n        \"BA-SANTA TERESINHA\": \"BA-SANTA TEREZINHA\",\r\n        \"GO-SAO JOAO D ALIANCA\": \"GO-SAO JOAO D'ALIANCA\",\r\n        \"GO-SITIO D ABADIA\": \"GO-SITIO D'ABADIA\",\r\n        \"MA-OLHO D AGUA DAS CUNHAS\": \"MA-OLHO D'AGUA DAS CUNHAS\",\r\n        \"MG-DONA EUSEBIA\": \"MG-DONA EUZEBIA\",\r\n        \"MG-OLHOS-D AGUA\": \"MG-OLHOS-D'AGUA\",\r\n        \"MG-PASSA-VINTE\": \"MG-PASSA VINTE\",\r\n        \"MG-PINGO-D AGUA\": \"MG-PINGO-D'AGUA\",\r\n        \"MG-SAO THOME DAS LETRAS\": \"MG-SAO TOME DAS LETRAS\",\r\n        \"MT-CONQUISTA D OESTE\": \"MT-CONQUISTA D'OESTE\",\r\n        \"MT-FIGUEIROPOLIS D OESTE\": \"MT-FIGUEIROPOLIS D'OESTE\",\r\n        \"MT-GLORIA D OESTE\": \"MT-GLORIA D'OESTE\",\r\n        \"MT-LAMBARI D OESTE\": \"MT-LAMBARI D'OESTE\",\r\n        \"MT-MIRASSOL D OESTE\": \"MT-MIRASSOL D'OESTE\",\r\n        \"MT-POXOREO\": \"MT-POXOREU\",\r\n        \"MT-SANTO ANTONIO DO LEVERGER\": \"MT-SANTO ANTONIO DE LEVERGER\",\r\n        \"PA-PAU D ARCO\": \"PA-PAU D'ARCO\",\r\n        \"PB-MAE D AGUA\": \"PB-MAE D'AGUA\",\r\n        \"PB-OLHO D AGUA\": \"PB-OLHO D'AGUA\",\r\n        \"PE-BELEM DE SAO FRANCISCO\": \"PE-BELEM DO SAO FRANCISCO\",\r\n        \"PE-LAGOA DO ITAENGA\": \"PE-LAGOA DE ITAENGA\",\r\n        \"PI-BARRA D ALCANTARA\": \"PI-BARRA D'ALCANTARA\",\r\n        \"PI-OLHO D AGUA DO PIAUI\": \"PI-OLHO D'AGUA DO PIAUI\",\r\n        \"PI-PAU D ARCO DO PIAUI\": \"PI-PAU D'ARCO DO PIAUI\",\r\n        \"PR-DIAMANTE D OESTE\": \"PR-DIAMANTE D'OESTE\",\r\n        \"PR-ITAPEJARA D OESTE\": \"PR-ITAPEJARA D'OESTE\",\r\n        \"PR-PEROLA D OESTE\": \"PR-PEROLA D'OESTE\",\r\n        \"PR-RANCHO ALEGRE D OESTE\": \"PR-RANCHO ALEGRE D'OESTE\",\r\n        \"PR-SAO JORGE D OESTE\": \"PR-SAO JORGE D'OESTE\",\r\n        \"RN-AUGUSTO SEVERO\": \"RN-CAMPO GRANDE\",\r\n        \"RN-LAGOA D ANTA\": \"RN-LAGOA D'ANTA\",\r\n        \"RN-OLHO-D AGUA DO BORGES\": \"RN-OLHO D'AGUA DO BORGES\",\r\n        \"RO-ALTA FLORESTA D OESTE\": \"RO-ALTA FLORESTA D'OESTE\",\r\n        \"RO-ALVORADA D OESTE\": \"RO-ALVORADA D'OESTE\",\r\n        \"RO-ESPIGAO D OESTE\": \"RO-ESPIGAO D'OESTE\",\r\n        \"RO-MACHADINHO D OESTE\": \"RO-MACHADINHO D'OESTE\",\r\n        \"RO-NOVA BRASILANDIA D OESTE\": \"RO-NOVA BRASILANDIA D'OESTE\",\r\n        \"RO-SANTA LUZIA D OESTE\": \"RO-SANTA LUZIA D'OESTE\",\r\n        \"RO-SAO FELIPE D OESTE\": \"RO-SAO FELIPE D'OESTE\",\r\n        \"RS - PINTO BANDEIRA\": \"RS-PINTO BANDEIRA\",\r\n        \"RS-SANT ANA DO LIVRAMENTO\": \"RS-SANT'ANA DO LIVRAMENTO\",\r\n        \"SC-GRAO PARA\": \"SC-GRAO-PARA\",\r\n        \"SC-HERVAL D OESTE\": \"SC-HERVAL D'OESTE\",\r\n        \"SE-AMPARO DE SAO FRANCISCO\": \"SE-AMPARO DO SAO FRANCISCO\",\r\n        \"SE-ITAPORANGA D AJUDA\": \"SE-ITAPORANGA D'AJUDA\",\r\n        \"SP-APARECIDA D OESTE\": \"SP-APARECIDA D'OESTE\",\r\n        \"SP-BIRITIBA-MIRIM\": \"SP-BIRITIBA MIRIM\",\r\n        \"SP-ESTRELA D OESTE\": \"SP-ESTRELA D'OESTE\",\r\n        \"SP-FLORINIA\": \"SP-FLORINEA\",\r\n        \"SP-GUARANI D OESTE\": \"SP-GUARANI D'OESTE\",\r\n        \"SP-PALMEIRA D OESTE\": \"SP-PALMEIRA D'OESTE\",\r\n        \"SP-SANTA BARBARA D OESTE\": \"SP-SANTA BARBARA D'OESTE\",\r\n        \"SP-SANTA CLARA D OESTE\": \"SP-SANTA CLARA D'OESTE\",\r\n        \"SP-SANTA RITA D OESTE\": \"SP-SANTA RITA D'OESTE\",\r\n        \"SP-SAO JOAO DO PAU D ALHO\": \"SP-SAO JOAO DO PAU D'ALHO\",\r\n        \"SP-SAO LUIS DO PARAITINGA\": \"SP-SAO LUIZ DO PARAITINGA\",\r\n        \"TO-FORTALEZA DO TABOCAO\": \"TO-TABOCAO\",\r\n        \"TO-PAU D ARCO\": \"TO-PAU D'ARCO\"\r\n    }\r\n\r\n    df_staging_17 = \\\r\n        (df_dim_rais_profissionais_graduados_2014_2022\r\n         .iloc[:, 1:]\r\n         .query('MUNICIPIO!=\"Total\" and MUNICIPIO!=\"{\u00f1 class}\"')\r\n         .melt(id_vars=['MUNICIPIO'],\r\n               value_vars=['2022', '2021', '2020', '2019', '2018', '2017',\r\n                           '2016', '2015', '2014'],\r\n               var_name='ANO',\r\n               value_name='RENDIMENTO_GRADUADOS')\r\n         .assign(RENDIMENTO_GRADUADOS=\r\n                 lambda x: x['RENDIMENTO_GRADUADOS'].str.replace(',', '.').astype(np.float64))\r\n         .merge((df_dim_rais_professores_publicos_graduados_2014_2022\r\n                 .iloc[:, 1:]\r\n                 .query('MUNICIPIO!=\"Total\" and MUNICIPIO!=\"{\u00f1 class}\"')\r\n                 .melt(id_vars=['MUNICIPIO'],\r\n                       value_vars=['2022', '2021', '2020', '2019', '2018',\r\n                                   '2017', '2016', '2015', '2014'],\r\n                       var_name='ANO',\r\n                       value_name='RENDIMENTO_PROF_PUBLICOS_GRADUADOS')\r\n                 .assign(RENDIMENTO_PROF_PUBLICOS_GRADUADOS=\r\n                         lambda x: x['RENDIMENTO_PROF_PUBLICOS_GRADUADOS'].str.replace(',', '.').astype(np.float64))),\r\n                on=['MUNICIPIO', 'ANO'], how='left')\r\n         .rename(columns={\"MUNICIPIO\": 'MUNICIPIO_NOME'})\r\n         .assign(MUNICIPIO_NOME=lambda x: x['MUNICIPIO_NOME'].replace(dict_replace))\r\n         .merge((df_municipios_staging[['MUNICIPIO_CODIGO', 'MUNICIPIO_NOME', 'ESTADO_SIGLA']]\r\n                 .assign(MUNICIPIO_NOME=\r\n                         lambda x: x['ESTADO_SIGLA'] + \"-\" + x['MUNICIPIO_NOME'].str.upper())\r\n                 .reindex(columns=['MUNICIPIO_CODIGO', 'MUNICIPIO_NOME'])\r\n                 .assign(MUNICIPIO_NOME=\r\n                         lambda x: x['MUNICIPIO_NOME'].apply(unidecode.unidecode))),\r\n                on=['MUNICIPIO_NOME'],\r\n                how='left')\r\n         .assign(**{col: lambda x, col=col:\r\n                 x[col].round(2) for col in ['RENDIMENTO_PROF_PUBLICOS_GRADUADOS',\r\n                                             'RENDIMENTO_GRADUADOS']})\r\n         .rename(columns={\"MUNICIPIO_CODIGO\": 'FK_MUNICIPIO_CODIGO'})\r\n         .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                           'RENDIMENTO_PROF_PUBLICOS_GRADUADOS',\r\n                           'RENDIMENTO_GRADUADOS'])\r\n         )\r\n    return df_staging_17\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"info_municipios\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"info_municipios\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {\"raw.DIM_RAIS_PROFESSORES_PUBLICOS_GRADUADOS_2014_2022\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_RAIS_PROFESSORES_PUBLICOS_GRADUADOS_2014_2022\\\"\", \"raw.DIM_RAIS_PROFISSIONAIS_GRADUADOS_2014_2022\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_RAIS_PROFISSIONAIS_GRADUADOS_2014_2022\\\"\"}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_staging\"\n    identifier = \"dim_rais_17\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_staging\".\"dim_rais_17\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_um": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_um", "resource_type": "model", "package_name": "exp", "path": "serving\\01-fct_meta_um\\fct_meta_um.py", "original_file_path": "models\\serving\\01-fct_meta_um\\fct_meta_um.py", "unique_id": "model.exp.fct_meta_um", "fqn": ["exp", "serving", "01-fct_meta_um", "fct_meta_um"], "alias": "fct_meta_um", "checksum": {"name": "sha256", "checksum": "c12bdb11b5db7df930b4e792f0b3fd4dd2392ac6d3c868a788bb6aeca891f06f"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Educa\u00e7\u00e3o Infantil-Educa\u00e7\u00e3o Infantil. Universalizar, at\u00e9 2016, a educa\u00e7\u00e3o infantil na pr\u00e9-escola para as crian\u00e7as de 4 (quatro) a 5 (cinco) anos de idade e ampliar a oferta de educa\u00e7\u00e3o infantil em creches de forma a atender, no m\u00ednimo, 50% (cinquenta por cento) das crian\u00e7as de at\u00e9 3 (tr\u00eas) anos at\u00e9 o final da vig\u00eancia deste PNE.", "columns": {"ANO": {"name": "ANO", "description": "Ano do registro.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_ESTADO_CODIGO": {"name": "FK_ESTADO_CODIGO", "description": "C\u00f3digo do Estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do Munic\u00edpio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "INDICADOR": {"name": "INDICADOR", "description": "Define a qual indicador o registro pertence. 1A expressa o percentual da popula\u00e7\u00e3o de 4 a 5 anos de idade na escola em rela\u00e7\u00e3o \u00e0 popula\u00e7\u00e3o total dessa faixa et\u00e1ria. 1B expressa o percentual da popula\u00e7\u00e3o de 0 a 3 anos de idade que frequenta a escola em rela\u00e7\u00e3o \u00e0 popula\u00e7\u00e3o total dessa faixa et\u00e1ria.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "QT_MAT_IND": {"name": "QT_MAT_IND", "description": "Quantidade de matr\u00edculas da faixa.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "POP_ESTIMADA_IND_ORIGINAL": {"name": "POP_ESTIMADA_IND_ORIGINAL", "description": "Popula\u00e7\u00e3o estimada para aquela faixa em determinado ano.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "POP_ESTIMADA_IND_AJUSTADA": {"name": "POP_ESTIMADA_IND_AJUSTADA", "description": "Popula\u00e7\u00e3o estimada para aquela faixa em determinado ano.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FLAG_SUBESTIMADA": {"name": "FLAG_SUBESTIMADA", "description": "Flag para indicar se a popula\u00e7\u00e3o estimada foi subestimada.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FLAG_MUNIC_NOVO": {"name": "FLAG_MUNIC_NOVO", "description": "Flag para indicar se o munic\u00edpio \u00e9 novo e por isso se p\u00f4de estimar o volume populacional da faixa et\u00e1ria.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "ATENDIMENTO_IND": {"name": "ATENDIMENTO_IND", "description": "Atendimento do Indicador.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\serving\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.679944, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_um\"", "raw_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    df_matriculas_raw: pd.DataFrame = dbt.ref(\"dim_matricula_faixa_idade\")\r\n    df_pop_raw: pd.DataFrame = dbt.ref(\"fct_projecao_populacional\")\r\n\r\n    df_matriculas = \\\r\n        (df_matriculas_raw\r\n         .reindex(['ANO','FK_MUNICIPIO_CODIGO','QT_MAT_0_3', 'QT_MAT_4_5'],\r\n                  axis=1)\r\n         .rename(columns={'QT_MAT_0_3':'1B', 'QT_MAT_4_5':'1A'})\r\n         .melt(\r\n             id_vars=['ANO','FK_MUNICIPIO_CODIGO'],\r\n             value_vars=['1B','1A'],\r\n             var_name=['INDICADOR'],\r\n             value_name='QT_MAT_IND')\r\n         )\r\n    df_pop = (df_pop_raw\r\n              .query(\"FK_FAIXAS_ETARIAS_ID in [1, 2]\")\r\n              .rename(columns={'FK_FAIXAS_ETARIAS_ID':'INDICADOR','QUANTIDADE_ESTIMADA':'POP_ESTIMADA_IND'})\r\n              .assign(INDICADOR=lambda x:x['INDICADOR'].replace({1:'1B',2:'1A'}))\r\n              )\r\n\r\n    df_meta = (df_pop\r\n               .merge(df_matriculas,\r\n            left_on = ['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'],\r\n            right_on = ['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'],\r\n            how='left')\r\n    .astype({'POP_ESTIMADA_IND':'Int64', 'QT_MAT_IND':'Int64'})\r\n    .assign(POP_ESTIMADA_IND_ORIGINAL=lambda x:x['POP_ESTIMADA_IND'])\r\n    .rename(columns={'POP_ESTIMADA_IND': 'POP_ESTIMADA_IND_AJUSTADA'})\r\n    .assign(FLAG_SUBESTIMADA=1)\r\n    .assign(FLAG_SUBESTIMADA=lambda x:x['FLAG_SUBESTIMADA'].where((x['POP_ESTIMADA_IND_ORIGINAL']>0) &\r\n                       (x['POP_ESTIMADA_IND_ORIGINAL']<x['QT_MAT_IND']) &\r\n                       (x['QT_MAT_IND']>0),\r\n                       0))\r\n    .assign(FLAG_MUNIC_NOVO=1)\r\n    .assign(FLAG_MUNIC_NOVO=lambda x:x['FLAG_MUNIC_NOVO'].where(x['POP_ESTIMADA_IND_ORIGINAL']==0,0))\r\n    .assign(POP_ESTIMADA_IND_AJUSTADA=lambda x:x['QT_MAT_IND'].where(\r\n        (x['FLAG_MUNIC_NOVO']==1) | (x['FLAG_SUBESTIMADA']==1),\r\n        x['POP_ESTIMADA_IND_ORIGINAL']))\r\n    .assign(PP_ATENDIMENTO_IND=\\\r\n        lambda x:round(x['QT_MAT_IND']/x['POP_ESTIMADA_IND_AJUSTADA']*100,2))\r\n    .reindex(columns=['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                      'INDICADOR','QT_MAT_IND', 'POP_ESTIMADA_IND_ORIGINAL',\r\n                      'POP_ESTIMADA_IND_AJUSTADA', 'FLAG_SUBESTIMADA',\r\n                      'FLAG_MUNIC_NOVO', 'PP_ATENDIMENTO_IND']\r\n             )\r\n    )\r\n    return df_meta", "language": "python", "refs": [{"name": "dim_matricula_faixa_idade", "package": null, "version": null}, {"name": "fct_projecao_populacional", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["model.exp.dim_matricula_faixa_idade", "model.exp.fct_projecao_populacional"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\01-fct_meta_um\\fct_meta_um.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    df_matriculas_raw: pd.DataFrame = dbt.ref(\"dim_matricula_faixa_idade\")\r\n    df_pop_raw: pd.DataFrame = dbt.ref(\"fct_projecao_populacional\")\r\n\r\n    df_matriculas = \\\r\n        (df_matriculas_raw\r\n         .reindex(['ANO','FK_MUNICIPIO_CODIGO','QT_MAT_0_3', 'QT_MAT_4_5'],\r\n                  axis=1)\r\n         .rename(columns={'QT_MAT_0_3':'1B', 'QT_MAT_4_5':'1A'})\r\n         .melt(\r\n             id_vars=['ANO','FK_MUNICIPIO_CODIGO'],\r\n             value_vars=['1B','1A'],\r\n             var_name=['INDICADOR'],\r\n             value_name='QT_MAT_IND')\r\n         )\r\n    df_pop = (df_pop_raw\r\n              .query(\"FK_FAIXAS_ETARIAS_ID in [1, 2]\")\r\n              .rename(columns={'FK_FAIXAS_ETARIAS_ID':'INDICADOR','QUANTIDADE_ESTIMADA':'POP_ESTIMADA_IND'})\r\n              .assign(INDICADOR=lambda x:x['INDICADOR'].replace({1:'1B',2:'1A'}))\r\n              )\r\n\r\n    df_meta = (df_pop\r\n               .merge(df_matriculas,\r\n            left_on = ['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'],\r\n            right_on = ['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'],\r\n            how='left')\r\n    .astype({'POP_ESTIMADA_IND':'Int64', 'QT_MAT_IND':'Int64'})\r\n    .assign(POP_ESTIMADA_IND_ORIGINAL=lambda x:x['POP_ESTIMADA_IND'])\r\n    .rename(columns={'POP_ESTIMADA_IND': 'POP_ESTIMADA_IND_AJUSTADA'})\r\n    .assign(FLAG_SUBESTIMADA=1)\r\n    .assign(FLAG_SUBESTIMADA=lambda x:x['FLAG_SUBESTIMADA'].where((x['POP_ESTIMADA_IND_ORIGINAL']>0) &\r\n                       (x['POP_ESTIMADA_IND_ORIGINAL']<x['QT_MAT_IND']) &\r\n                       (x['QT_MAT_IND']>0),\r\n                       0))\r\n    .assign(FLAG_MUNIC_NOVO=1)\r\n    .assign(FLAG_MUNIC_NOVO=lambda x:x['FLAG_MUNIC_NOVO'].where(x['POP_ESTIMADA_IND_ORIGINAL']==0,0))\r\n    .assign(POP_ESTIMADA_IND_AJUSTADA=lambda x:x['QT_MAT_IND'].where(\r\n        (x['FLAG_MUNIC_NOVO']==1) | (x['FLAG_SUBESTIMADA']==1),\r\n        x['POP_ESTIMADA_IND_ORIGINAL']))\r\n    .assign(PP_ATENDIMENTO_IND=\\\r\n        lambda x:round(x['QT_MAT_IND']/x['POP_ESTIMADA_IND_AJUSTADA']*100,2))\r\n    .reindex(columns=['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                      'INDICADOR','QT_MAT_IND', 'POP_ESTIMADA_IND_ORIGINAL',\r\n                      'POP_ESTIMADA_IND_AJUSTADA', 'FLAG_SUBESTIMADA',\r\n                      'FLAG_MUNIC_NOVO', 'PP_ATENDIMENTO_IND']\r\n             )\r\n    )\r\n    return df_meta\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_matricula_faixa_idade\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_matricula_faixa_idade\\\"\", \"fct_projecao_populacional\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"fct_projecao_populacional\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_um\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_um\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_dois": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_dois", "resource_type": "model", "package_name": "exp", "path": "serving\\02-fct_meta_dois\\fct_meta_dois.py", "original_file_path": "models\\serving\\02-fct_meta_dois\\fct_meta_dois.py", "unique_id": "model.exp.fct_meta_dois", "fqn": ["exp", "serving", "02-fct_meta_dois", "fct_meta_dois"], "alias": "fct_meta_dois", "checksum": {"name": "sha256", "checksum": "c58b0a7d46536698d6d61e942bb8fbdaa4d9986fe495e8c031c7cfbcac9e1673"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Ensino Fundamental-Universalizar o ensino fundamental de 9 (nove) anos para toda a popula\u00e7\u00e3o de 6 (seis) a 14 (quatorze) anos e garantir que pelo menos 95% (noventa e cinco por cento) dos alunos concluam essa etapa na idade recomendada, at\u00e9 o \u00faltimo ano de vig\u00eancia deste PNE.", "columns": {"ANO": {"name": "ANO", "description": "Ano do registro.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_ESTADO_CODIGO": {"name": "FK_ESTADO_CODIGO", "description": "C\u00f3digo do Estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do Munic\u00edpio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "INDICADOR": {"name": "INDICADOR", "description": "Define a qual indicador o registro pertence. 2A expressa o percentual da popula\u00e7\u00e3o de 6 a 14 anos de idade que frequenta a escola em rela\u00e7\u00e3o \u00e0 popula\u00e7\u00e3o total dessa faixa et\u00e1ria.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "QT_MAT_IND": {"name": "QT_MAT_IND", "description": "Quantidade de matr\u00edculas da faixa.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "POP_ESTIMADA_IND_ORIGINAL": {"name": "POP_ESTIMADA_IND_ORIGINAL", "description": "Popula\u00e7\u00e3o estimada para aquela faixa em determinado ano.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "POP_ESTIMADA_IND_AJUSTADA": {"name": "POP_ESTIMADA_IND_AJUSTADA", "description": "Popula\u00e7\u00e3o estimada para aquela faixa em determinado ano.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FLAG_SUBESTIMADA": {"name": "FLAG_SUBESTIMADA", "description": "Flag para indicar se a popula\u00e7\u00e3o estimada foi subestimada.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FLAG_MUNIC_NOVO": {"name": "FLAG_MUNIC_NOVO", "description": "Flag para indicar se o munic\u00edpio \u00e9 novo e por isso se p\u00f4de estimar o volume populacional da faixa et\u00e1ria.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "ATENDIMENTO_IND": {"name": "ATENDIMENTO_IND", "description": "Atendimento do Indicador.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\serving\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.6869428, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_dois\"", "raw_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    df_matriculas_raw: pd.DataFrame = dbt.ref(\"dim_matricula_faixa_idade\")\r\n    df_pop_raw: pd.DataFrame = dbt.ref(\"fct_projecao_populacional\")\r\n\r\n    df_matriculas = \\\r\n        (df_matriculas_raw\r\n         .dropna()\r\n         .assign(QT_MAT_IND=lambda x:x['QT_MAT_6_10']+x['QT_MAT_11_14'])\r\n         .reindex(['ANO','FK_MUNICIPIO_CODIGO','QT_MAT_IND'], axis=1)\r\n         .assign(INDICADOR='2A')\r\n         )\r\n    df_pop = (df_pop_raw\r\n                .query(\"FK_FAIXAS_ETARIAS_ID in [3,4]\")\r\n                .rename(columns={'FK_FAIXAS_ETARIAS_ID':'INDICADOR',\r\n                                 'QUANTIDADE_ESTIMADA':'POP_ESTIMADA_IND'})\r\n                .groupby([\"ANO\",\r\n                          \"FK_ESTADO_CODIGO\",\r\n                          \"FK_MUNICIPIO_CODIGO\"])['POP_ESTIMADA_IND'].sum()\r\n                .reset_index()\r\n                .assign(INDICADOR='2A')\r\n              )\r\n\r\n    df_meta = (df_pop\r\n               .merge(df_matriculas,\r\n            left_on = ['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'],\r\n            right_on = ['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'],\r\n            how='left')\r\n    .astype({'POP_ESTIMADA_IND':'Int64', 'QT_MAT_IND':'Int64'})\r\n    .assign(POP_ESTIMADA_IND_ORIGINAL=lambda x:x['POP_ESTIMADA_IND'])\r\n    .rename(columns={'POP_ESTIMADA_IND': 'POP_ESTIMADA_IND_AJUSTADA'})\r\n    .assign(FLAG_SUBESTIMADA=1)\r\n    .assign(FLAG_SUBESTIMADA=lambda x:x['FLAG_SUBESTIMADA'].where((x['POP_ESTIMADA_IND_ORIGINAL']>0) &\r\n                       (x['POP_ESTIMADA_IND_ORIGINAL']<x['QT_MAT_IND']) &\r\n                       (x['QT_MAT_IND']>0),\r\n                       0))\r\n    .assign(FLAG_MUNIC_NOVO=1)\r\n    .assign(FLAG_MUNIC_NOVO=lambda x:x['FLAG_MUNIC_NOVO'].where(x['POP_ESTIMADA_IND_ORIGINAL']==0,0))\r\n    .assign(POP_ESTIMADA_IND_AJUSTADA=lambda x:x['QT_MAT_IND'].where(\r\n        (x['FLAG_MUNIC_NOVO']==1) | (x['FLAG_SUBESTIMADA']==1),\r\n        x['POP_ESTIMADA_IND_ORIGINAL']))\r\n    .assign(PP_ATENDIMENTO_IND=\\\r\n        lambda x:round(x['QT_MAT_IND']/x['POP_ESTIMADA_IND_AJUSTADA']*100,2))\r\n    .reindex(columns=['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                      'INDICADOR','QT_MAT_IND', 'POP_ESTIMADA_IND_ORIGINAL',\r\n                      'POP_ESTIMADA_IND_AJUSTADA', 'FLAG_SUBESTIMADA',\r\n                      'FLAG_MUNIC_NOVO', 'PP_ATENDIMENTO_IND']\r\n             )\r\n    )\r\n    return df_meta", "language": "python", "refs": [{"name": "dim_matricula_faixa_idade", "package": null, "version": null}, {"name": "fct_projecao_populacional", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["model.exp.dim_matricula_faixa_idade", "model.exp.fct_projecao_populacional"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\02-fct_meta_dois\\fct_meta_dois.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    df_matriculas_raw: pd.DataFrame = dbt.ref(\"dim_matricula_faixa_idade\")\r\n    df_pop_raw: pd.DataFrame = dbt.ref(\"fct_projecao_populacional\")\r\n\r\n    df_matriculas = \\\r\n        (df_matriculas_raw\r\n         .dropna()\r\n         .assign(QT_MAT_IND=lambda x:x['QT_MAT_6_10']+x['QT_MAT_11_14'])\r\n         .reindex(['ANO','FK_MUNICIPIO_CODIGO','QT_MAT_IND'], axis=1)\r\n         .assign(INDICADOR='2A')\r\n         )\r\n    df_pop = (df_pop_raw\r\n                .query(\"FK_FAIXAS_ETARIAS_ID in [3,4]\")\r\n                .rename(columns={'FK_FAIXAS_ETARIAS_ID':'INDICADOR',\r\n                                 'QUANTIDADE_ESTIMADA':'POP_ESTIMADA_IND'})\r\n                .groupby([\"ANO\",\r\n                          \"FK_ESTADO_CODIGO\",\r\n                          \"FK_MUNICIPIO_CODIGO\"])['POP_ESTIMADA_IND'].sum()\r\n                .reset_index()\r\n                .assign(INDICADOR='2A')\r\n              )\r\n\r\n    df_meta = (df_pop\r\n               .merge(df_matriculas,\r\n            left_on = ['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'],\r\n            right_on = ['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'],\r\n            how='left')\r\n    .astype({'POP_ESTIMADA_IND':'Int64', 'QT_MAT_IND':'Int64'})\r\n    .assign(POP_ESTIMADA_IND_ORIGINAL=lambda x:x['POP_ESTIMADA_IND'])\r\n    .rename(columns={'POP_ESTIMADA_IND': 'POP_ESTIMADA_IND_AJUSTADA'})\r\n    .assign(FLAG_SUBESTIMADA=1)\r\n    .assign(FLAG_SUBESTIMADA=lambda x:x['FLAG_SUBESTIMADA'].where((x['POP_ESTIMADA_IND_ORIGINAL']>0) &\r\n                       (x['POP_ESTIMADA_IND_ORIGINAL']<x['QT_MAT_IND']) &\r\n                       (x['QT_MAT_IND']>0),\r\n                       0))\r\n    .assign(FLAG_MUNIC_NOVO=1)\r\n    .assign(FLAG_MUNIC_NOVO=lambda x:x['FLAG_MUNIC_NOVO'].where(x['POP_ESTIMADA_IND_ORIGINAL']==0,0))\r\n    .assign(POP_ESTIMADA_IND_AJUSTADA=lambda x:x['QT_MAT_IND'].where(\r\n        (x['FLAG_MUNIC_NOVO']==1) | (x['FLAG_SUBESTIMADA']==1),\r\n        x['POP_ESTIMADA_IND_ORIGINAL']))\r\n    .assign(PP_ATENDIMENTO_IND=\\\r\n        lambda x:round(x['QT_MAT_IND']/x['POP_ESTIMADA_IND_AJUSTADA']*100,2))\r\n    .reindex(columns=['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                      'INDICADOR','QT_MAT_IND', 'POP_ESTIMADA_IND_ORIGINAL',\r\n                      'POP_ESTIMADA_IND_AJUSTADA', 'FLAG_SUBESTIMADA',\r\n                      'FLAG_MUNIC_NOVO', 'PP_ATENDIMENTO_IND']\r\n             )\r\n    )\r\n    return df_meta\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_matricula_faixa_idade\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_matricula_faixa_idade\\\"\", \"fct_projecao_populacional\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"fct_projecao_populacional\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_dois\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_dois\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_tres": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_tres", "resource_type": "model", "package_name": "exp", "path": "serving\\03-fct_meta_tres\\fct_meta_tres.py", "original_file_path": "models\\serving\\03-fct_meta_tres\\fct_meta_tres.py", "unique_id": "model.exp.fct_meta_tres", "fqn": ["exp", "serving", "03-fct_meta_tres", "fct_meta_tres"], "alias": "fct_meta_tres", "checksum": {"name": "sha256", "checksum": "797f6d67eca9aee3ea87e3e36835bfc39c0ca23842c641fe54a2f971b7a95ae1"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Ensino M\u00e9dio-Universalizar, at\u00e9 2016, o atendimento escolar para toda a popula\u00e7\u00e3o de 15 (quinze) a 17 (dezessete) anos e elevar, at\u00e9 o final do per\u00edodo de vig\u00eancia deste PNE, a taxa l\u00edquida de matr\u00edculas no ensino m\u00e9dio para 85% (oitenta e cinco por cento).", "columns": {"ANO": {"name": "ANO", "description": "Ano do registro.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_ESTADO_CODIGO": {"name": "FK_ESTADO_CODIGO", "description": "C\u00f3digo do Estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do Munic\u00edpio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "INDICADOR": {"name": "INDICADOR", "description": "Define a qual indicador o registro pertence. 3A - Percentual da popula\u00e7\u00e3o de 15 a 17 anos que frequenta a escola.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "QT_MAT_IND": {"name": "QT_MAT_IND", "description": "Quantidade de matr\u00edculas da faixa.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "POP_ESTIMADA_IND_ORIGINAL": {"name": "POP_ESTIMADA_IND_ORIGINAL", "description": "Popula\u00e7\u00e3o estimada para aquela faixa em determinado ano.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "POP_ESTIMADA_IND_AJUSTADA": {"name": "POP_ESTIMADA_IND_AJUSTADA", "description": "Popula\u00e7\u00e3o estimada para aquela faixa em determinado ano.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FLAG_SUBESTIMADA": {"name": "FLAG_SUBESTIMADA", "description": "Flag para indicar se a popula\u00e7\u00e3o estimada foi subestimada.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FLAG_MUNIC_NOVO": {"name": "FLAG_MUNIC_NOVO", "description": "Flag para indicar se o munic\u00edpio \u00e9 novo e por isso se p\u00f4de estimar o volume populacional da faixa et\u00e1ria.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "ATENDIMENTO_IND": {"name": "ATENDIMENTO_IND", "description": "Atendimento do Indicador.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\serving\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.6944585, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_tres\"", "raw_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    df_matriculas_raw: pd.DataFrame = dbt.ref(\"dim_matricula_faixa_idade\")\r\n    df_pop_raw: pd.DataFrame = dbt.ref(\"fct_projecao_populacional\")\r\n\r\n    df_matriculas = \\\r\n        (df_matriculas_raw\r\n         .dropna()\r\n         .assign(QT_MAT_IND=lambda x:x['QT_MAT_15_17'])\r\n         .reindex(['ANO','FK_MUNICIPIO_CODIGO','QT_MAT_IND'], axis=1)\r\n         .assign(INDICADOR='3A')\r\n         )\r\n    df_pop = (df_pop_raw\r\n                .query(\"FK_FAIXAS_ETARIAS_ID==5\")\r\n                .rename(columns={'FK_FAIXAS_ETARIAS_ID':'INDICADOR',\r\n                                 'QUANTIDADE_ESTIMADA':'POP_ESTIMADA_IND'})\r\n                .groupby([\"ANO\",\r\n                          \"FK_ESTADO_CODIGO\",\r\n                          \"FK_MUNICIPIO_CODIGO\"])['POP_ESTIMADA_IND'].sum()\r\n                .reset_index()\r\n                .assign(INDICADOR='3A')\r\n              )\r\n\r\n    df_meta = (df_pop\r\n               .merge(df_matriculas,\r\n            left_on = ['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'],\r\n            right_on = ['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'],\r\n            how='left')\r\n    .astype({'POP_ESTIMADA_IND':'Int64', 'QT_MAT_IND':'Int64'})\r\n    .assign(POP_ESTIMADA_IND_ORIGINAL=lambda x:x['POP_ESTIMADA_IND'])\r\n    .rename(columns={'POP_ESTIMADA_IND': 'POP_ESTIMADA_IND_AJUSTADA'})\r\n    .assign(FLAG_SUBESTIMADA=1)\r\n    .assign(FLAG_SUBESTIMADA=lambda x:x['FLAG_SUBESTIMADA'].where((x['POP_ESTIMADA_IND_ORIGINAL']>0) &\r\n                       (x['POP_ESTIMADA_IND_ORIGINAL']<x['QT_MAT_IND']) &\r\n                       (x['QT_MAT_IND']>0),\r\n                       0))\r\n    .assign(FLAG_MUNIC_NOVO=1)\r\n    .assign(FLAG_MUNIC_NOVO=lambda x:x['FLAG_MUNIC_NOVO'].where(x['POP_ESTIMADA_IND_ORIGINAL']==0,0))\r\n    .assign(POP_ESTIMADA_IND_AJUSTADA=lambda x:x['QT_MAT_IND'].where(\r\n        (x['FLAG_MUNIC_NOVO']==1) | (x['FLAG_SUBESTIMADA']==1),\r\n        x['POP_ESTIMADA_IND_ORIGINAL']))\r\n    .assign(PP_ATENDIMENTO_IND=\\\r\n        lambda x:round(x['QT_MAT_IND']/x['POP_ESTIMADA_IND_AJUSTADA']*100,2))\r\n    .reindex(columns=['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                      'INDICADOR','QT_MAT_IND', 'POP_ESTIMADA_IND_ORIGINAL',\r\n                      'POP_ESTIMADA_IND_AJUSTADA', 'FLAG_SUBESTIMADA',\r\n                      'FLAG_MUNIC_NOVO', 'PP_ATENDIMENTO_IND']\r\n             )\r\n    )\r\n    return df_meta", "language": "python", "refs": [{"name": "dim_matricula_faixa_idade", "package": null, "version": null}, {"name": "fct_projecao_populacional", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["model.exp.dim_matricula_faixa_idade", "model.exp.fct_projecao_populacional"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\03-fct_meta_tres\\fct_meta_tres.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    df_matriculas_raw: pd.DataFrame = dbt.ref(\"dim_matricula_faixa_idade\")\r\n    df_pop_raw: pd.DataFrame = dbt.ref(\"fct_projecao_populacional\")\r\n\r\n    df_matriculas = \\\r\n        (df_matriculas_raw\r\n         .dropna()\r\n         .assign(QT_MAT_IND=lambda x:x['QT_MAT_15_17'])\r\n         .reindex(['ANO','FK_MUNICIPIO_CODIGO','QT_MAT_IND'], axis=1)\r\n         .assign(INDICADOR='3A')\r\n         )\r\n    df_pop = (df_pop_raw\r\n                .query(\"FK_FAIXAS_ETARIAS_ID==5\")\r\n                .rename(columns={'FK_FAIXAS_ETARIAS_ID':'INDICADOR',\r\n                                 'QUANTIDADE_ESTIMADA':'POP_ESTIMADA_IND'})\r\n                .groupby([\"ANO\",\r\n                          \"FK_ESTADO_CODIGO\",\r\n                          \"FK_MUNICIPIO_CODIGO\"])['POP_ESTIMADA_IND'].sum()\r\n                .reset_index()\r\n                .assign(INDICADOR='3A')\r\n              )\r\n\r\n    df_meta = (df_pop\r\n               .merge(df_matriculas,\r\n            left_on = ['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'],\r\n            right_on = ['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'],\r\n            how='left')\r\n    .astype({'POP_ESTIMADA_IND':'Int64', 'QT_MAT_IND':'Int64'})\r\n    .assign(POP_ESTIMADA_IND_ORIGINAL=lambda x:x['POP_ESTIMADA_IND'])\r\n    .rename(columns={'POP_ESTIMADA_IND': 'POP_ESTIMADA_IND_AJUSTADA'})\r\n    .assign(FLAG_SUBESTIMADA=1)\r\n    .assign(FLAG_SUBESTIMADA=lambda x:x['FLAG_SUBESTIMADA'].where((x['POP_ESTIMADA_IND_ORIGINAL']>0) &\r\n                       (x['POP_ESTIMADA_IND_ORIGINAL']<x['QT_MAT_IND']) &\r\n                       (x['QT_MAT_IND']>0),\r\n                       0))\r\n    .assign(FLAG_MUNIC_NOVO=1)\r\n    .assign(FLAG_MUNIC_NOVO=lambda x:x['FLAG_MUNIC_NOVO'].where(x['POP_ESTIMADA_IND_ORIGINAL']==0,0))\r\n    .assign(POP_ESTIMADA_IND_AJUSTADA=lambda x:x['QT_MAT_IND'].where(\r\n        (x['FLAG_MUNIC_NOVO']==1) | (x['FLAG_SUBESTIMADA']==1),\r\n        x['POP_ESTIMADA_IND_ORIGINAL']))\r\n    .assign(PP_ATENDIMENTO_IND=\\\r\n        lambda x:round(x['QT_MAT_IND']/x['POP_ESTIMADA_IND_AJUSTADA']*100,2))\r\n    .reindex(columns=['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                      'INDICADOR','QT_MAT_IND', 'POP_ESTIMADA_IND_ORIGINAL',\r\n                      'POP_ESTIMADA_IND_AJUSTADA', 'FLAG_SUBESTIMADA',\r\n                      'FLAG_MUNIC_NOVO', 'PP_ATENDIMENTO_IND']\r\n             )\r\n    )\r\n    return df_meta\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_matricula_faixa_idade\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_matricula_faixa_idade\\\"\", \"fct_projecao_populacional\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"fct_projecao_populacional\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_tres\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_tres\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_quatro": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_quatro", "resource_type": "model", "package_name": "exp", "path": "serving\\04-fct_meta_quatro\\fct_meta_quatro.py", "original_file_path": "models\\serving\\04-fct_meta_quatro\\fct_meta_quatro.py", "unique_id": "model.exp.fct_meta_quatro", "fqn": ["exp", "serving", "04-fct_meta_quatro", "fct_meta_quatro"], "alias": "fct_meta_quatro", "checksum": {"name": "sha256", "checksum": "2ef78ac75ca3e42da9ca1cc02f43f520a0705befa1f2fafcd58470bef8f6c334"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Universalizar, para a popula\u00e7\u00e3o de 4 (quatro) a 17 (dezessete) anos com defici\u00eancia, transtornos globais do desenvolvimento e altas habilidades ou superdota\u00e7\u00e3o, o acesso \u00e0 educa\u00e7\u00e3o b\u00e1sica e ao atendimento educacional especializado, preferencialmente na rede regular de ensino, com a garantia de sistema educacional inclusivo, de salas de recursos multifuncionais, classes, escolas ou servi\u00e7os especializados, p\u00fablicos ou conveniados.", "columns": {"ANO": {"name": "ANO", "description": "Ano do registro.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_ESTADO_CODIGO": {"name": "FK_ESTADO_CODIGO", "description": "C\u00f3digo do Estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do Munic\u00edpio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "INDICADOR": {"name": "INDICADOR", "description": "Define a qual indicador o registro pertence. 4B - Percentual de matr\u00edculas em classes comuns do ensino regular e/ou educa\u00e7\u00e3o de jovens e adultos da educa\u00e7\u00e3o b\u00e1sica de alunos de 4 a 17 anos de idade com defici\u00eancia, transtornos globais do desenvolvimento e altas habilidades ou superdota\u00e7\u00e3o. 4C - Percentual de matr\u00edculas na educa\u00e7\u00e3o b\u00e1sica de alunos de 4 a 17 anos de idade com defici\u00eancia, transtornos globais do desenvolvimento (tgd), altas habilidades ou superdota\u00e7\u00e3o que recebem atendimento educacional especializado.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "MAT_ESPECIAL_TURMA_COMUM": {"name": "MAT_ESPECIAL_TURMA_COMUM", "description": "Matr\u00edculas em classes comuns da educa\u00e7\u00e3o b\u00e1sica de alunos de 4 a 17 anos de idade com defici\u00eancia, transtornos globais do desenvolvimento e altas habilidades ou superdota\u00e7\u00e3o", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "MAT_ESPECIAL_ATENDIMENTO_ESPECIALIZADO": {"name": "MAT_ESPECIAL_ATENDIMENTO_ESPECIALIZADO", "description": "N\u00famero de matr\u00edculas de turmas de escolariza\u00e7\u00e3o em classes especiais ou escolas exclusivas ou cujo aluno est\u00e1 em turma de atendimento educacional especializado, da educa\u00e7\u00e3o b\u00e1sica de alunos de 4 a 17 anos de idade com defici\u00eancia, transtornos globais do desenvolvimento, altas habilidades ou superdota\u00e7\u00e3o", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "MAT_ESPECIAL_TOTAL": {"name": "MAT_ESPECIAL_TOTAL", "description": "Total de matr\u00edculas na educa\u00e7\u00e3o b\u00e1sica de alunos de 4 a 17 anos de idade com defici\u00eancia, transtornos globais do desenvolvimento e altas habilidades ou superdota\u00e7\u00e3o.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "ATENDIMENTO_IND": {"name": "ATENDIMENTO_IND", "description": "Atendimento do Indicador.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\serving\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.6994774, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_quatro\"", "raw_code": "import numpy as np\r\nimport pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_censo_educ_basica_desagregado_matricula_4 = dbt.ref(\"dim_censo_educ_basica_desagregado_matricula_4\")\r\n\r\n    # template\r\n    list_indicador = ['4B', '4C']\r\n\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014,2020+1):\r\n            df_temp = (df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']].copy()\r\n                    .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO', 'ESTADO_CODIGO':'FK_ESTADO_CODIGO'})\r\n                    )\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = pd.concat([df_ano_munic, df_temp]).reset_index(drop=True)\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    # ind b\r\n    df_4b = \\\r\n        (df_dim_censo_educ_basica_desagregado_matricula_4\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                        'IN_NECESSIDADE_ESPECIAL', 'IN_ESPECIAL_EXCLUSIVA',\r\n                        'TP_ETAPA_ENSINO','COUNT_MATRICULA'])\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .drop(columns=['IN_NECESSIDADE_ESPECIAL','TP_ETAPA_ENSINO'])\r\n        .assign(IN_ESPECIAL_EXCLUSIVA=lambda x:\r\n                (x['IN_ESPECIAL_EXCLUSIVA'].replace({0:'MAT_ESPECIAL_TURMA_COMUM',\r\n                                                    1:'MAT_TURMA_ESPECIAL_EXCLUSIVA'})))\r\n        .pivot_table(index=[\"ANO\", \"FK_MUNICIPIO_CODIGO\"],\r\n                    columns=\"IN_ESPECIAL_EXCLUSIVA\",\r\n                    aggfunc=np.sum)\r\n        .reset_index(col_level=1)\r\n        .droplevel(level=0, axis=1)\r\n        .rename_axis(None, axis=1)\r\n        .fillna(0)\r\n        .assign(MAT_ESPECIAL_TOTAL=lambda x:\r\n                x['MAT_ESPECIAL_TURMA_COMUM']+x['MAT_TURMA_ESPECIAL_EXCLUSIVA'])\r\n        .drop(columns=['MAT_TURMA_ESPECIAL_EXCLUSIVA'])\r\n        .assign(ATENDIMENTO_IND=lambda x:(\r\n                round(x['MAT_ESPECIAL_TURMA_COMUM']/x['MAT_ESPECIAL_TOTAL']*100,2)))\r\n        .assign(INDICADOR=list_indicador[0])\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                        'MAT_ESPECIAL_TURMA_COMUM', 'MAT_ESPECIAL_TOTAL',\r\n                        'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind c\r\n    df_4c = \\\r\n        (df_dim_censo_educ_basica_desagregado_matricula_4\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                          'IN_NECESSIDADE_ESPECIAL', 'IN_ESPECIAL_EXCLUSIVA',\r\n                          'TP_ETAPA_ENSINO', 'TP_TIPO_TURMA', 'COUNT_MATRICULA'])\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .rename(columns={'TP_TIPO_TURMA':'TP_TIPO_TURMA_2019_APOS'})\r\n        .assign(TP_TIPO_TURMA_2019_ANTES=lambda x:\r\n                x['TP_TIPO_TURMA_2019_APOS'].replace({5:4}))\r\n        .assign(TP_TIPO_TURMA=lambda x:\r\n                x['TP_TIPO_TURMA_2019_APOS'].where(x['ANO']>=2019,\r\n                                                   x['TP_TIPO_TURMA_2019_ANTES']))\r\n        .drop(columns=['IN_NECESSIDADE_ESPECIAL','TP_ETAPA_ENSINO',\r\n                       'TP_TIPO_TURMA_2019_ANTES','TP_TIPO_TURMA_2019_APOS'])\r\n        .assign(ESPECIAL=1)\r\n        .assign(ESPECIAL = lambda x:\r\n                x['ESPECIAL'].where((x['IN_ESPECIAL_EXCLUSIVA'].isin([1])) |\r\n                                    (x['TP_TIPO_TURMA'].isin([4])), 0))\r\n        .assign(ESPECIAL=lambda x:(\r\n            x['ESPECIAL'].replace({0:'MAT_ESPECIAL_ATENDIMENTO_COMUM',\r\n                                   1:'MAT_ESPECIAL_ATENDIMENTO_ESPECIALIZADO'})))\r\n        .drop(columns=['TP_TIPO_TURMA','IN_ESPECIAL_EXCLUSIVA'])\r\n        .pivot_table(index=[\"ANO\", \"FK_MUNICIPIO_CODIGO\"],\r\n                     columns=\"ESPECIAL\",\r\n                     aggfunc=np.sum)\r\n        .reset_index(col_level=1)\r\n        .droplevel(level=0, axis=1)\r\n        .rename_axis(None, axis=1)\r\n        .fillna(0)\r\n        .assign(MAT_ESPECIAL_TOTAL=lambda x:\r\n                (x['MAT_ESPECIAL_ATENDIMENTO_COMUM']+\r\n                 x['MAT_ESPECIAL_ATENDIMENTO_ESPECIALIZADO']))\r\n        .drop(columns=['MAT_ESPECIAL_ATENDIMENTO_COMUM'])\r\n        .assign(ATENDIMENTO_IND=lambda x:(\r\n                round(x['MAT_ESPECIAL_ATENDIMENTO_ESPECIALIZADO']/\r\n                      x['MAT_ESPECIAL_TOTAL']*100,2)))\r\n        .assign(INDICADOR=list_indicador[1])\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'MAT_ESPECIAL_ATENDIMENTO_ESPECIALIZADO',\r\n                          'MAT_ESPECIAL_TOTAL', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # meta concat\r\n    df_4_raw = pd.concat([df_4b, df_4c]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_4 = \\\r\n        (df_4_raw\r\n            .reset_index(drop=True)\r\n            .merge(\r\n                df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                              'FK_ESTADO_CODIGO']],\r\n                on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n                how='right')\r\n            .fillna(0)\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO',\r\n                      'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                      'MAT_ESPECIAL_TURMA_COMUM',\r\n                      'MAT_ESPECIAL_ATENDIMENTO_ESPECIALIZADO',\r\n                      'MAT_ESPECIAL_TOTAL','ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                            'FK_ESTADO_CODIGO']})\r\n            .astype({'ANO':'uint16'})\r\n            .astype({'ATENDIMENTO_IND':float})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_4", "language": "python", "refs": [{"name": "info_municipios", "package": null, "version": null}, {"name": "dim_censo_educ_basica_desagregado_matricula_4", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["model.exp.info_municipios", "model.exp.dim_censo_educ_basica_desagregado_matricula_4"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\04-fct_meta_quatro\\fct_meta_quatro.py", "compiled": true, "compiled_code": "import numpy as np\r\nimport pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_censo_educ_basica_desagregado_matricula_4 = dbt.ref(\"dim_censo_educ_basica_desagregado_matricula_4\")\r\n\r\n    # template\r\n    list_indicador = ['4B', '4C']\r\n\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014,2020+1):\r\n            df_temp = (df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']].copy()\r\n                    .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO', 'ESTADO_CODIGO':'FK_ESTADO_CODIGO'})\r\n                    )\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = pd.concat([df_ano_munic, df_temp]).reset_index(drop=True)\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    # ind b\r\n    df_4b = \\\r\n        (df_dim_censo_educ_basica_desagregado_matricula_4\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                        'IN_NECESSIDADE_ESPECIAL', 'IN_ESPECIAL_EXCLUSIVA',\r\n                        'TP_ETAPA_ENSINO','COUNT_MATRICULA'])\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .drop(columns=['IN_NECESSIDADE_ESPECIAL','TP_ETAPA_ENSINO'])\r\n        .assign(IN_ESPECIAL_EXCLUSIVA=lambda x:\r\n                (x['IN_ESPECIAL_EXCLUSIVA'].replace({0:'MAT_ESPECIAL_TURMA_COMUM',\r\n                                                    1:'MAT_TURMA_ESPECIAL_EXCLUSIVA'})))\r\n        .pivot_table(index=[\"ANO\", \"FK_MUNICIPIO_CODIGO\"],\r\n                    columns=\"IN_ESPECIAL_EXCLUSIVA\",\r\n                    aggfunc=np.sum)\r\n        .reset_index(col_level=1)\r\n        .droplevel(level=0, axis=1)\r\n        .rename_axis(None, axis=1)\r\n        .fillna(0)\r\n        .assign(MAT_ESPECIAL_TOTAL=lambda x:\r\n                x['MAT_ESPECIAL_TURMA_COMUM']+x['MAT_TURMA_ESPECIAL_EXCLUSIVA'])\r\n        .drop(columns=['MAT_TURMA_ESPECIAL_EXCLUSIVA'])\r\n        .assign(ATENDIMENTO_IND=lambda x:(\r\n                round(x['MAT_ESPECIAL_TURMA_COMUM']/x['MAT_ESPECIAL_TOTAL']*100,2)))\r\n        .assign(INDICADOR=list_indicador[0])\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                        'MAT_ESPECIAL_TURMA_COMUM', 'MAT_ESPECIAL_TOTAL',\r\n                        'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind c\r\n    df_4c = \\\r\n        (df_dim_censo_educ_basica_desagregado_matricula_4\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                          'IN_NECESSIDADE_ESPECIAL', 'IN_ESPECIAL_EXCLUSIVA',\r\n                          'TP_ETAPA_ENSINO', 'TP_TIPO_TURMA', 'COUNT_MATRICULA'])\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .rename(columns={'TP_TIPO_TURMA':'TP_TIPO_TURMA_2019_APOS'})\r\n        .assign(TP_TIPO_TURMA_2019_ANTES=lambda x:\r\n                x['TP_TIPO_TURMA_2019_APOS'].replace({5:4}))\r\n        .assign(TP_TIPO_TURMA=lambda x:\r\n                x['TP_TIPO_TURMA_2019_APOS'].where(x['ANO']>=2019,\r\n                                                   x['TP_TIPO_TURMA_2019_ANTES']))\r\n        .drop(columns=['IN_NECESSIDADE_ESPECIAL','TP_ETAPA_ENSINO',\r\n                       'TP_TIPO_TURMA_2019_ANTES','TP_TIPO_TURMA_2019_APOS'])\r\n        .assign(ESPECIAL=1)\r\n        .assign(ESPECIAL = lambda x:\r\n                x['ESPECIAL'].where((x['IN_ESPECIAL_EXCLUSIVA'].isin([1])) |\r\n                                    (x['TP_TIPO_TURMA'].isin([4])), 0))\r\n        .assign(ESPECIAL=lambda x:(\r\n            x['ESPECIAL'].replace({0:'MAT_ESPECIAL_ATENDIMENTO_COMUM',\r\n                                   1:'MAT_ESPECIAL_ATENDIMENTO_ESPECIALIZADO'})))\r\n        .drop(columns=['TP_TIPO_TURMA','IN_ESPECIAL_EXCLUSIVA'])\r\n        .pivot_table(index=[\"ANO\", \"FK_MUNICIPIO_CODIGO\"],\r\n                     columns=\"ESPECIAL\",\r\n                     aggfunc=np.sum)\r\n        .reset_index(col_level=1)\r\n        .droplevel(level=0, axis=1)\r\n        .rename_axis(None, axis=1)\r\n        .fillna(0)\r\n        .assign(MAT_ESPECIAL_TOTAL=lambda x:\r\n                (x['MAT_ESPECIAL_ATENDIMENTO_COMUM']+\r\n                 x['MAT_ESPECIAL_ATENDIMENTO_ESPECIALIZADO']))\r\n        .drop(columns=['MAT_ESPECIAL_ATENDIMENTO_COMUM'])\r\n        .assign(ATENDIMENTO_IND=lambda x:(\r\n                round(x['MAT_ESPECIAL_ATENDIMENTO_ESPECIALIZADO']/\r\n                      x['MAT_ESPECIAL_TOTAL']*100,2)))\r\n        .assign(INDICADOR=list_indicador[1])\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'MAT_ESPECIAL_ATENDIMENTO_ESPECIALIZADO',\r\n                          'MAT_ESPECIAL_TOTAL', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # meta concat\r\n    df_4_raw = pd.concat([df_4b, df_4c]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_4 = \\\r\n        (df_4_raw\r\n            .reset_index(drop=True)\r\n            .merge(\r\n                df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                              'FK_ESTADO_CODIGO']],\r\n                on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n                how='right')\r\n            .fillna(0)\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO',\r\n                      'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                      'MAT_ESPECIAL_TURMA_COMUM',\r\n                      'MAT_ESPECIAL_ATENDIMENTO_ESPECIALIZADO',\r\n                      'MAT_ESPECIAL_TOTAL','ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                            'FK_ESTADO_CODIGO']})\r\n            .astype({'ANO':'uint16'})\r\n            .astype({'ATENDIMENTO_IND':float})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_4\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_censo_educ_basica_desagregado_matricula_4\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_censo_educ_basica_desagregado_matricula_4\\\"\", \"info_municipios\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"info_municipios\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_quatro\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_quatro\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_seis": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_seis", "resource_type": "model", "package_name": "exp", "path": "serving\\06-fct_meta_seis\\fct_meta_seis.py", "original_file_path": "models\\serving\\06-fct_meta_seis\\fct_meta_seis.py", "unique_id": "model.exp.fct_meta_seis", "fqn": ["exp", "serving", "06-fct_meta_seis", "fct_meta_seis"], "alias": "fct_meta_seis", "checksum": {"name": "sha256", "checksum": "d64f3cf1f53684dc30e037c55da2e52ae86b8d02313356d67ce31fd08874d256"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Educa\u00e7\u00e3o Integral-Oferecer educa\u00e7\u00e3o em tempo integral em, no m\u00ednimo, 50% (cinquenta por cento) das escolas p\u00fablicas, de forma a atender, pelo menos, 25% (vinte e cinco por cento) dos(as) alunos(as) da educa\u00e7\u00e3o b\u00e1sica.", "columns": {"ANO": {"name": "ANO", "description": "Ano do registro.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_ESTADO_CODIGO": {"name": "FK_ESTADO_CODIGO", "description": "C\u00f3digo do Estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do Munic\u00edpio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "INDICADOR": {"name": "INDICADOR", "description": "Define a qual indicador o registro pertence. 6A - Percentual de alunos da educa\u00e7\u00e3o b\u00e1sica p\u00fablica em tempo integral. 6B - Percentual de escolas p\u00fablicas da educa\u00e7\u00e3o b\u00e1sica que possuem, pelo menos, 25% dos alunos do p\u00fablico-alvo da ETI em jornada de tempo integral.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "N_ESCOLAS_ETI": {"name": "N_ESCOLAS_ETI", "description": "N\u00famero de escolas p\u00fablicas com educa\u00e7\u00e3o em tempo integral.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "N_ESCOLAS_TOTAL": {"name": "N_ESCOLAS_TOTAL", "description": "N\u00famero de escolas p\u00fablicas.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "QT_MAT_INT_TOTAL": {"name": "QT_MAT_INT_TOTAL", "description": "Quantidade de matr\u00edculas p\u00fablicas em tempo integral.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "QT_MAT_TOTAL": {"name": "QT_MAT_TOTAL", "description": "Quantidade de matr\u00edculas p\u00fablicas.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "ATENDIMENTO_IND": {"name": "ATENDIMENTO_IND", "description": "Atendimento do Indicador.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\serving\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.705993, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_seis\"", "raw_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    df_matriculas_raw: pd.DataFrame = dbt.ref(\"dim_matricula_6a\")\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_matricula_integral = dbt.source(\"staging\",\r\n                                       \"FCT_ESCOLAS_PUBLICAS_INTEGRAL_6B\")\r\n\r\n    list_indicador = ['6A','6B']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014, 2021+1):\r\n            df_temp = (\r\n                df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']].copy()\r\n                .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                 'ESTADO_CODIGO':'FK_ESTADO_CODIGO'})\r\n                )\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    df_serving_6a = (df_matriculas_raw\r\n        .dropna()\r\n        .assign(QT_MAT_INT_TOTAL=lambda x: (\r\n            x['QT_MAT_INF_INT'] +\r\n            x['QT_MAT_FUND_INT'] +\r\n            x['QT_MAT_MED_INT']))\r\n        .assign(QT_MAT_TOTAL=lambda x: (\r\n            x['QT_MAT_INF'] +\r\n            x['QT_MAT_FUND'] +\r\n            x['QT_MAT_MED']))\r\n        .assign(ATENDIMENTO_IND=lambda x:(\r\n            round(x['QT_MAT_INT_TOTAL']/x['QT_MAT_TOTAL']*100,2)))\r\n        .pipe(lambda x:x.merge(df_ano_munic,\r\n                               on=['ANO', 'FK_MUNICIPIO_CODIGO'],\r\n                               how='right'))\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                          'INDICADOR','QT_MAT_INT_TOTAL', 'QT_MAT_TOTAL',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    df_serving_6b = (df_matricula_integral\r\n        .query(\"ETI_1_QT>0\")  # Remove entidades sem alunos em regime ETI\r\n        .assign(ETI_percent=lambda x: (x.ETI_1_QT / (x.ETI_0_QT + x.ETI_1_QT)))\r\n        .assign(ETI_goal=1)\r\n        .assign(\r\n            ETI_goal=lambda x: x.ETI_goal.where((x.ETI_percent > 0.25), 0)\r\n        )  # Atinge, entidade com m\u00ednimo de 25% dos alunos em ETI\r\n        .groupby([\"ANO\", \"FK_MUNICIPIO_ID\"])[\"ETI_goal\"]\r\n        .value_counts()\r\n        .unstack()\r\n        .rename({0: \"N_ESCOLAS_ETI_NAO_ATINGIDO\", 1: \"N_ESCOLAS_ETI\"}, axis=1)\r\n        .reset_index()\r\n        .fillna(0)\r\n        .assign(N_ESCOLAS_TOTAL=lambda x:\r\n            (x.N_ESCOLAS_ETI + x.N_ESCOLAS_ETI_NAO_ATINGIDO))\r\n        .drop(columns=[\"N_ESCOLAS_ETI_NAO_ATINGIDO\"], axis=1)\r\n        .assign(\r\n            ATENDIMENTO_IND=lambda x: round(\r\n                (x.N_ESCOLAS_ETI / (x.N_ESCOLAS_TOTAL))*100, 2),\r\n            INDICADOR='6B'\r\n        )\r\n        .rename({'FK_MUNICIPIO_ID':'FK_MUNICIPIO_CODIGO' }, axis=1)\r\n        .reindex(columns=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO',\r\n                          'N_ESCOLAS_ETI', 'N_ESCOLAS_TOTAL',\r\n                          'QT_MAT_INT_TOTAL', 'QT_MAT_TOTAL',\r\n                          'ATENDIMENTO_IND'])\r\n    )\r\n\r\n    df_serving_6_raw = (pd.concat([df_serving_6a, df_serving_6b])\r\n                        .reset_index(drop=True))\r\n\r\n    df_serving_6 = (pd\r\n            .merge(df_serving_6_raw,\r\n                   df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                                 'FK_ESTADO_CODIGO', 'INDICADOR']],\r\n            on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n            how='right')\r\n            .reindex(columns=['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                              'INDICADOR', 'N_ESCOLAS_ETI', 'N_ESCOLAS_TOTAL',\r\n                              'QT_MAT_INT_TOTAL', 'QT_MAT_TOTAL',\r\n                              'ATENDIMENTO_IND'])\r\n    )\r\n    return df_serving_6", "language": "python", "refs": [{"name": "dim_matricula_6a", "package": null, "version": null}, {"name": "info_municipios", "package": null, "version": null}], "sources": [["staging", "FCT_ESCOLAS_PUBLICAS_INTEGRAL_6B"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["source.exp.staging.FCT_ESCOLAS_PUBLICAS_INTEGRAL_6B", "model.exp.dim_matricula_6a", "model.exp.info_municipios"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\06-fct_meta_seis\\fct_meta_seis.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    df_matriculas_raw: pd.DataFrame = dbt.ref(\"dim_matricula_6a\")\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_matricula_integral = dbt.source(\"staging\",\r\n                                       \"FCT_ESCOLAS_PUBLICAS_INTEGRAL_6B\")\r\n\r\n    list_indicador = ['6A','6B']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014, 2021+1):\r\n            df_temp = (\r\n                df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']].copy()\r\n                .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                 'ESTADO_CODIGO':'FK_ESTADO_CODIGO'})\r\n                )\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    df_serving_6a = (df_matriculas_raw\r\n        .dropna()\r\n        .assign(QT_MAT_INT_TOTAL=lambda x: (\r\n            x['QT_MAT_INF_INT'] +\r\n            x['QT_MAT_FUND_INT'] +\r\n            x['QT_MAT_MED_INT']))\r\n        .assign(QT_MAT_TOTAL=lambda x: (\r\n            x['QT_MAT_INF'] +\r\n            x['QT_MAT_FUND'] +\r\n            x['QT_MAT_MED']))\r\n        .assign(ATENDIMENTO_IND=lambda x:(\r\n            round(x['QT_MAT_INT_TOTAL']/x['QT_MAT_TOTAL']*100,2)))\r\n        .pipe(lambda x:x.merge(df_ano_munic,\r\n                               on=['ANO', 'FK_MUNICIPIO_CODIGO'],\r\n                               how='right'))\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                          'INDICADOR','QT_MAT_INT_TOTAL', 'QT_MAT_TOTAL',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    df_serving_6b = (df_matricula_integral\r\n        .query(\"ETI_1_QT>0\")  # Remove entidades sem alunos em regime ETI\r\n        .assign(ETI_percent=lambda x: (x.ETI_1_QT / (x.ETI_0_QT + x.ETI_1_QT)))\r\n        .assign(ETI_goal=1)\r\n        .assign(\r\n            ETI_goal=lambda x: x.ETI_goal.where((x.ETI_percent > 0.25), 0)\r\n        )  # Atinge, entidade com m\u00ednimo de 25% dos alunos em ETI\r\n        .groupby([\"ANO\", \"FK_MUNICIPIO_ID\"])[\"ETI_goal\"]\r\n        .value_counts()\r\n        .unstack()\r\n        .rename({0: \"N_ESCOLAS_ETI_NAO_ATINGIDO\", 1: \"N_ESCOLAS_ETI\"}, axis=1)\r\n        .reset_index()\r\n        .fillna(0)\r\n        .assign(N_ESCOLAS_TOTAL=lambda x:\r\n            (x.N_ESCOLAS_ETI + x.N_ESCOLAS_ETI_NAO_ATINGIDO))\r\n        .drop(columns=[\"N_ESCOLAS_ETI_NAO_ATINGIDO\"], axis=1)\r\n        .assign(\r\n            ATENDIMENTO_IND=lambda x: round(\r\n                (x.N_ESCOLAS_ETI / (x.N_ESCOLAS_TOTAL))*100, 2),\r\n            INDICADOR='6B'\r\n        )\r\n        .rename({'FK_MUNICIPIO_ID':'FK_MUNICIPIO_CODIGO' }, axis=1)\r\n        .reindex(columns=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO',\r\n                          'N_ESCOLAS_ETI', 'N_ESCOLAS_TOTAL',\r\n                          'QT_MAT_INT_TOTAL', 'QT_MAT_TOTAL',\r\n                          'ATENDIMENTO_IND'])\r\n    )\r\n\r\n    df_serving_6_raw = (pd.concat([df_serving_6a, df_serving_6b])\r\n                        .reset_index(drop=True))\r\n\r\n    df_serving_6 = (pd\r\n            .merge(df_serving_6_raw,\r\n                   df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                                 'FK_ESTADO_CODIGO', 'INDICADOR']],\r\n            on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n            how='right')\r\n            .reindex(columns=['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                              'INDICADOR', 'N_ESCOLAS_ETI', 'N_ESCOLAS_TOTAL',\r\n                              'QT_MAT_INT_TOTAL', 'QT_MAT_TOTAL',\r\n                              'ATENDIMENTO_IND'])\r\n    )\r\n    return df_serving_6\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_matricula_6a\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_matricula_6a\\\"\", \"info_municipios\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"info_municipios\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {\"staging.FCT_ESCOLAS_PUBLICAS_INTEGRAL_6B\": \"\\\"postgres\\\".\\\"staging\\\".\\\"FCT_ESCOLAS_PUBLICAS_INTEGRAL_6B\\\"\"}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_seis\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_seis\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_sete_estadual": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_sete_estadual", "resource_type": "model", "package_name": "exp", "path": "serving\\07-fct_meta_sete\\fct_meta_sete_estadual.py", "original_file_path": "models\\serving\\07-fct_meta_sete\\fct_meta_sete_estadual.py", "unique_id": "model.exp.fct_meta_sete_estadual", "fqn": ["exp", "serving", "07-fct_meta_sete", "fct_meta_sete_estadual"], "alias": "fct_meta_sete_estadual", "checksum": {"name": "sha256", "checksum": "98810cf703557676e77798d0ddda7285f0b6ca206f9afddb51319043b93c125c"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Fomentar a qualidade da educa\u00e7\u00e3o b\u00e1sica em todas as etapas e modalidades, com melhoria do fluxo escolar e da aprendizagem, de modo a atingir as seguintes m\u00e9dias nacionais para o \u00cdndice de Desenvolvimento da Educa\u00e7\u00e3o B\u00e1sica (IDEB). 6,0 nos anos iniciais do ensino fundamental; 5,5 nos anos finais do ensino fundamental; 5,2 no ensino m\u00e9dio. Dimens\u00e3o Estadual.", "columns": {"ANO": {"name": "ANO", "description": "Ano do registro.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_ESTADO_CODIGO": {"name": "FK_ESTADO_CODIGO", "description": "C\u00f3digo do Estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "INDICADOR": {"name": "INDICADOR", "description": "Define a qual indicador o registro pertence. 7A - M\u00e9dia do IDEB m\u00e9dio para os anos iniciais do ensino fundamental. 7B - M\u00e9dia do IDEB m\u00e9dio para os anos finais do ensino fundamental. 7C - M\u00e9dia do IDEB m\u00e9dio para o ensino m\u00e9dio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "INFORME_INDICADOR": {"name": "INFORME_INDICADOR", "description": "Informa que o indicador foi calculado. Quando com valor zero, indica aus\u00eancia de c\u00e1lculo.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "REDE": {"name": "REDE", "description": "Rede de ensino.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "ATENDIMENTO_IND": {"name": "ATENDIMENTO_IND", "description": "Atendimento do Indicador.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\serving\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.7149832, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_sete_estadual\"", "raw_code": "import numpy as np\r\nimport pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_ideb = dbt.ref(\"dim_ideb_estadual\")\r\n\r\n    # template\r\n    list_indicador = ['7A', '7B', '7C']\r\n\r\n    # ind a\r\n    df_7a = \\\r\n        (df_dim_ideb\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO', 'ORIGEM', 'ESTADUAL',\r\n                        'PUBLICA'])\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .query('ORIGEM==\"anos_iniciais\"')\r\n        .melt(id_vars=['ANO', 'FK_ESTADO_CODIGO', 'ORIGEM'],\r\n            value_vars=['ESTADUAL','PUBLICA'],\r\n            var_name='REDE',\r\n            value_name='ATENDIMENTO_IND')\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'-':np.nan,None:np.nan}))\r\n        .query('ATENDIMENTO_IND==ATENDIMENTO_IND')\r\n        .assign(INDICADOR=list_indicador[0])\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO','INDICADOR',\r\n                        'REDE', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind b\r\n    df_7b = \\\r\n        (df_dim_ideb\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO', 'ORIGEM', 'ESTADUAL',\r\n                        'PUBLICA'])\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .query('ORIGEM==\"anos_finais\"')\r\n        .melt(id_vars=['ANO', 'FK_ESTADO_CODIGO', 'ORIGEM'],\r\n            value_vars=['ESTADUAL','PUBLICA'],\r\n            var_name='REDE',\r\n            value_name='ATENDIMENTO_IND')\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'-':np.nan,None:np.nan}))\r\n        .query('ATENDIMENTO_IND==ATENDIMENTO_IND')\r\n        .assign(INDICADOR=list_indicador[1])\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO','INDICADOR',\r\n                        'REDE', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind c\r\n    df_7c = \\\r\n        (df_dim_ideb\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO', 'ORIGEM', 'ESTADUAL',\r\n                        'PUBLICA'])\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .query('ORIGEM==\"ensino_medio\"')\r\n        .melt(id_vars=['ANO', 'FK_ESTADO_CODIGO', 'ORIGEM'],\r\n            value_vars=['ESTADUAL','PUBLICA'],\r\n            var_name='REDE',\r\n            value_name='ATENDIMENTO_IND')\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'-':np.nan,None:np.nan}))\r\n        .query('ATENDIMENTO_IND==ATENDIMENTO_IND')\r\n        .assign(INDICADOR=list_indicador[2])\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO','INDICADOR',\r\n                        'REDE', 'ATENDIMENTO_IND'])\r\n        )\r\n    # meta concat\r\n    df_7_raw = pd.concat([df_7a, df_7b, df_7c]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_7 = \\\r\n        (df_7_raw\r\n            .reset_index(drop=True)\r\n            .assign(INFORME_INDICADOR=lambda x:\r\n                (x['ATENDIMENTO_IND']!=0).astype(int))\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO',\r\n                    'INDICADOR','INFORME_INDICADOR',\r\n                    'REDE', 'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .astype({col: 'uint32' for col in ['FK_ESTADO_CODIGO']})\r\n            .astype({'ANO':'uint16'})\r\n            .astype({'ATENDIMENTO_IND':float})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'REDE'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_7", "language": "python", "refs": [{"name": "dim_ideb_estadual", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["model.exp.dim_ideb_estadual"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\07-fct_meta_sete\\fct_meta_sete_estadual.py", "compiled": true, "compiled_code": "import numpy as np\r\nimport pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_ideb = dbt.ref(\"dim_ideb_estadual\")\r\n\r\n    # template\r\n    list_indicador = ['7A', '7B', '7C']\r\n\r\n    # ind a\r\n    df_7a = \\\r\n        (df_dim_ideb\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO', 'ORIGEM', 'ESTADUAL',\r\n                        'PUBLICA'])\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .query('ORIGEM==\"anos_iniciais\"')\r\n        .melt(id_vars=['ANO', 'FK_ESTADO_CODIGO', 'ORIGEM'],\r\n            value_vars=['ESTADUAL','PUBLICA'],\r\n            var_name='REDE',\r\n            value_name='ATENDIMENTO_IND')\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'-':np.nan,None:np.nan}))\r\n        .query('ATENDIMENTO_IND==ATENDIMENTO_IND')\r\n        .assign(INDICADOR=list_indicador[0])\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO','INDICADOR',\r\n                        'REDE', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind b\r\n    df_7b = \\\r\n        (df_dim_ideb\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO', 'ORIGEM', 'ESTADUAL',\r\n                        'PUBLICA'])\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .query('ORIGEM==\"anos_finais\"')\r\n        .melt(id_vars=['ANO', 'FK_ESTADO_CODIGO', 'ORIGEM'],\r\n            value_vars=['ESTADUAL','PUBLICA'],\r\n            var_name='REDE',\r\n            value_name='ATENDIMENTO_IND')\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'-':np.nan,None:np.nan}))\r\n        .query('ATENDIMENTO_IND==ATENDIMENTO_IND')\r\n        .assign(INDICADOR=list_indicador[1])\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO','INDICADOR',\r\n                        'REDE', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind c\r\n    df_7c = \\\r\n        (df_dim_ideb\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO', 'ORIGEM', 'ESTADUAL',\r\n                        'PUBLICA'])\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .query('ORIGEM==\"ensino_medio\"')\r\n        .melt(id_vars=['ANO', 'FK_ESTADO_CODIGO', 'ORIGEM'],\r\n            value_vars=['ESTADUAL','PUBLICA'],\r\n            var_name='REDE',\r\n            value_name='ATENDIMENTO_IND')\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'-':np.nan,None:np.nan}))\r\n        .query('ATENDIMENTO_IND==ATENDIMENTO_IND')\r\n        .assign(INDICADOR=list_indicador[2])\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO','INDICADOR',\r\n                        'REDE', 'ATENDIMENTO_IND'])\r\n        )\r\n    # meta concat\r\n    df_7_raw = pd.concat([df_7a, df_7b, df_7c]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_7 = \\\r\n        (df_7_raw\r\n            .reset_index(drop=True)\r\n            .assign(INFORME_INDICADOR=lambda x:\r\n                (x['ATENDIMENTO_IND']!=0).astype(int))\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO',\r\n                    'INDICADOR','INFORME_INDICADOR',\r\n                    'REDE', 'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .astype({col: 'uint32' for col in ['FK_ESTADO_CODIGO']})\r\n            .astype({'ANO':'uint16'})\r\n            .astype({'ATENDIMENTO_IND':float})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'REDE'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_7\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_ideb_estadual\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_ideb_estadual\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_sete_estadual\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_sete_estadual\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_sete_municipal": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_sete_municipal", "resource_type": "model", "package_name": "exp", "path": "serving\\07-fct_meta_sete\\fct_meta_sete_municipal.py", "original_file_path": "models\\serving\\07-fct_meta_sete\\fct_meta_sete_municipal.py", "unique_id": "model.exp.fct_meta_sete_municipal", "fqn": ["exp", "serving", "07-fct_meta_sete", "fct_meta_sete_municipal"], "alias": "fct_meta_sete_municipal", "checksum": {"name": "sha256", "checksum": "7ad7ace9d449d0ab7f99c59903c9b140b34f48cb8888d322418f3746248d8cd8"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Fomentar a qualidade da educa\u00e7\u00e3o b\u00e1sica em todas as etapas e modalidades, com melhoria do fluxo escolar e da aprendizagem, de modo a atingir as seguintes m\u00e9dias nacionais para o \u00cdndice de Desenvolvimento da Educa\u00e7\u00e3o B\u00e1sica (IDEB). 6,0 nos anos iniciais do ensino fundamental; 5,5 nos anos finais do ensino fundamental; 5,2 no ensino m\u00e9dio. Dimens\u00e3o Municipal.", "columns": {"ANO": {"name": "ANO", "description": "Ano do registro.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_ESTADO_CODIGO": {"name": "FK_ESTADO_CODIGO", "description": "C\u00f3digo do Estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do Munic\u00edpio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "INDICADOR": {"name": "INDICADOR", "description": "Define a qual indicador o registro pertence. 7A - M\u00e9dia do IDEB m\u00e9dio para os anos iniciais do ensino fundamental. 7B - M\u00e9dia do IDEB m\u00e9dio para os anos finais do ensino fundamental. 7C - M\u00e9dia do IDEB m\u00e9dio para o ensino m\u00e9dio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "INFORME_INDICADOR": {"name": "INFORME_INDICADOR", "description": "Informa que o indicador foi calculado. Quando com valor zero, indica aus\u00eancia de c\u00e1lculo.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "REDE": {"name": "REDE", "description": "Rede de ensino.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "ATENDIMENTO_IND": {"name": "ATENDIMENTO_IND", "description": "Atendimento do Indicador.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\serving\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.7109828, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_sete_municipal\"", "raw_code": "import numpy as np\r\nimport pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_ideb = dbt.ref(\"dim_ideb_municipal\")\r\n\r\n    # template\r\n    list_indicador = ['7A', '7B', '7C']\r\n\r\n    list_indicador = ['7A', '7B', '7C']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in [2015, 2017, 2019, 2021]:\r\n            for rede in ['MUNICIPAL','PUBLICA']:\r\n                df_temp = (df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']].copy()\r\n                        .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO', 'ESTADO_CODIGO':'FK_ESTADO_CODIGO'})\r\n                        )\r\n                df_temp['ANO']=ano\r\n                df_temp['INDICADOR']=indicador\r\n                df_temp['REDE']=rede\r\n                if df_ano_munic.shape != (0,0):\r\n                    df_ano_munic = pd.concat([df_ano_munic, df_temp]).reset_index(drop=True)\r\n                else:\r\n                    df_ano_munic = df_temp.copy()\r\n    # ind a\r\n    df_7a = \\\r\n        (df_dim_ideb\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'ORIGEM', 'MUNICIPAL',\r\n                          'PUBLICA'])\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .query('ORIGEM==\"anos_iniciais\"')\r\n        .melt(id_vars=['ANO', 'FK_MUNICIPIO_CODIGO', 'ORIGEM'],\r\n              value_vars=['MUNICIPAL','PUBLICA'],\r\n              var_name='REDE',\r\n              value_name='ATENDIMENTO_IND')\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'-':np.nan,None:np.nan}))\r\n        .query('ATENDIMENTO_IND==ATENDIMENTO_IND')\r\n        .assign(INDICADOR=list_indicador[0])\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'REDE', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind b\r\n    df_7b = \\\r\n        (df_dim_ideb\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'ORIGEM', 'MUNICIPAL',\r\n                          'PUBLICA'])\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .query('ORIGEM==\"anos_finais\"')\r\n        .melt(id_vars=['ANO', 'FK_MUNICIPIO_CODIGO', 'ORIGEM'],\r\n              value_vars=['MUNICIPAL','PUBLICA'],\r\n              var_name='REDE',\r\n              value_name='ATENDIMENTO_IND')\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'-':np.nan,None:np.nan}))\r\n        .query('ATENDIMENTO_IND==ATENDIMENTO_IND')\r\n        .assign(INDICADOR=list_indicador[1])\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'REDE', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind c\r\n    df_7c = \\\r\n        (df_dim_ideb\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'ORIGEM', 'MUNICIPAL',\r\n                        'PUBLICA'])\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .query('ORIGEM==\"ensino_medio\"')\r\n        .melt(id_vars=['ANO', 'FK_MUNICIPIO_CODIGO', 'ORIGEM'],\r\n              value_vars=['MUNICIPAL','PUBLICA'],\r\n              var_name='REDE',\r\n              value_name='ATENDIMENTO_IND')\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n                x['ATENDIMENTO_IND'].replace({'-':np.nan,None:np.nan}))\r\n        .query('ATENDIMENTO_IND==ATENDIMENTO_IND')\r\n        .assign(INDICADOR=list_indicador[2])\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'REDE', 'ATENDIMENTO_IND'])\r\n        )\r\n    # meta concat\r\n    df_7_raw = pd.concat([df_7a, df_7b, df_7c]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_7 = \\\r\n        (df_7_raw\r\n            .reset_index(drop=True)\r\n            .merge(\r\n                df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                              'FK_ESTADO_CODIGO','REDE']],\r\n                on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR','REDE'),\r\n                how='right')\r\n            .fillna(0)\r\n            .assign(INFORME_INDICADOR=lambda x:\r\n                (x['ATENDIMENTO_IND']!=0).astype(int))\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO',\r\n                      'FK_MUNICIPIO_CODIGO', 'INDICADOR','INFORME_INDICADOR',\r\n                      'REDE', 'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                               'FK_ESTADO_CODIGO']})\r\n            .astype({'ANO':'uint16'})\r\n            .astype({'ATENDIMENTO_IND':float})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO','REDE'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_7", "language": "python", "refs": [{"name": "info_municipios", "package": null, "version": null}, {"name": "dim_ideb_municipal", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["model.exp.info_municipios", "model.exp.dim_ideb_municipal"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\07-fct_meta_sete\\fct_meta_sete_municipal.py", "compiled": true, "compiled_code": "import numpy as np\r\nimport pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_ideb = dbt.ref(\"dim_ideb_municipal\")\r\n\r\n    # template\r\n    list_indicador = ['7A', '7B', '7C']\r\n\r\n    list_indicador = ['7A', '7B', '7C']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in [2015, 2017, 2019, 2021]:\r\n            for rede in ['MUNICIPAL','PUBLICA']:\r\n                df_temp = (df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']].copy()\r\n                        .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO', 'ESTADO_CODIGO':'FK_ESTADO_CODIGO'})\r\n                        )\r\n                df_temp['ANO']=ano\r\n                df_temp['INDICADOR']=indicador\r\n                df_temp['REDE']=rede\r\n                if df_ano_munic.shape != (0,0):\r\n                    df_ano_munic = pd.concat([df_ano_munic, df_temp]).reset_index(drop=True)\r\n                else:\r\n                    df_ano_munic = df_temp.copy()\r\n    # ind a\r\n    df_7a = \\\r\n        (df_dim_ideb\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'ORIGEM', 'MUNICIPAL',\r\n                          'PUBLICA'])\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .query('ORIGEM==\"anos_iniciais\"')\r\n        .melt(id_vars=['ANO', 'FK_MUNICIPIO_CODIGO', 'ORIGEM'],\r\n              value_vars=['MUNICIPAL','PUBLICA'],\r\n              var_name='REDE',\r\n              value_name='ATENDIMENTO_IND')\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'-':np.nan,None:np.nan}))\r\n        .query('ATENDIMENTO_IND==ATENDIMENTO_IND')\r\n        .assign(INDICADOR=list_indicador[0])\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'REDE', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind b\r\n    df_7b = \\\r\n        (df_dim_ideb\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'ORIGEM', 'MUNICIPAL',\r\n                          'PUBLICA'])\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .query('ORIGEM==\"anos_finais\"')\r\n        .melt(id_vars=['ANO', 'FK_MUNICIPIO_CODIGO', 'ORIGEM'],\r\n              value_vars=['MUNICIPAL','PUBLICA'],\r\n              var_name='REDE',\r\n              value_name='ATENDIMENTO_IND')\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'-':np.nan,None:np.nan}))\r\n        .query('ATENDIMENTO_IND==ATENDIMENTO_IND')\r\n        .assign(INDICADOR=list_indicador[1])\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'REDE', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind c\r\n    df_7c = \\\r\n        (df_dim_ideb\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'ORIGEM', 'MUNICIPAL',\r\n                        'PUBLICA'])\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .query('ORIGEM==\"ensino_medio\"')\r\n        .melt(id_vars=['ANO', 'FK_MUNICIPIO_CODIGO', 'ORIGEM'],\r\n              value_vars=['MUNICIPAL','PUBLICA'],\r\n              var_name='REDE',\r\n              value_name='ATENDIMENTO_IND')\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n                x['ATENDIMENTO_IND'].replace({'-':np.nan,None:np.nan}))\r\n        .query('ATENDIMENTO_IND==ATENDIMENTO_IND')\r\n        .assign(INDICADOR=list_indicador[2])\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'REDE', 'ATENDIMENTO_IND'])\r\n        )\r\n    # meta concat\r\n    df_7_raw = pd.concat([df_7a, df_7b, df_7c]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_7 = \\\r\n        (df_7_raw\r\n            .reset_index(drop=True)\r\n            .merge(\r\n                df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                              'FK_ESTADO_CODIGO','REDE']],\r\n                on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR','REDE'),\r\n                how='right')\r\n            .fillna(0)\r\n            .assign(INFORME_INDICADOR=lambda x:\r\n                (x['ATENDIMENTO_IND']!=0).astype(int))\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO',\r\n                      'FK_MUNICIPIO_CODIGO', 'INDICADOR','INFORME_INDICADOR',\r\n                      'REDE', 'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                               'FK_ESTADO_CODIGO']})\r\n            .astype({'ANO':'uint16'})\r\n            .astype({'ATENDIMENTO_IND':float})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO','REDE'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_7\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_ideb_municipal\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_ideb_municipal\\\"\", \"info_municipios\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"info_municipios\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_sete_municipal\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_sete_municipal\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_nove": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_nove", "resource_type": "model", "package_name": "exp", "path": "serving\\09-fcf_meta_nove\\fct_meta_nove.py", "original_file_path": "models\\serving\\09-fcf_meta_nove\\fct_meta_nove.py", "unique_id": "model.exp.fct_meta_nove", "fqn": ["exp", "serving", "09-fcf_meta_nove", "fct_meta_nove"], "alias": "fct_meta_nove", "checksum": {"name": "sha256", "checksum": "ba8d44ebec47275b809c947da0a4b06f1d8e1eb68c7243147a44d0298337bfbd"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Elevar a taxa de alfabetiza\u00e7\u00e3o da popula\u00e7\u00e3o com 15 (quinze) anos ou mais para 93,5% (noventa e tr\u00eas inteiros e cinco d\u00e9cimos por cento) at\u00e9 2015 e, at\u00e9 o final da vig\u00eancia deste pne, erradicar o analfabetismo absoluto e reduzir em 50% (cinquenta por cento) a taxa de analfabetismo funcional.", "columns": {"ANO": {"name": "ANO", "description": "Ano do registro.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "INDICADOR": {"name": "INDICADOR", "description": "Define a qual indicador o registro pertence. 9A - Taxa de alfabetiza\u00e7\u00e3o da popula\u00e7\u00e3o de 15 anos ou mais de idade. 9B - Taxa de analfabetismo funcional da popula\u00e7\u00e3o de 15 anos ou mais de idade.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "ALFABETIZADOS": {"name": "ALFABETIZADOS", "description": "Quantidade de pessoas entrevistadas com mais de 15 anos, n\u00e3o classificados como ANALFABETOS ou ANALFABETOS FUNCIONAIS", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "NAO_ALFABETIZADOS": {"name": "NAO_ALFABETIZADOS", "description": "Quantidade de pessoas entrevistadas com mais de 15 anos, classificados como ANALFABETOS ou ANALFABETOS FUNCIONAIS", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "TOTAL": {"name": "TOTAL", "description": "Quantidade total de pessoas entrevistadas com mais de 15 anos.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "ATENDIMENTO_IND": {"name": "ATENDIMENTO_IND", "description": "Atendimento do Indicador.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\serving\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.7199836, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_nove\"", "raw_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_analfabetismo_funcional = dbt.ref(\"dim_analfabetismo_funcional\")\r\n\r\n    # template\r\n    list_indicador = ['9A', '9B']\r\n\r\n    # ind a\r\n    df_9a = \\\r\n        (df_dim_analfabetismo_funcional\r\n         .reindex(columns=['ANO', 'REGIOES', 'FAIXA', 'CATEGORIA', 'QUANTIDADE'])\r\n         .query('FAIXA!=\"geral\"')\r\n         .astype({'ANO':'uint16','QUANTIDADE':'uint16'})\r\n         .assign(SITUACAO='NAO_ALFABETIZADOS')\r\n         .assign(SITUACAO=lambda x: x['SITUACAO'].where(\r\n                     x['CATEGORIA'].isin([\"ANALFABETO\",\"ANALFABETOS_FUNCIONAIS\"]),\r\n                     'ALFABETIZADOS'))\r\n         .drop(columns=['FAIXA','CATEGORIA'])\r\n         .pivot_table(index=['ANO', 'REGIOES'],\r\n                      columns=['SITUACAO'],\r\n                      values=['QUANTIDADE'],\r\n                      aggfunc=sum)\r\n         .reset_index(col_level=1)\r\n         .droplevel(level=0, axis=1)\r\n         .rename_axis(None, axis=1)\r\n         .assign(TOTAL=lambda x:x['ALFABETIZADOS']+x['NAO_ALFABETIZADOS'])\r\n         .assign(ATENDIMENTO_IND=lambda x:(\r\n                 round(x['ALFABETIZADOS']/x['TOTAL']*100,2)))\r\n         .assign(INDICADOR=list_indicador[0])\r\n         .reindex(columns=['ANO', \"REGIOES\", 'INDICADOR',\r\n                           'ALFABETIZADOS','NAO_ALFABETIZADOS', 'TOTAL',\r\n                           'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind c\r\n    df_9b = \\\r\n        (df_dim_analfabetismo_funcional\r\n         .reindex(columns=['ANO', 'REGIOES', 'FAIXA', 'CATEGORIA', 'QUANTIDADE'])\r\n         .query('FAIXA!=\"geral\"')\r\n         .astype({'ANO':'uint16','QUANTIDADE':'uint16'})\r\n         .assign(SITUACAO='NAO_ALFABETIZADOS')\r\n         .assign(SITUACAO=lambda x: x['SITUACAO'].where(\r\n                     x['CATEGORIA'].isin([\"ANALFABETO\",\"ANALFABETOS_FUNCIONAIS\"]),\r\n                     'ALFABETIZADOS'))\r\n         .drop(columns=['FAIXA','CATEGORIA'])\r\n         .pivot_table(index=['ANO', 'REGIOES'],\r\n                      columns=['SITUACAO'],\r\n                      values=['QUANTIDADE'],\r\n                      aggfunc=sum)\r\n         .reset_index(col_level=1)\r\n         .droplevel(level=0, axis=1)\r\n         .rename_axis(None, axis=1)\r\n         .assign(TOTAL=lambda x:x['ALFABETIZADOS']+x['NAO_ALFABETIZADOS'])\r\n         .assign(ATENDIMENTO_IND=lambda x:(\r\n                 round(x['NAO_ALFABETIZADOS']/x['TOTAL']*100,2)))\r\n         .assign(INDICADOR=list_indicador[1])\r\n         .reindex(columns=['ANO', \"REGIOES\", 'INDICADOR',\r\n                           'ALFABETIZADOS','NAO_ALFABETIZADOS', 'TOTAL',\r\n                           'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # meta concat\r\n    df_9_raw = pd.concat([df_9a, df_9b]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_9 = \\\r\n        (df_9_raw\r\n            .reset_index(drop=True)\r\n            .fillna(0)\r\n            .reindex(['ANO', 'REGIOES', 'INDICADOR',\r\n                      'ALFABETIZADOS','NAO_ALFABETIZADOS',\r\n                      'TOTAL','ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .astype({'ANO':'uint16'})\r\n            .astype({'ATENDIMENTO_IND':float})\r\n            .sort_values(by=['ANO', 'INDICADOR','REGIOES'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_9", "language": "python", "refs": [{"name": "dim_analfabetismo_funcional", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["model.exp.dim_analfabetismo_funcional"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\09-fcf_meta_nove\\fct_meta_nove.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_analfabetismo_funcional = dbt.ref(\"dim_analfabetismo_funcional\")\r\n\r\n    # template\r\n    list_indicador = ['9A', '9B']\r\n\r\n    # ind a\r\n    df_9a = \\\r\n        (df_dim_analfabetismo_funcional\r\n         .reindex(columns=['ANO', 'REGIOES', 'FAIXA', 'CATEGORIA', 'QUANTIDADE'])\r\n         .query('FAIXA!=\"geral\"')\r\n         .astype({'ANO':'uint16','QUANTIDADE':'uint16'})\r\n         .assign(SITUACAO='NAO_ALFABETIZADOS')\r\n         .assign(SITUACAO=lambda x: x['SITUACAO'].where(\r\n                     x['CATEGORIA'].isin([\"ANALFABETO\",\"ANALFABETOS_FUNCIONAIS\"]),\r\n                     'ALFABETIZADOS'))\r\n         .drop(columns=['FAIXA','CATEGORIA'])\r\n         .pivot_table(index=['ANO', 'REGIOES'],\r\n                      columns=['SITUACAO'],\r\n                      values=['QUANTIDADE'],\r\n                      aggfunc=sum)\r\n         .reset_index(col_level=1)\r\n         .droplevel(level=0, axis=1)\r\n         .rename_axis(None, axis=1)\r\n         .assign(TOTAL=lambda x:x['ALFABETIZADOS']+x['NAO_ALFABETIZADOS'])\r\n         .assign(ATENDIMENTO_IND=lambda x:(\r\n                 round(x['ALFABETIZADOS']/x['TOTAL']*100,2)))\r\n         .assign(INDICADOR=list_indicador[0])\r\n         .reindex(columns=['ANO', \"REGIOES\", 'INDICADOR',\r\n                           'ALFABETIZADOS','NAO_ALFABETIZADOS', 'TOTAL',\r\n                           'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind c\r\n    df_9b = \\\r\n        (df_dim_analfabetismo_funcional\r\n         .reindex(columns=['ANO', 'REGIOES', 'FAIXA', 'CATEGORIA', 'QUANTIDADE'])\r\n         .query('FAIXA!=\"geral\"')\r\n         .astype({'ANO':'uint16','QUANTIDADE':'uint16'})\r\n         .assign(SITUACAO='NAO_ALFABETIZADOS')\r\n         .assign(SITUACAO=lambda x: x['SITUACAO'].where(\r\n                     x['CATEGORIA'].isin([\"ANALFABETO\",\"ANALFABETOS_FUNCIONAIS\"]),\r\n                     'ALFABETIZADOS'))\r\n         .drop(columns=['FAIXA','CATEGORIA'])\r\n         .pivot_table(index=['ANO', 'REGIOES'],\r\n                      columns=['SITUACAO'],\r\n                      values=['QUANTIDADE'],\r\n                      aggfunc=sum)\r\n         .reset_index(col_level=1)\r\n         .droplevel(level=0, axis=1)\r\n         .rename_axis(None, axis=1)\r\n         .assign(TOTAL=lambda x:x['ALFABETIZADOS']+x['NAO_ALFABETIZADOS'])\r\n         .assign(ATENDIMENTO_IND=lambda x:(\r\n                 round(x['NAO_ALFABETIZADOS']/x['TOTAL']*100,2)))\r\n         .assign(INDICADOR=list_indicador[1])\r\n         .reindex(columns=['ANO', \"REGIOES\", 'INDICADOR',\r\n                           'ALFABETIZADOS','NAO_ALFABETIZADOS', 'TOTAL',\r\n                           'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # meta concat\r\n    df_9_raw = pd.concat([df_9a, df_9b]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_9 = \\\r\n        (df_9_raw\r\n            .reset_index(drop=True)\r\n            .fillna(0)\r\n            .reindex(['ANO', 'REGIOES', 'INDICADOR',\r\n                      'ALFABETIZADOS','NAO_ALFABETIZADOS',\r\n                      'TOTAL','ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .astype({'ANO':'uint16'})\r\n            .astype({'ATENDIMENTO_IND':float})\r\n            .sort_values(by=['ANO', 'INDICADOR','REGIOES'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_9\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_analfabetismo_funcional\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_analfabetismo_funcional\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_nove\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_nove\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_dez": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_dez", "resource_type": "model", "package_name": "exp", "path": "serving\\10-fct_meta_dez\\fct_meta_dez.py", "original_file_path": "models\\serving\\10-fct_meta_dez\\fct_meta_dez.py", "unique_id": "model.exp.fct_meta_dez", "fqn": ["exp", "serving", "10-fct_meta_dez", "fct_meta_dez"], "alias": "fct_meta_dez", "checksum": {"name": "sha256", "checksum": "8fe313d19a1bac4810852517522c15a3d8e3a7258aa2d4ff715b7610eb1739c7"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Oferecer, no m\u00ednimo, 25% (vinte e cinco por cento) das matr\u00edculas de educa\u00e7\u00e3o de jovens e adultos, nos ensinos fundamental e m\u00e9dio, na forma integrada \u00e0 educa\u00e7\u00e3o profissional.", "columns": {"ANO": {"name": "ANO", "description": "Ano do registro.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_ESTADO_CODIGO": {"name": "FK_ESTADO_CODIGO", "description": "C\u00f3digo do Estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do Munic\u00edpio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "INDICADOR": {"name": "INDICADOR", "description": "Define a qual indicador o registro pertence. 10A - Percentual de matr\u00edculas da educa\u00e7\u00e3o de jovens e adultos na forma integrada \u00e0 educa\u00e7\u00e3o profissional.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "QTD_MAT_EJA_INTEGRADO": {"name": "QTD_MAT_EJA_INTEGRADO", "description": "Quantidade de matr\u00edculas de Jovens e Adultos integradas \u00e0 educa\u00e7\u00e3o profissional.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "QTD_MAT_EJA_TOTAL": {"name": "QTD_MAT_EJA_TOTAL", "description": "Quantidade de matr\u00edculas de Jovens e Adultos.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "ATENDIMENTO_IND": {"name": "ATENDIMENTO_IND", "description": "Atendimento do Indicador.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\serving\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.7249832, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_dez\"", "raw_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_matriculas_raw = dbt.source(\"staging\", \"FCT_MATRICULAS_EJA_10A\")\r\n\r\n    list_indicador = ['10A']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014, 2020+1):\r\n            df_temp = (\r\n                df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']].copy()\r\n                .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                 'ESTADO_CODIGO':'FK_ESTADO_CODIGO'})\r\n                )\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    df_10a = (df_matriculas_raw\r\n    .dropna()\r\n    .rename(columns={'NU_ANO_CENSO':\"ANO\"})\r\n    .assign(STATUS='INTEGRADA_SIM')\r\n    .assign(STATUS=lambda x:x['STATUS']\r\n            .where(x['TP_ETAPA_ENSINO'].isin([67,73,74]), 'INTEGRADA_NAO'))\r\n    .groupby(['ANO', 'FK_MUNICIPIO_CODIGO', 'STATUS']\r\n             )['QTD_MAT_ETAPA_EJA'].sum()\r\n    .unstack(level=-1).reset_index().rename_axis(None, axis=1)\r\n    .fillna(0)\r\n    .astype({'INTEGRADA_NAO':int, 'INTEGRADA_SIM':int})\r\n    .assign(QTD_MAT_EJA_TOTAL=lambda x:x['INTEGRADA_NAO']+x['INTEGRADA_SIM'])\r\n    .drop('INTEGRADA_NAO',axis=1)\r\n    .rename(columns={'INTEGRADA_SIM': 'QTD_MAT_EJA_INTEGRADO'})\r\n    .assign(INDICADOR='10A')\r\n    .assign(ATENDIMENTO_IND = lambda x:\r\n            round((x['QTD_MAT_EJA_INTEGRADO']/x['QTD_MAT_EJA_TOTAL'])*100,2))\r\n    .reset_index(drop=True)\r\n    )\r\n\r\n    df_10 = (pd\r\n    .merge(df_10a, df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                                 'FK_ESTADO_CODIGO', 'INDICADOR']],\r\n            on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n            how='right')\r\n    .reindex(columns=['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                      'INDICADOR', 'QTD_MAT_EJA_INTEGRADO',\r\n                      'QTD_MAT_EJA_TOTAL', 'ATENDIMENTO_IND'])\r\n    .assign(\r\n        QTD_MAT_EJA_INTEGRADO= lambda x: x['QTD_MAT_EJA_INTEGRADO'].fillna(0),\r\n        QTD_MAT_EJA_TOTAL= lambda x: x['QTD_MAT_EJA_TOTAL'].fillna(0))\r\n    .astype({'QTD_MAT_EJA_INTEGRADO':'int',\r\n             'QTD_MAT_EJA_TOTAL':'int'})\r\n    )\r\n\r\n    return df_10", "language": "python", "refs": [{"name": "info_municipios", "package": null, "version": null}], "sources": [["staging", "FCT_MATRICULAS_EJA_10A"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["source.exp.staging.FCT_MATRICULAS_EJA_10A", "model.exp.info_municipios"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\10-fct_meta_dez\\fct_meta_dez.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_matriculas_raw = dbt.source(\"staging\", \"FCT_MATRICULAS_EJA_10A\")\r\n\r\n    list_indicador = ['10A']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014, 2020+1):\r\n            df_temp = (\r\n                df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']].copy()\r\n                .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                 'ESTADO_CODIGO':'FK_ESTADO_CODIGO'})\r\n                )\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    df_10a = (df_matriculas_raw\r\n    .dropna()\r\n    .rename(columns={'NU_ANO_CENSO':\"ANO\"})\r\n    .assign(STATUS='INTEGRADA_SIM')\r\n    .assign(STATUS=lambda x:x['STATUS']\r\n            .where(x['TP_ETAPA_ENSINO'].isin([67,73,74]), 'INTEGRADA_NAO'))\r\n    .groupby(['ANO', 'FK_MUNICIPIO_CODIGO', 'STATUS']\r\n             )['QTD_MAT_ETAPA_EJA'].sum()\r\n    .unstack(level=-1).reset_index().rename_axis(None, axis=1)\r\n    .fillna(0)\r\n    .astype({'INTEGRADA_NAO':int, 'INTEGRADA_SIM':int})\r\n    .assign(QTD_MAT_EJA_TOTAL=lambda x:x['INTEGRADA_NAO']+x['INTEGRADA_SIM'])\r\n    .drop('INTEGRADA_NAO',axis=1)\r\n    .rename(columns={'INTEGRADA_SIM': 'QTD_MAT_EJA_INTEGRADO'})\r\n    .assign(INDICADOR='10A')\r\n    .assign(ATENDIMENTO_IND = lambda x:\r\n            round((x['QTD_MAT_EJA_INTEGRADO']/x['QTD_MAT_EJA_TOTAL'])*100,2))\r\n    .reset_index(drop=True)\r\n    )\r\n\r\n    df_10 = (pd\r\n    .merge(df_10a, df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                                 'FK_ESTADO_CODIGO', 'INDICADOR']],\r\n            on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n            how='right')\r\n    .reindex(columns=['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                      'INDICADOR', 'QTD_MAT_EJA_INTEGRADO',\r\n                      'QTD_MAT_EJA_TOTAL', 'ATENDIMENTO_IND'])\r\n    .assign(\r\n        QTD_MAT_EJA_INTEGRADO= lambda x: x['QTD_MAT_EJA_INTEGRADO'].fillna(0),\r\n        QTD_MAT_EJA_TOTAL= lambda x: x['QTD_MAT_EJA_TOTAL'].fillna(0))\r\n    .astype({'QTD_MAT_EJA_INTEGRADO':'int',\r\n             'QTD_MAT_EJA_TOTAL':'int'})\r\n    )\r\n\r\n    return df_10\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"info_municipios\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"info_municipios\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {\"staging.FCT_MATRICULAS_EJA_10A\": \"\\\"postgres\\\".\\\"staging\\\".\\\"FCT_MATRICULAS_EJA_10A\\\"\"}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_dez\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_dez\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_onze": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_onze", "resource_type": "model", "package_name": "exp", "path": "serving\\11-fct_meta_onze\\fct_meta_onze.py", "original_file_path": "models\\serving\\11-fct_meta_onze\\fct_meta_onze.py", "unique_id": "model.exp.fct_meta_onze", "fqn": ["exp", "serving", "11-fct_meta_onze", "fct_meta_onze"], "alias": "fct_meta_onze", "checksum": {"name": "sha256", "checksum": "49edd31241b3d3b67ed480d5409e62493739224dac06d3eb76763dbbb3e947eb"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Triplicar as matr\u00edculas da educa\u00e7\u00e3o profissional t\u00e9cnica de n\u00edvel m\u00e9dio, assegurando a qualidade da oferta e pelo menos 50%8 (cinquenta por cento) da expans\u00e3o no segmento p\u00fablico.", "columns": {"ANO": {"name": "ANO", "description": "Ano do registro.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_ESTADO_CODIGO": {"name": "FK_ESTADO_CODIGO", "description": "C\u00f3digo do Estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do Munic\u00edpio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "INDICADOR": {"name": "INDICADOR", "description": "Define a qual indicador o registro pertence. 11A - N\u00famero absoluto de matr\u00edculas em EPT de n\u00edvel m\u00e9dio. 11B - Participa\u00e7\u00e3o do segmento p\u00fablico na expans\u00e3o da EPT de n\u00edvel m\u00e9dio", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "EPT_PUBLICO": {"name": "EPT_PUBLICO", "description": "Quantidade de matr\u00edculas de EPT de n\u00edvel m\u00e9dio no segmento p\u00fablico.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "EPT_PUBLICO_2013": {"name": "EPT_PUBLICO_2013", "description": "Quantidade de matr\u00edculas de EPT de n\u00edvel m\u00e9dio no segmento p\u00fablico em 2013.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "EPT_TOTAL": {"name": "EPT_TOTAL", "description": "Quantidade de matr\u00edculas de EPT de n\u00edvel m\u00e9dio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "EPT_TOTAL_2013": {"name": "EPT_TOTAL_2013", "description": "Quantidade de matr\u00edculas de EPT de n\u00edvel m\u00e9dio em 2013.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "ATENDIMENTO_IND": {"name": "ATENDIMENTO_IND", "description": "N\u00edvel de atendimento do Indicador.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\serving\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.7319832, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_onze\"", "raw_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_fct_matriculas_ept = dbt.source(\"staging\",\r\n                                       \"FCT_MATRICULAS_EPT\")\r\n\r\n    list_indicador = ['11A','11B']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014, 2020+1):\r\n            df_temp = (\r\n                df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']].copy()\r\n                .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                 'ESTADO_CODIGO':'FK_ESTADO_CODIGO'})\r\n                )\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    df_11a = \\\r\n        (df_fct_matriculas_ept\r\n            .assign(EPT_TOTAL=lambda x: x.EPT_PRIVADO + x.EPT_PUBLICO,\r\n                    ATENDIMENTO_IND = lambda x: x.EPT_TOTAL)\r\n            .assign(INDICADOR='11A')\r\n            .reindex(columns=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO',\r\n                            'EPT_TOTAL', 'ATENDIMENTO_IND'])\r\n            .loc[lambda x:x.ANO>2013, :]\r\n        )\r\n\r\n    df_11b = \\\r\n        (df_fct_matriculas_ept\r\n            .assign(EPT_TOTAL=lambda x:x.EPT_PRIVADO+x.EPT_PUBLICO)\r\n            .reindex(['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                    'EPT_PUBLICO', 'EPT_TOTAL'], axis=1)\r\n            .loc[lambda x:x.ANO>2013,:]\r\n            .merge(\r\n                (df_fct_matriculas_ept\r\n                .loc[lambda y: y.ANO==2013,\r\n                        ['FK_MUNICIPIO_CODIGO', 'EPT_PRIVADO', 'EPT_PUBLICO']]\r\n                .rename(columns={'EPT_PRIVADO': 'EPT_PRIVADO_2013',\r\n                                    'EPT_PUBLICO': 'EPT_PUBLICO_2013'})\r\n                .assign(EPT_TOTAL_2013=lambda x:\r\n                        x.EPT_PRIVADO_2013+x.EPT_PUBLICO_2013)\r\n                .reindex(['FK_MUNICIPIO_CODIGO', 'EPT_PUBLICO_2013',\r\n                            'EPT_TOTAL_2013'], axis=1)),\r\n                on='FK_MUNICIPIO_CODIGO', how='left')\r\n            .assign(INDICADOR='11B')\r\n            .assign(EXPANSAO_EPT_PUBLICA=lambda x:\r\n                (x.EPT_PUBLICO-x.EPT_PUBLICO_2013))\r\n            .loc[lambda x:x.EXPANSAO_EPT_PUBLICA>0,:]\r\n            .assign(EXPANSAO_EPT_TOTAL=lambda x:(x.EPT_TOTAL-x.EPT_TOTAL_2013))\r\n            .assign(ATENDIMENTO_IND=lambda x:\r\n                round((x.EXPANSAO_EPT_PUBLICA)/(x.EXPANSAO_EPT_TOTAL),4))\r\n            .loc[lambda x:x.ATENDIMENTO_IND>=0, :]\r\n            .reindex(['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                    'EPT_PUBLICO', 'EPT_PUBLICO_2013', 'EPT_TOTAL',\r\n                    'EPT_TOTAL_2013', 'EXPANSAO_EPT_PUBLICA',\r\n                    'EXPANSAO_EPT_TOTAL', 'ATENDIMENTO_IND'], axis=1)\r\n        )\r\n\r\n    df_11_raw = (pd.concat([df_11a, df_11b]).reset_index(drop=True))\r\n\r\n    df_11 = (pd\r\n        .merge(df_11_raw,\r\n            df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                          'FK_ESTADO_CODIGO', 'INDICADOR']],\r\n            on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n            how='right')\r\n        .assign(\r\n            EPT_PUBLICO = lambda x: x['EPT_PUBLICO'].fillna(0).astype('int'),\r\n            EPT_PUBLICO_2013 = lambda x: x['EPT_PUBLICO_2013'].fillna(0).astype('int'),\r\n            EPT_TOTAL = lambda x: x['EPT_TOTAL'].fillna(0).astype('int'),\r\n            EPT_TOTAL_2013 = lambda x: x['EPT_TOTAL_2013'].fillna(0).astype('int'))\r\n        .reindex(columns=[\"ANO\", \"FK_ESTADO_CODIGO\", \"FK_MUNICIPIO_CODIGO\",\r\n                          \"INDICADOR\", \"EPT_PUBLICO\", \"EPT_PUBLICO_2013\",\r\n                          \"EPT_TOTAL\", \"EPT_TOTAL_2013\", \"ATENDIMENTO_IND\"])\r\n    )\r\n    return df_11", "language": "python", "refs": [{"name": "info_municipios", "package": null, "version": null}], "sources": [["staging", "FCT_MATRICULAS_EPT"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["source.exp.staging.FCT_MATRICULAS_EPT", "model.exp.info_municipios"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\11-fct_meta_onze\\fct_meta_onze.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_fct_matriculas_ept = dbt.source(\"staging\",\r\n                                       \"FCT_MATRICULAS_EPT\")\r\n\r\n    list_indicador = ['11A','11B']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014, 2020+1):\r\n            df_temp = (\r\n                df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']].copy()\r\n                .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                 'ESTADO_CODIGO':'FK_ESTADO_CODIGO'})\r\n                )\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    df_11a = \\\r\n        (df_fct_matriculas_ept\r\n            .assign(EPT_TOTAL=lambda x: x.EPT_PRIVADO + x.EPT_PUBLICO,\r\n                    ATENDIMENTO_IND = lambda x: x.EPT_TOTAL)\r\n            .assign(INDICADOR='11A')\r\n            .reindex(columns=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO',\r\n                            'EPT_TOTAL', 'ATENDIMENTO_IND'])\r\n            .loc[lambda x:x.ANO>2013, :]\r\n        )\r\n\r\n    df_11b = \\\r\n        (df_fct_matriculas_ept\r\n            .assign(EPT_TOTAL=lambda x:x.EPT_PRIVADO+x.EPT_PUBLICO)\r\n            .reindex(['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                    'EPT_PUBLICO', 'EPT_TOTAL'], axis=1)\r\n            .loc[lambda x:x.ANO>2013,:]\r\n            .merge(\r\n                (df_fct_matriculas_ept\r\n                .loc[lambda y: y.ANO==2013,\r\n                        ['FK_MUNICIPIO_CODIGO', 'EPT_PRIVADO', 'EPT_PUBLICO']]\r\n                .rename(columns={'EPT_PRIVADO': 'EPT_PRIVADO_2013',\r\n                                    'EPT_PUBLICO': 'EPT_PUBLICO_2013'})\r\n                .assign(EPT_TOTAL_2013=lambda x:\r\n                        x.EPT_PRIVADO_2013+x.EPT_PUBLICO_2013)\r\n                .reindex(['FK_MUNICIPIO_CODIGO', 'EPT_PUBLICO_2013',\r\n                            'EPT_TOTAL_2013'], axis=1)),\r\n                on='FK_MUNICIPIO_CODIGO', how='left')\r\n            .assign(INDICADOR='11B')\r\n            .assign(EXPANSAO_EPT_PUBLICA=lambda x:\r\n                (x.EPT_PUBLICO-x.EPT_PUBLICO_2013))\r\n            .loc[lambda x:x.EXPANSAO_EPT_PUBLICA>0,:]\r\n            .assign(EXPANSAO_EPT_TOTAL=lambda x:(x.EPT_TOTAL-x.EPT_TOTAL_2013))\r\n            .assign(ATENDIMENTO_IND=lambda x:\r\n                round((x.EXPANSAO_EPT_PUBLICA)/(x.EXPANSAO_EPT_TOTAL),4))\r\n            .loc[lambda x:x.ATENDIMENTO_IND>=0, :]\r\n            .reindex(['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                    'EPT_PUBLICO', 'EPT_PUBLICO_2013', 'EPT_TOTAL',\r\n                    'EPT_TOTAL_2013', 'EXPANSAO_EPT_PUBLICA',\r\n                    'EXPANSAO_EPT_TOTAL', 'ATENDIMENTO_IND'], axis=1)\r\n        )\r\n\r\n    df_11_raw = (pd.concat([df_11a, df_11b]).reset_index(drop=True))\r\n\r\n    df_11 = (pd\r\n        .merge(df_11_raw,\r\n            df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                          'FK_ESTADO_CODIGO', 'INDICADOR']],\r\n            on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n            how='right')\r\n        .assign(\r\n            EPT_PUBLICO = lambda x: x['EPT_PUBLICO'].fillna(0).astype('int'),\r\n            EPT_PUBLICO_2013 = lambda x: x['EPT_PUBLICO_2013'].fillna(0).astype('int'),\r\n            EPT_TOTAL = lambda x: x['EPT_TOTAL'].fillna(0).astype('int'),\r\n            EPT_TOTAL_2013 = lambda x: x['EPT_TOTAL_2013'].fillna(0).astype('int'))\r\n        .reindex(columns=[\"ANO\", \"FK_ESTADO_CODIGO\", \"FK_MUNICIPIO_CODIGO\",\r\n                          \"INDICADOR\", \"EPT_PUBLICO\", \"EPT_PUBLICO_2013\",\r\n                          \"EPT_TOTAL\", \"EPT_TOTAL_2013\", \"ATENDIMENTO_IND\"])\r\n    )\r\n    return df_11\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"info_municipios\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"info_municipios\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {\"staging.FCT_MATRICULAS_EPT\": \"\\\"postgres\\\".\\\"staging\\\".\\\"FCT_MATRICULAS_EPT\\\"\"}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_onze\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_onze\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_doze": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_doze", "resource_type": "model", "package_name": "exp", "path": "serving\\12-fct_meta_doze\\fct_meta_doze.py", "original_file_path": "models\\serving\\12-fct_meta_doze\\fct_meta_doze.py", "unique_id": "model.exp.fct_meta_doze", "fqn": ["exp", "serving", "12-fct_meta_doze", "fct_meta_doze"], "alias": "fct_meta_doze", "checksum": {"name": "sha256", "checksum": "1464c4c177e5081020976bc11b3d18a3fc313ca1003c65e337f35e51d797853a"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Elevar a taxa bruta de matr\u00edcula na Educa\u00e7\u00e3o Superior para 50% (cinquenta por cento) e a taxa l\u00edquida para 33% (trinta e tr\u00eas por cento) da popula\u00e7\u00e3o de 18 (dezoito) a 24 (vinte e quatro) anos, assegurada a qualidade da oferta e expans\u00e3o para, pelo menos, 40% (quarenta por cento) das novas matr\u00edculas no segmento p\u00fablico.", "columns": {"ANO": {"name": "ANO", "description": "Ano do registro.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_ESTADO_CODIGO": {"name": "FK_ESTADO_CODIGO", "description": "C\u00f3digo do Estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do Munic\u00edpio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "INDICADOR": {"name": "INDICADOR", "description": "Define a qual indicador o registro pertence. 12A - Taxa bruta de matr\u00edculas na gradua\u00e7\u00e3o. 12B - Taxa L\u00edquida de Escolariza\u00e7\u00e3o na educa\u00e7\u00e3o superior. 12C - Participa\u00e7\u00e3o do segmento p\u00fablico na expans\u00e3o de matr\u00edculas de gradua\u00e7\u00e3o", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "QT_MAT": {"name": "QT_MAT", "description": "Quantidade de ingressantes.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "QT_MAT_18_24_E_CONC": {"name": "QT_MAT_18_24_E_CONC", "description": "Quantidade de concluintes -  De 18 a 24 anos de idade.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "POP_ESTIMADA_18_24": {"name": "POP_ESTIMADA_18_24", "description": "Popula\u00e7\u00e3o estimada com idade entre 18 e 24 anos.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "QT_PUBLICA": {"name": "QT_PUBLICA", "description": "Quantidade de ingressantes em institui\u00e7\u00f5es p\u00fablicas.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "QT_TOTAL": {"name": "QT_TOTAL", "description": "Quantidade de ingressantes.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "QT_PUBLICA_2013": {"name": "QT_PUBLICA_2013", "description": "Quantidade de ingressantes em institui\u00e7\u00f5es p\u00fablicas em 2013.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "QT_TOTAL_2013": {"name": "QT_TOTAL_2013", "description": "Quantidade de ingressantes em 2013.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "ATENDIMENTO_IND": {"name": "ATENDIMENTO_IND", "description": "N\u00edvel de atendimento do Indicador.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\serving\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.7399826, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_doze\"", "raw_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_educ_sup_12 = dbt.ref(\"dim_educ_sup_12\")\r\n    df_populacao: pd.DataFrame = dbt.ref(\"fct_projecao_populacional\")\r\n\r\n    # template\r\n    list_indicador = ['12A', '12B', '12C']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014,2022+1):\r\n            df_temp = (df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']]\r\n                .copy()\r\n                .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                 'ESTADO_CODIGO':'FK_ESTADO_CODIGO'}))\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                  .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n    # pop etl\r\n    df_populacao_18_a_24 = (df_populacao\r\n    .query('FK_FAIXAS_ETARIAS_ID==6')\r\n    .reindex(columns=['ANO','FK_MUNICIPIO_CODIGO', 'QUANTIDADE_ESTIMADA'])\r\n    .reset_index(drop=True)\r\n    )\r\n\r\n    # ind a\r\n    df_12a = \\\r\n    (df_dim_educ_sup_12\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                        'TP_NIVEL_ACADEMICO','QT_MAT'])\r\n        .query('TP_NIVEL_ACADEMICO==1')\r\n        .dropna(subset=['FK_MUNICIPIO_CODIGO'], axis=0)\r\n        .assign(QT_MAT=lambda x:x['QT_MAT'].fillna(0))\r\n        .astype({'ANO':'uint16',\r\n                'FK_MUNICIPIO_CODIGO':'uint32',\r\n                'TP_NIVEL_ACADEMICO':'uint8',\r\n                'QT_MAT':'uint16'})\r\n        .groupby(by=['ANO', 'FK_MUNICIPIO_CODIGO'])[['QT_MAT']]\r\n        .sum().reset_index()\r\n        .merge(df_populacao_18_a_24, left_on=['ANO','FK_MUNICIPIO_CODIGO'],\r\n                right_on=['ANO', 'FK_MUNICIPIO_CODIGO'], how='left')\r\n        .query('ANO>=2014')\r\n        .assign(QUANTIDADE_ESTIMADA=lambda x:x['QUANTIDADE_ESTIMADA'].fillna(0))\r\n        .rename(columns={'QUANTIDADE_ESTIMADA':'POP_ESTIMADA_18_24'})\r\n        .astype({'POP_ESTIMADA_18_24':'uint32'})\r\n        .assign(ATENDIMENTO_IND = lambda x:\r\n            round(((x['QT_MAT']/x['POP_ESTIMADA_18_24'])*100),2))\r\n        .assign(INDICADOR=list_indicador[0])\r\n        .reindex(columns=['ANO','FK_MUNICIPIO_CODIGO','INDICADOR','QT_MAT',\r\n                          'POP_ESTIMADA_18_24','ATENDIMENTO_IND'])\r\n        .reset_index(drop=True)\r\n    )\r\n\r\n    # ind b\r\n    df_12b = \\\r\n    (df_dim_educ_sup_12[['ANO', 'FK_MUNICIPIO_CODIGO', 'TP_NIVEL_ACADEMICO',\r\n                         'QT_MAT_18_24', 'QT_CONC_18_24']]\r\n        .dropna(subset='FK_MUNICIPIO_CODIGO', axis=0)\r\n        .query('TP_NIVEL_ACADEMICO==1')\r\n        .reset_index(drop=True)\r\n        .assign(QT_CONC=lambda x:x['QT_CONC_18_24'].fillna(0).astype('uint16'))\r\n        .astype({'ANO':'uint16',\r\n                'QT_MAT_18_24':'uint16',\r\n                'FK_MUNICIPIO_CODIGO':'uint32',\r\n                'TP_NIVEL_ACADEMICO':'uint8'})\r\n        .assign(QT_MAT_18_24_E_CONC=lambda x:x['QT_MAT_18_24']+x['QT_CONC'])\r\n        .drop(columns=['QT_MAT_18_24'])\r\n        .groupby(by=['ANO', 'FK_MUNICIPIO_CODIGO'])[['QT_MAT_18_24_E_CONC']]\r\n        .sum().reset_index()\r\n        .merge(df_populacao_18_a_24,\r\n                on=['ANO','FK_MUNICIPIO_CODIGO'],\r\n                how='left')\r\n        .query('ANO>=2014')\r\n        .assign(QUANTIDADE_ESTIMADA=lambda x:x['QUANTIDADE_ESTIMADA'].fillna(0))\r\n        .rename(columns={'QUANTIDADE_ESTIMADA': 'POP_ESTIMADA_18_24'})\r\n        .astype({'POP_ESTIMADA_18_24':'uint32'})\r\n        .assign(ATENDIMENTO_IND = lambda x:\r\n            round((x['QT_MAT_18_24_E_CONC']/x['POP_ESTIMADA_18_24'])*100,2))\r\n        .assign(ATENDIMENTO_IND = lambda x:(round(x['ATENDIMENTO_IND'], 2)))\r\n        .assign(INDICADOR=list_indicador[1])\r\n        .reindex(columns=['ANO','FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                        'QT_MAT_18_24_E_CONC','POP_ESTIMADA_18_24',\r\n                        'ATENDIMENTO_IND'])\r\n        .reset_index(drop=True)\r\n    )\r\n\r\n    # ind c\r\n    df_12c = \\\r\n    (df_dim_educ_sup_12[['ANO', 'FK_MUNICIPIO_CODIGO', 'TP_NIVEL_ACADEMICO',\r\n                         'TP_CATEGORIA_ADMINISTRATIVA', 'QT_MAT']]\r\n        .dropna(subset='FK_MUNICIPIO_CODIGO', axis=0)\r\n        .query('TP_NIVEL_ACADEMICO==1 and ANO>=2013')\r\n        .assign(QT_MAT=lambda x:x['QT_MAT'].fillna(0))\r\n        .astype({'ANO':'uint16',\r\n                'QT_MAT':'uint16',\r\n                'FK_MUNICIPIO_CODIGO':'uint32',\r\n                'TP_NIVEL_ACADEMICO':'uint8'})\r\n        .assign(PUBLICA=\"PUBLICA_SIM\")\r\n        .assign(PUBLICA=lambda x: (x['PUBLICA']\r\n                                .where(x['TP_CATEGORIA_ADMINISTRATIVA']\r\n                                       .isin([1,2,3,7]), \"PUBLICA_NAO\")))\r\n        .drop(columns=['TP_NIVEL_ACADEMICO', 'TP_CATEGORIA_ADMINISTRATIVA'])\r\n        .groupby([\"ANO\", \"FK_MUNICIPIO_CODIGO\",\"PUBLICA\"])[\"QT_MAT\"]\r\n        .sum().unstack().reset_index().rename_axis(None, axis=1)\r\n        .assign(PUBLICA_SIM=lambda x:x['PUBLICA_SIM'].fillna(0),\r\n                PUBLICA_NAO=lambda x:x['PUBLICA_NAO'].fillna(0),\r\n                QT_TOTAL=lambda x:x['PUBLICA_SIM']+x['PUBLICA_NAO'])\r\n        # # 2013 cols\r\n        .pipe(lambda w:(\r\n        w.merge(w.loc[lambda y: y['ANO'].isin([2013]),\r\n                        ['FK_MUNICIPIO_CODIGO', 'PUBLICA_NAO', 'PUBLICA_SIM']]\r\n                    .rename(columns={'PUBLICA_SIM': 'QT_PUBLICA_2013'})\r\n                    .assign(QT_TOTAL_2013=lambda x:\r\n                        x['QT_PUBLICA_2013'] + x['PUBLICA_NAO'])\r\n                    .reindex(['FK_MUNICIPIO_CODIGO',\r\n                              'QT_TOTAL_2013',\r\n                              'QT_PUBLICA_2013'],\r\n                            axis=1),\r\n                on='FK_MUNICIPIO_CODIGO', how='left')))\r\n        .query('ANO>=2014')\r\n        .rename(columns={'PUBLICA_SIM': 'QT_PUBLICA'})\r\n        .drop(columns=['PUBLICA_NAO'])\r\n        .fillna(0)\r\n        .astype({'QT_PUBLICA':'uint16',\r\n                'QT_TOTAL':'uint16',\r\n                'QT_PUBLICA_2013':'uint16',\r\n                'QT_TOTAL_2013':'uint16'})\r\n        .assign(ATENDIMENTO_IND = lambda x:(\r\n            ((x['QT_PUBLICA']-x['QT_PUBLICA_2013']) /\r\n            (x['QT_TOTAL']-x['QT_TOTAL_2013'])\r\n            )*100).round(2))\r\n        .assign(INDICADOR=list_indicador[2])\r\n        .reindex(columns=['ANO','FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'QT_PUBLICA','QT_TOTAL','QT_PUBLICA_2013',\r\n                          'QT_TOTAL_2013','ATENDIMENTO_IND'])\r\n        .reset_index(drop=True)\r\n    )\r\n\r\n    # meta concat\r\n    df_12_raw = pd.concat([df_12a, df_12b, df_12c]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_12 = \\\r\n    (df_12_raw\r\n        .reset_index(drop=True)\r\n        .merge(\r\n            df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                          'FK_ESTADO_CODIGO']],\r\n            on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n            how='right')\r\n        .reindex(['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                  'INDICADOR', 'QT_MAT',\r\n                  'QT_MAT_18_24_E_CONC', 'POP_ESTIMADA_18_24', 'QT_PUBLICA',\r\n                  'QT_TOTAL', 'QT_PUBLICA_2013', 'QT_TOTAL_2013',\r\n                  'ATENDIMENTO_IND'],\r\n                axis=1)\r\n        .fillna(0)\r\n        .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO', 'QT_MAT',\r\n                                           'QT_MAT_18_24_E_CONC',\r\n                                           \"POP_ESTIMADA_18_24\", \"QT_PUBLICA\",\r\n                                           \"QT_TOTAL\", \"QT_PUBLICA_2013\",\r\n                                           \"QT_TOTAL_2013\"]})\r\n        .astype({'ANO':'uint16'})\r\n        .sort_values(by=['ANO', 'INDICADOR','FK_MUNICIPIO_CODIGO'])\r\n        .reset_index(drop=True)\r\n    )\r\n    return df_12", "language": "python", "refs": [{"name": "info_municipios", "package": null, "version": null}, {"name": "dim_educ_sup_12", "package": null, "version": null}, {"name": "fct_projecao_populacional", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["model.exp.info_municipios", "model.exp.dim_educ_sup_12", "model.exp.fct_projecao_populacional"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\12-fct_meta_doze\\fct_meta_doze.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_educ_sup_12 = dbt.ref(\"dim_educ_sup_12\")\r\n    df_populacao: pd.DataFrame = dbt.ref(\"fct_projecao_populacional\")\r\n\r\n    # template\r\n    list_indicador = ['12A', '12B', '12C']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014,2022+1):\r\n            df_temp = (df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']]\r\n                .copy()\r\n                .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                 'ESTADO_CODIGO':'FK_ESTADO_CODIGO'}))\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                  .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n    # pop etl\r\n    df_populacao_18_a_24 = (df_populacao\r\n    .query('FK_FAIXAS_ETARIAS_ID==6')\r\n    .reindex(columns=['ANO','FK_MUNICIPIO_CODIGO', 'QUANTIDADE_ESTIMADA'])\r\n    .reset_index(drop=True)\r\n    )\r\n\r\n    # ind a\r\n    df_12a = \\\r\n    (df_dim_educ_sup_12\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO',\r\n                        'TP_NIVEL_ACADEMICO','QT_MAT'])\r\n        .query('TP_NIVEL_ACADEMICO==1')\r\n        .dropna(subset=['FK_MUNICIPIO_CODIGO'], axis=0)\r\n        .assign(QT_MAT=lambda x:x['QT_MAT'].fillna(0))\r\n        .astype({'ANO':'uint16',\r\n                'FK_MUNICIPIO_CODIGO':'uint32',\r\n                'TP_NIVEL_ACADEMICO':'uint8',\r\n                'QT_MAT':'uint16'})\r\n        .groupby(by=['ANO', 'FK_MUNICIPIO_CODIGO'])[['QT_MAT']]\r\n        .sum().reset_index()\r\n        .merge(df_populacao_18_a_24, left_on=['ANO','FK_MUNICIPIO_CODIGO'],\r\n                right_on=['ANO', 'FK_MUNICIPIO_CODIGO'], how='left')\r\n        .query('ANO>=2014')\r\n        .assign(QUANTIDADE_ESTIMADA=lambda x:x['QUANTIDADE_ESTIMADA'].fillna(0))\r\n        .rename(columns={'QUANTIDADE_ESTIMADA':'POP_ESTIMADA_18_24'})\r\n        .astype({'POP_ESTIMADA_18_24':'uint32'})\r\n        .assign(ATENDIMENTO_IND = lambda x:\r\n            round(((x['QT_MAT']/x['POP_ESTIMADA_18_24'])*100),2))\r\n        .assign(INDICADOR=list_indicador[0])\r\n        .reindex(columns=['ANO','FK_MUNICIPIO_CODIGO','INDICADOR','QT_MAT',\r\n                          'POP_ESTIMADA_18_24','ATENDIMENTO_IND'])\r\n        .reset_index(drop=True)\r\n    )\r\n\r\n    # ind b\r\n    df_12b = \\\r\n    (df_dim_educ_sup_12[['ANO', 'FK_MUNICIPIO_CODIGO', 'TP_NIVEL_ACADEMICO',\r\n                         'QT_MAT_18_24', 'QT_CONC_18_24']]\r\n        .dropna(subset='FK_MUNICIPIO_CODIGO', axis=0)\r\n        .query('TP_NIVEL_ACADEMICO==1')\r\n        .reset_index(drop=True)\r\n        .assign(QT_CONC=lambda x:x['QT_CONC_18_24'].fillna(0).astype('uint16'))\r\n        .astype({'ANO':'uint16',\r\n                'QT_MAT_18_24':'uint16',\r\n                'FK_MUNICIPIO_CODIGO':'uint32',\r\n                'TP_NIVEL_ACADEMICO':'uint8'})\r\n        .assign(QT_MAT_18_24_E_CONC=lambda x:x['QT_MAT_18_24']+x['QT_CONC'])\r\n        .drop(columns=['QT_MAT_18_24'])\r\n        .groupby(by=['ANO', 'FK_MUNICIPIO_CODIGO'])[['QT_MAT_18_24_E_CONC']]\r\n        .sum().reset_index()\r\n        .merge(df_populacao_18_a_24,\r\n                on=['ANO','FK_MUNICIPIO_CODIGO'],\r\n                how='left')\r\n        .query('ANO>=2014')\r\n        .assign(QUANTIDADE_ESTIMADA=lambda x:x['QUANTIDADE_ESTIMADA'].fillna(0))\r\n        .rename(columns={'QUANTIDADE_ESTIMADA': 'POP_ESTIMADA_18_24'})\r\n        .astype({'POP_ESTIMADA_18_24':'uint32'})\r\n        .assign(ATENDIMENTO_IND = lambda x:\r\n            round((x['QT_MAT_18_24_E_CONC']/x['POP_ESTIMADA_18_24'])*100,2))\r\n        .assign(ATENDIMENTO_IND = lambda x:(round(x['ATENDIMENTO_IND'], 2)))\r\n        .assign(INDICADOR=list_indicador[1])\r\n        .reindex(columns=['ANO','FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                        'QT_MAT_18_24_E_CONC','POP_ESTIMADA_18_24',\r\n                        'ATENDIMENTO_IND'])\r\n        .reset_index(drop=True)\r\n    )\r\n\r\n    # ind c\r\n    df_12c = \\\r\n    (df_dim_educ_sup_12[['ANO', 'FK_MUNICIPIO_CODIGO', 'TP_NIVEL_ACADEMICO',\r\n                         'TP_CATEGORIA_ADMINISTRATIVA', 'QT_MAT']]\r\n        .dropna(subset='FK_MUNICIPIO_CODIGO', axis=0)\r\n        .query('TP_NIVEL_ACADEMICO==1 and ANO>=2013')\r\n        .assign(QT_MAT=lambda x:x['QT_MAT'].fillna(0))\r\n        .astype({'ANO':'uint16',\r\n                'QT_MAT':'uint16',\r\n                'FK_MUNICIPIO_CODIGO':'uint32',\r\n                'TP_NIVEL_ACADEMICO':'uint8'})\r\n        .assign(PUBLICA=\"PUBLICA_SIM\")\r\n        .assign(PUBLICA=lambda x: (x['PUBLICA']\r\n                                .where(x['TP_CATEGORIA_ADMINISTRATIVA']\r\n                                       .isin([1,2,3,7]), \"PUBLICA_NAO\")))\r\n        .drop(columns=['TP_NIVEL_ACADEMICO', 'TP_CATEGORIA_ADMINISTRATIVA'])\r\n        .groupby([\"ANO\", \"FK_MUNICIPIO_CODIGO\",\"PUBLICA\"])[\"QT_MAT\"]\r\n        .sum().unstack().reset_index().rename_axis(None, axis=1)\r\n        .assign(PUBLICA_SIM=lambda x:x['PUBLICA_SIM'].fillna(0),\r\n                PUBLICA_NAO=lambda x:x['PUBLICA_NAO'].fillna(0),\r\n                QT_TOTAL=lambda x:x['PUBLICA_SIM']+x['PUBLICA_NAO'])\r\n        # # 2013 cols\r\n        .pipe(lambda w:(\r\n        w.merge(w.loc[lambda y: y['ANO'].isin([2013]),\r\n                        ['FK_MUNICIPIO_CODIGO', 'PUBLICA_NAO', 'PUBLICA_SIM']]\r\n                    .rename(columns={'PUBLICA_SIM': 'QT_PUBLICA_2013'})\r\n                    .assign(QT_TOTAL_2013=lambda x:\r\n                        x['QT_PUBLICA_2013'] + x['PUBLICA_NAO'])\r\n                    .reindex(['FK_MUNICIPIO_CODIGO',\r\n                              'QT_TOTAL_2013',\r\n                              'QT_PUBLICA_2013'],\r\n                            axis=1),\r\n                on='FK_MUNICIPIO_CODIGO', how='left')))\r\n        .query('ANO>=2014')\r\n        .rename(columns={'PUBLICA_SIM': 'QT_PUBLICA'})\r\n        .drop(columns=['PUBLICA_NAO'])\r\n        .fillna(0)\r\n        .astype({'QT_PUBLICA':'uint16',\r\n                'QT_TOTAL':'uint16',\r\n                'QT_PUBLICA_2013':'uint16',\r\n                'QT_TOTAL_2013':'uint16'})\r\n        .assign(ATENDIMENTO_IND = lambda x:(\r\n            ((x['QT_PUBLICA']-x['QT_PUBLICA_2013']) /\r\n            (x['QT_TOTAL']-x['QT_TOTAL_2013'])\r\n            )*100).round(2))\r\n        .assign(INDICADOR=list_indicador[2])\r\n        .reindex(columns=['ANO','FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'QT_PUBLICA','QT_TOTAL','QT_PUBLICA_2013',\r\n                          'QT_TOTAL_2013','ATENDIMENTO_IND'])\r\n        .reset_index(drop=True)\r\n    )\r\n\r\n    # meta concat\r\n    df_12_raw = pd.concat([df_12a, df_12b, df_12c]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_12 = \\\r\n    (df_12_raw\r\n        .reset_index(drop=True)\r\n        .merge(\r\n            df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                          'FK_ESTADO_CODIGO']],\r\n            on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n            how='right')\r\n        .reindex(['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                  'INDICADOR', 'QT_MAT',\r\n                  'QT_MAT_18_24_E_CONC', 'POP_ESTIMADA_18_24', 'QT_PUBLICA',\r\n                  'QT_TOTAL', 'QT_PUBLICA_2013', 'QT_TOTAL_2013',\r\n                  'ATENDIMENTO_IND'],\r\n                axis=1)\r\n        .fillna(0)\r\n        .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO', 'QT_MAT',\r\n                                           'QT_MAT_18_24_E_CONC',\r\n                                           \"POP_ESTIMADA_18_24\", \"QT_PUBLICA\",\r\n                                           \"QT_TOTAL\", \"QT_PUBLICA_2013\",\r\n                                           \"QT_TOTAL_2013\"]})\r\n        .astype({'ANO':'uint16'})\r\n        .sort_values(by=['ANO', 'INDICADOR','FK_MUNICIPIO_CODIGO'])\r\n        .reset_index(drop=True)\r\n    )\r\n    return df_12\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_educ_sup_12\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_educ_sup_12\\\"\", \"fct_projecao_populacional\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"fct_projecao_populacional\\\"\", \"info_municipios\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"info_municipios\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_doze\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_doze\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_treze": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_treze", "resource_type": "model", "package_name": "exp", "path": "serving\\13-fct_meta_treze\\fct_meta_treze.py", "original_file_path": "models\\serving\\13-fct_meta_treze\\fct_meta_treze.py", "unique_id": "model.exp.fct_meta_treze", "fqn": ["exp", "serving", "13-fct_meta_treze", "fct_meta_treze"], "alias": "fct_meta_treze", "checksum": {"name": "sha256", "checksum": "30a5debb14c6a4a112ad04fe7e01ed2bdb8e659df9d3a7c18a00bd0e627ac0f2"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Elevar a qualidade da educa\u00e7\u00e3o superior e ampliar a propor\u00e7\u00e3o de mestres e doutores do corpo docente em efetivo exerc\u00edcio no conjunto do sistema de educa\u00e7\u00e3o superior para 75% (setenta e cinco por cento), sendo, do total, no m\u00ednimo, 35% (trinta e cinco por cento) doutores.", "columns": {"ANO": {"name": "ANO", "description": "Ano do registro.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_ESTADO_CODIGO": {"name": "FK_ESTADO_CODIGO", "description": "C\u00f3digo do Estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do Munic\u00edpio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "INDICADOR": {"name": "INDICADOR", "description": "Define a qual indicador o registro pertence. 13A - Percentual de docentes com mestrado ou doutorado na educa\u00e7\u00e3o superior. 13B - Percentual de docentes com doutorado na educa\u00e7\u00e3o superior.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "QT_DOC_EXE": {"name": "QT_DOC_EXE", "description": "Quantidade de docentes em exerc\u00edcio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "QT_DOC_EX_MEST": {"name": "QT_DOC_EX_MEST", "description": "Quantidade de docentes em exerc\u00edcio com mestrado.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "QT_DOC_EX_DOUT": {"name": "QT_DOC_EX_DOUT", "description": "Quantidade de docentes em exerc\u00edcio com doutorado.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "ATENDIMENTO_IND": {"name": "ATENDIMENTO_IND", "description": "N\u00edvel de atendimento do Indicador.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\serving\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.7449832, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_treze\"", "raw_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_educ_sup_13 = dbt.ref(\"dim_educ_sup_13\")\r\n\r\n    # template\r\n    list_indicador = ['13A', '13B']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014,2022+1):\r\n            df_temp = (df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']]\r\n                .copy()\r\n                .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                 'ESTADO_CODIGO':'FK_ESTADO_CODIGO'}))\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                  .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    # ind a\r\n    df_13a = (df_dim_educ_sup_13\r\n    .rename({'CO_MUNICIPIO_IES': 'FK_MUNICIPIO_CODIGO'}, axis=1)\r\n    .assign(INDICADOR=list_indicador[0])\r\n    .assign(ATENDIMENTO_IND=lambda x:round((x.QT_DOC_EX_MEST+x.QT_DOC_EX_DOUT)/x.QT_DOC_EXE,4)*100)\r\n    .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                      'QT_DOC_EX_MEST', 'QT_DOC_EX_DOUT', 'QT_DOC_EXE',\r\n                      'ATENDIMENTO_IND'])\r\n    )\r\n\r\n    # ind b\r\n    df_13b = \\\r\n        (df_dim_educ_sup_13\r\n        .rename({'CO_MUNICIPIO_IES': 'FK_MUNICIPIO_CODIGO'}, axis=1)\r\n        .assign(INDICADOR=list_indicador[1])\r\n        .assign(ATENDIMENTO_IND=lambda x:round((x.QT_DOC_EX_DOUT)/x.QT_DOC_EXE, 4)*100)\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'QT_DOC_EX_MEST', 'QT_DOC_EX_DOUT',\r\n                          'QT_DOC_EXE', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n\r\n    # meta concat\r\n    df_13_raw = pd.concat([df_13a, df_13b]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_13 = \\\r\n    (df_13_raw\r\n        .reset_index(drop=True)\r\n        .merge(\r\n            df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                          'FK_ESTADO_CODIGO']],\r\n            on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n            how='right')\r\n        .reindex(['ANO', 'FK_ESTADO_CODIGO',\r\n                  'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                  'QT_DOC_EXE', 'QT_DOC_EX_MEST',\r\n                  'QT_DOC_EX_DOUT', 'ATENDIMENTO_IND'],\r\n                 axis=1)\r\n        .fillna(0)\r\n        .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                           'FK_ESTADO_CODIGO',\r\n                                           'QT_DOC_EXE', 'QT_DOC_EX_MEST',\r\n                                           'QT_DOC_EX_DOUT', ]})\r\n        .astype({'ANO':'uint16'})\r\n        .sort_values(by=['ANO', 'INDICADOR','FK_MUNICIPIO_CODIGO'])\r\n        .reset_index(drop=True)\r\n    )\r\n    return df_13", "language": "python", "refs": [{"name": "info_municipios", "package": null, "version": null}, {"name": "dim_educ_sup_13", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["model.exp.info_municipios", "model.exp.dim_educ_sup_13"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\13-fct_meta_treze\\fct_meta_treze.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_educ_sup_13 = dbt.ref(\"dim_educ_sup_13\")\r\n\r\n    # template\r\n    list_indicador = ['13A', '13B']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014,2022+1):\r\n            df_temp = (df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']]\r\n                .copy()\r\n                .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                 'ESTADO_CODIGO':'FK_ESTADO_CODIGO'}))\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                  .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    # ind a\r\n    df_13a = (df_dim_educ_sup_13\r\n    .rename({'CO_MUNICIPIO_IES': 'FK_MUNICIPIO_CODIGO'}, axis=1)\r\n    .assign(INDICADOR=list_indicador[0])\r\n    .assign(ATENDIMENTO_IND=lambda x:round((x.QT_DOC_EX_MEST+x.QT_DOC_EX_DOUT)/x.QT_DOC_EXE,4)*100)\r\n    .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                      'QT_DOC_EX_MEST', 'QT_DOC_EX_DOUT', 'QT_DOC_EXE',\r\n                      'ATENDIMENTO_IND'])\r\n    )\r\n\r\n    # ind b\r\n    df_13b = \\\r\n        (df_dim_educ_sup_13\r\n        .rename({'CO_MUNICIPIO_IES': 'FK_MUNICIPIO_CODIGO'}, axis=1)\r\n        .assign(INDICADOR=list_indicador[1])\r\n        .assign(ATENDIMENTO_IND=lambda x:round((x.QT_DOC_EX_DOUT)/x.QT_DOC_EXE, 4)*100)\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'QT_DOC_EX_MEST', 'QT_DOC_EX_DOUT',\r\n                          'QT_DOC_EXE', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n\r\n    # meta concat\r\n    df_13_raw = pd.concat([df_13a, df_13b]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_13 = \\\r\n    (df_13_raw\r\n        .reset_index(drop=True)\r\n        .merge(\r\n            df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                          'FK_ESTADO_CODIGO']],\r\n            on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n            how='right')\r\n        .reindex(['ANO', 'FK_ESTADO_CODIGO',\r\n                  'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                  'QT_DOC_EXE', 'QT_DOC_EX_MEST',\r\n                  'QT_DOC_EX_DOUT', 'ATENDIMENTO_IND'],\r\n                 axis=1)\r\n        .fillna(0)\r\n        .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                           'FK_ESTADO_CODIGO',\r\n                                           'QT_DOC_EXE', 'QT_DOC_EX_MEST',\r\n                                           'QT_DOC_EX_DOUT', ]})\r\n        .astype({'ANO':'uint16'})\r\n        .sort_values(by=['ANO', 'INDICADOR','FK_MUNICIPIO_CODIGO'])\r\n        .reset_index(drop=True)\r\n    )\r\n    return df_13\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_educ_sup_13\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_educ_sup_13\\\"\", \"info_municipios\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"info_municipios\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_treze\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_treze\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_quatorze": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_quatorze", "resource_type": "model", "package_name": "exp", "path": "serving\\14-fct_meta_quatorze\\fct_meta_quatorze.py", "original_file_path": "models\\serving\\14-fct_meta_quatorze\\fct_meta_quatorze.py", "unique_id": "model.exp.fct_meta_quatorze", "fqn": ["exp", "serving", "14-fct_meta_quatorze", "fct_meta_quatorze"], "alias": "fct_meta_quatorze", "checksum": {"name": "sha256", "checksum": "a94f462c17e8fff7ac6e4dcd21313d369e4d609924c33df60aee8a160bb167db"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Elevar gradualmente o n\u00famero de matr\u00edculas na p\u00f3s-gradua\u00e7\u00e3o stricto sensu, de modo a atingir a titula\u00e7\u00e3o anual de 60.000 (sessenta mil) mestres e 25.000 (vinte e cinco mil) doutores.", "columns": {"ANO": {"name": "ANO", "description": "Ano do registro.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_ESTADO_CODIGO": {"name": "FK_ESTADO_CODIGO", "description": "C\u00f3digo do Estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do Munic\u00edpio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "INDICADOR": {"name": "INDICADOR", "description": "Define a qual indicador o registro pertence. 14A - N\u00famero de t\u00edtulos de mestrado concedidos por ano. 14B - N\u00famero de t\u00edtulos de doutorado concedidos por ano.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "GRAU_ACADEMICO": {"name": "GRAU_ACADEMICO", "description": "Grau acad\u00eamico avaliado.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "ATENDIMENTO_IND": {"name": "ATENDIMENTO_IND", "description": "N\u00edvel de atendimento do Indicador.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\serving\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.7489831, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_quatorze\"", "raw_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_geocapes_titulacao_2022 = dbt.source(\"raw\", \"DIM_GEOCAPES_TITULACAO_2022\")\r\n\r\n    # template\r\n    list_indicador = ['14A', '14B']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014,2022+1):\r\n            df_temp = (df_municipios_raw[['MUNICIPIO_CODIGO',\r\n                                          'ESTADO_CODIGO']].copy()\r\n                    .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                     'ESTADO_CODIGO':'FK_ESTADO_CODIGO'})\r\n                    )\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if indicador=='14A':\r\n                df_temp['GRAU_ACADEMICO']='MESTRADO'\r\n            else:\r\n                df_temp['GRAU_ACADEMICO']='DOUTORADO'\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                  .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    # ind a\r\n    df_14a = (df_dim_geocapes_titulacao_2022\r\n        [['MUNICIPIO', 'UF', 'ANO', 'MESTRADO_TITULADO',\r\n        \"MESTRADO_PROFISSIONAL_TITULADO\"]]\r\n        # .query(\"ANO==2022\")\r\n        # [['MUNICIPIO', 'UF', 'ANO', 'IES']]\r\n        .assign(MUNICIPIO=lambda x:\\\r\n                x['MUNICIPIO'].replace({\"SANTA B\u00c1RBARA D\u00b4OESTE\":\"SANTA B\u00c1RBARA D'OESTE\",\r\n                                        'SANT\u00b4ANA DO LIVRAMENTO':\"SANT'ANA DO LIVRAMENTO\"}))\r\n        # corrigir erros de uf_munic da base raw\r\n        .assign(UF=lambda x:x['UF'].where(~((x['MUNICIPIO']=='PETROLINA') & (x['UF']=='BA')), 'PE'))\r\n        .assign(UF=lambda x:x['UF'].where(~((x['MUNICIPIO']=='JO\u00c3O PESSOA') & (x['UF']=='PE')), 'PB'))\r\n        .assign(UF=lambda x:x['UF'].where(~((x['MUNICIPIO']=='RIO DE JANEIRO') & (x['UF']=='BA')), 'RJ'))\r\n        # fazer merge com nome_munic e nome_estado\r\n        .merge(df_municipios_raw\r\n                    .applymap(lambda x: x.upper() if isinstance(x, str) else x)\r\n                    .loc[:,['MUNICIPIO_NOME', 'ESTADO_SIGLA', 'MUNICIPIO_CODIGO']],\r\n                left_on=['MUNICIPIO', 'UF'],\r\n                right_on = ['MUNICIPIO_NOME', 'ESTADO_SIGLA'],\r\n                how='left')\r\n        .drop(columns=['MUNICIPIO', 'UF', 'MUNICIPIO_NOME', 'ESTADO_SIGLA'])\r\n        .fillna(0)\r\n        .assign(ATENDIMENTO_IND=lambda x:x['MESTRADO_TITULADO']+x[\"MESTRADO_PROFISSIONAL_TITULADO\"])\r\n        .drop(columns=['MESTRADO_TITULADO', 'MESTRADO_PROFISSIONAL_TITULADO'])\r\n        .groupby(['ANO', 'MUNICIPIO_CODIGO']).sum('ATENDIMENTO_IND').reset_index()\r\n        .assign(GRAU_ACADEMICO='MESTRADO')\r\n        .assign(INDICADOR=list_indicador[0])\r\n        .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO'})\r\n        # .loc[lambda x:x['MUNICIPIO_CODIGO'].isna(), :]\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                          'GRAU_ACADEMICO', 'ATENDIMENTO_IND'])\r\n    )\r\n\r\n    # ind b\r\n    df_14b = \\\r\n        (df_dim_geocapes_titulacao_2022\r\n         [['MUNICIPIO', 'UF', 'ANO', 'DOUTORADO_TITULADO',\r\n           \"DOUTORADO_PROFISSIONAL_TITULADO\"]]\r\n        .assign(MUNICIPIO=lambda x:\\\r\n                x['MUNICIPIO'].replace({\"SANTA B\u00c1RBARA D\u00b4OESTE\":\"SANTA B\u00c1RBARA D'OESTE\",\r\n                                        'SANT\u00b4ANA DO LIVRAMENTO':\"SANT'ANA DO LIVRAMENTO\"}))\r\n        # corrigir erros de uf_munic da base raw\r\n        .assign(UF=lambda x:x['UF'].where(~((x['MUNICIPIO']=='PETROLINA') & (x['UF']=='BA')), 'PE'))\r\n        .assign(UF=lambda x:x['UF'].where(~((x['MUNICIPIO']=='JO\u00c3O PESSOA') & (x['UF']=='PE')), 'PB'))\r\n        .assign(UF=lambda x:x['UF'].where(~((x['MUNICIPIO']=='RIO DE JANEIRO') & (x['UF']=='BA')), 'RJ'))\r\n        # fazer merge com nome_munic e nome_estado\r\n        .merge(df_municipios_raw\r\n                    .applymap(lambda x: x.upper() if isinstance(x, str) else x)\r\n                    .loc[:,['MUNICIPIO_NOME', 'ESTADO_SIGLA', 'MUNICIPIO_CODIGO']],\r\n                left_on=['MUNICIPIO', 'UF'],\r\n                right_on = ['MUNICIPIO_NOME', 'ESTADO_SIGLA'],\r\n                how='left')\r\n        .drop(columns=['MUNICIPIO', 'UF', 'MUNICIPIO_NOME', 'ESTADO_SIGLA'])\r\n        .fillna(0)\r\n        .assign(ATENDIMENTO_IND=lambda x:x['DOUTORADO_TITULADO']+x[\"DOUTORADO_PROFISSIONAL_TITULADO\"])\r\n        .drop(columns=['DOUTORADO_TITULADO', 'DOUTORADO_PROFISSIONAL_TITULADO'])\r\n        .groupby(['ANO', 'MUNICIPIO_CODIGO']).sum('ATENDIMENTO_IND').reset_index()\r\n        .assign(GRAU_ACADEMICO='DOUTORADO')\r\n        .assign(INDICADOR=list_indicador[1])\r\n        .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO'})\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                          'GRAU_ACADEMICO', 'ATENDIMENTO_IND'])\r\n)\r\n\r\n    # meta concat\r\n    df_14_raw = pd.concat([df_14a, df_14b]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_14 = \\\r\n    (df_14_raw\r\n        .reset_index(drop=True)\r\n        .merge(\r\n            df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                          'FK_ESTADO_CODIGO', 'GRAU_ACADEMICO']],\r\n            on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR', 'GRAU_ACADEMICO'),\r\n            how='right')\r\n        .reindex(['ANO', 'FK_ESTADO_CODIGO',\r\n                  'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                  'GRAU_ACADEMICO', 'ATENDIMENTO_IND'],\r\n                 axis=1)\r\n        .fillna(0)\r\n        .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                           'FK_ESTADO_CODIGO']})\r\n        .astype({col: 'uint16' for col in ['ANO', 'ATENDIMENTO_IND']})\r\n        .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO'])\r\n        .reset_index(drop=True)\r\n    )\r\n    return df_14", "language": "python", "refs": [{"name": "info_municipios", "package": null, "version": null}], "sources": [["raw", "DIM_GEOCAPES_TITULACAO_2022"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["source.exp.raw.DIM_GEOCAPES_TITULACAO_2022", "model.exp.info_municipios"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\14-fct_meta_quatorze\\fct_meta_quatorze.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_geocapes_titulacao_2022 = dbt.source(\"raw\", \"DIM_GEOCAPES_TITULACAO_2022\")\r\n\r\n    # template\r\n    list_indicador = ['14A', '14B']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014,2022+1):\r\n            df_temp = (df_municipios_raw[['MUNICIPIO_CODIGO',\r\n                                          'ESTADO_CODIGO']].copy()\r\n                    .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                     'ESTADO_CODIGO':'FK_ESTADO_CODIGO'})\r\n                    )\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if indicador=='14A':\r\n                df_temp['GRAU_ACADEMICO']='MESTRADO'\r\n            else:\r\n                df_temp['GRAU_ACADEMICO']='DOUTORADO'\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                  .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    # ind a\r\n    df_14a = (df_dim_geocapes_titulacao_2022\r\n        [['MUNICIPIO', 'UF', 'ANO', 'MESTRADO_TITULADO',\r\n        \"MESTRADO_PROFISSIONAL_TITULADO\"]]\r\n        # .query(\"ANO==2022\")\r\n        # [['MUNICIPIO', 'UF', 'ANO', 'IES']]\r\n        .assign(MUNICIPIO=lambda x:\\\r\n                x['MUNICIPIO'].replace({\"SANTA B\u00c1RBARA D\u00b4OESTE\":\"SANTA B\u00c1RBARA D'OESTE\",\r\n                                        'SANT\u00b4ANA DO LIVRAMENTO':\"SANT'ANA DO LIVRAMENTO\"}))\r\n        # corrigir erros de uf_munic da base raw\r\n        .assign(UF=lambda x:x['UF'].where(~((x['MUNICIPIO']=='PETROLINA') & (x['UF']=='BA')), 'PE'))\r\n        .assign(UF=lambda x:x['UF'].where(~((x['MUNICIPIO']=='JO\u00c3O PESSOA') & (x['UF']=='PE')), 'PB'))\r\n        .assign(UF=lambda x:x['UF'].where(~((x['MUNICIPIO']=='RIO DE JANEIRO') & (x['UF']=='BA')), 'RJ'))\r\n        # fazer merge com nome_munic e nome_estado\r\n        .merge(df_municipios_raw\r\n                    .applymap(lambda x: x.upper() if isinstance(x, str) else x)\r\n                    .loc[:,['MUNICIPIO_NOME', 'ESTADO_SIGLA', 'MUNICIPIO_CODIGO']],\r\n                left_on=['MUNICIPIO', 'UF'],\r\n                right_on = ['MUNICIPIO_NOME', 'ESTADO_SIGLA'],\r\n                how='left')\r\n        .drop(columns=['MUNICIPIO', 'UF', 'MUNICIPIO_NOME', 'ESTADO_SIGLA'])\r\n        .fillna(0)\r\n        .assign(ATENDIMENTO_IND=lambda x:x['MESTRADO_TITULADO']+x[\"MESTRADO_PROFISSIONAL_TITULADO\"])\r\n        .drop(columns=['MESTRADO_TITULADO', 'MESTRADO_PROFISSIONAL_TITULADO'])\r\n        .groupby(['ANO', 'MUNICIPIO_CODIGO']).sum('ATENDIMENTO_IND').reset_index()\r\n        .assign(GRAU_ACADEMICO='MESTRADO')\r\n        .assign(INDICADOR=list_indicador[0])\r\n        .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO'})\r\n        # .loc[lambda x:x['MUNICIPIO_CODIGO'].isna(), :]\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                          'GRAU_ACADEMICO', 'ATENDIMENTO_IND'])\r\n    )\r\n\r\n    # ind b\r\n    df_14b = \\\r\n        (df_dim_geocapes_titulacao_2022\r\n         [['MUNICIPIO', 'UF', 'ANO', 'DOUTORADO_TITULADO',\r\n           \"DOUTORADO_PROFISSIONAL_TITULADO\"]]\r\n        .assign(MUNICIPIO=lambda x:\\\r\n                x['MUNICIPIO'].replace({\"SANTA B\u00c1RBARA D\u00b4OESTE\":\"SANTA B\u00c1RBARA D'OESTE\",\r\n                                        'SANT\u00b4ANA DO LIVRAMENTO':\"SANT'ANA DO LIVRAMENTO\"}))\r\n        # corrigir erros de uf_munic da base raw\r\n        .assign(UF=lambda x:x['UF'].where(~((x['MUNICIPIO']=='PETROLINA') & (x['UF']=='BA')), 'PE'))\r\n        .assign(UF=lambda x:x['UF'].where(~((x['MUNICIPIO']=='JO\u00c3O PESSOA') & (x['UF']=='PE')), 'PB'))\r\n        .assign(UF=lambda x:x['UF'].where(~((x['MUNICIPIO']=='RIO DE JANEIRO') & (x['UF']=='BA')), 'RJ'))\r\n        # fazer merge com nome_munic e nome_estado\r\n        .merge(df_municipios_raw\r\n                    .applymap(lambda x: x.upper() if isinstance(x, str) else x)\r\n                    .loc[:,['MUNICIPIO_NOME', 'ESTADO_SIGLA', 'MUNICIPIO_CODIGO']],\r\n                left_on=['MUNICIPIO', 'UF'],\r\n                right_on = ['MUNICIPIO_NOME', 'ESTADO_SIGLA'],\r\n                how='left')\r\n        .drop(columns=['MUNICIPIO', 'UF', 'MUNICIPIO_NOME', 'ESTADO_SIGLA'])\r\n        .fillna(0)\r\n        .assign(ATENDIMENTO_IND=lambda x:x['DOUTORADO_TITULADO']+x[\"DOUTORADO_PROFISSIONAL_TITULADO\"])\r\n        .drop(columns=['DOUTORADO_TITULADO', 'DOUTORADO_PROFISSIONAL_TITULADO'])\r\n        .groupby(['ANO', 'MUNICIPIO_CODIGO']).sum('ATENDIMENTO_IND').reset_index()\r\n        .assign(GRAU_ACADEMICO='DOUTORADO')\r\n        .assign(INDICADOR=list_indicador[1])\r\n        .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO'})\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                          'GRAU_ACADEMICO', 'ATENDIMENTO_IND'])\r\n)\r\n\r\n    # meta concat\r\n    df_14_raw = pd.concat([df_14a, df_14b]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_14 = \\\r\n    (df_14_raw\r\n        .reset_index(drop=True)\r\n        .merge(\r\n            df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                          'FK_ESTADO_CODIGO', 'GRAU_ACADEMICO']],\r\n            on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR', 'GRAU_ACADEMICO'),\r\n            how='right')\r\n        .reindex(['ANO', 'FK_ESTADO_CODIGO',\r\n                  'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                  'GRAU_ACADEMICO', 'ATENDIMENTO_IND'],\r\n                 axis=1)\r\n        .fillna(0)\r\n        .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                           'FK_ESTADO_CODIGO']})\r\n        .astype({col: 'uint16' for col in ['ANO', 'ATENDIMENTO_IND']})\r\n        .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO'])\r\n        .reset_index(drop=True)\r\n    )\r\n    return df_14\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"info_municipios\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"info_municipios\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {\"raw.DIM_GEOCAPES_TITULACAO_2022\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_GEOCAPES_TITULACAO_2022\\\"\"}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_quatorze\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_quatorze\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_quinze": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_quinze", "resource_type": "model", "package_name": "exp", "path": "serving\\15-fct_meta_quinze\\fct_meta_quinze.py", "original_file_path": "models\\serving\\15-fct_meta_quinze\\fct_meta_quinze.py", "unique_id": "model.exp.fct_meta_quinze", "fqn": ["exp", "serving", "15-fct_meta_quinze", "fct_meta_quinze"], "alias": "fct_meta_quinze", "checksum": {"name": "sha256", "checksum": "939065e02ada64974bb6303d8132eaf16edcc7d7d503a3680d398457d2a05b79"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Garantir, em regime de colabora\u00e7\u00e3o entre a uni\u00e3o, os estados, o distrito federal e os munic\u00edpios, no prazo de 1 (um) ano de vig\u00eancia deste PNE, pol\u00edtica nacional de forma\u00e7\u00e3o dos profissionais da educa\u00e7\u00e3o de que tratam os incisos i, ii e iii do caput do art. 61 da lei n\u00ba 9.394, de 20 de dezembro de 1996, assegurado que todos os professores e as professoras da educa\u00e7\u00e3o b\u00e1sica possuam forma\u00e7\u00e3o espec\u00edfica de n\u00edvel superior, obtida em curso de licenciatura na \u00e1rea de conhecimento em que atuam.", "columns": {"ANO": {"name": "ANO", "description": "Ano do registro.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_ESTADO_CODIGO": {"name": "FK_ESTADO_CODIGO", "description": "C\u00f3digo do Estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do Munic\u00edpio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "INDICADOR": {"name": "INDICADOR", "description": "Define a qual indicador o registro pertence. 15A - Propor\u00e7\u00e3o de doc\u00eancias da educa\u00e7\u00e3o infantil com professores cuja forma\u00e7\u00e3o superior est\u00e1 adequada \u00e0 \u00e1rea de conhecimento que lecionam. 15B - Propor\u00e7\u00e3o de doc\u00eancias dos anos iniciais do ensino fundamental com professores cuja forma\u00e7\u00e3o superior est\u00e1 adequada \u00e0 \u00e1rea de conhecimento que lecionam. 15C - Propor\u00e7\u00e3o de doc\u00eancias dos anos finais do ensino fundamental com professores cuja forma\u00e7\u00e3o superior est\u00e1 adequada \u00e0 \u00e1rea de conhecimento que lecionam. 15D - Propor\u00e7\u00e3o de doc\u00eancias do Ensino M\u00e9dio com professores cuja forma\u00e7\u00e3o superior est\u00e1 adequada \u00e0 \u00e1rea de conhecimento que lecionam.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "FORMACAO_ADEQUADA": {"name": "FORMACAO_ADEQUADA", "description": "Quantidade de disciplinas lecionadas cujo docente possui forma\u00e7\u00e3o adequada a disciplina.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "DOCENCIA_TOTAL": {"name": "DOCENCIA_TOTAL", "description": "Quantidade total de disciplinas lecionadas.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "ATENDIMENTO_IND": {"name": "ATENDIMENTO_IND", "description": "N\u00edvel de atendimento do Indicador.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\serving\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.7549875, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_quinze\"", "raw_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_educ_bas_docentes_15 = dbt.ref(\"dim_educ_bas_docentes_15_group\")\r\n\r\n    # template\r\n    list_indicador = ['15A', '15B','15C','15D']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014,2020+1):\r\n            df_temp = (df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']].copy()\r\n                       .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                        'ESTADO_CODIGO':'FK_ESTADO_CODIGO'}))\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = pd.concat([df_ano_munic, df_temp]).reset_index(drop=True)\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    # ind a\r\n    df_15a = \\\r\n        (df_dim_educ_bas_docentes_15\r\n            .assign(INDICADOR=list_indicador[0])\r\n            .query('ETAPA==\"1_ENSINO_INFANTIL\"')\r\n            .assign(ATENDIMENTO_IND=\\\r\n                lambda x:round((x[\"FORMACAO_ADEQUADA\"])/x[\"DOCENCIA_TOTAL\"],4) * 100)\r\n            .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                              'FORMACAO_ADEQUADA', 'DOCENCIA_TOTAL',\r\n                              'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind b\r\n    df_15b = \\\r\n        (df_dim_educ_bas_docentes_15\r\n            .assign(INDICADOR=list_indicador[1])\r\n            .query('ETAPA==\"2_FUND_ANOS_INICIAIS\"')\r\n            .assign(ATENDIMENTO_IND=\\\r\n                lambda x:round((x[\"FORMACAO_ADEQUADA\"])/x[\"DOCENCIA_TOTAL\"],4) * 100)\r\n            .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                              'FORMACAO_ADEQUADA', 'DOCENCIA_TOTAL',\r\n                              'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind c\r\n    df_15c = \\\r\n        (df_dim_educ_bas_docentes_15\r\n            .assign(INDICADOR=list_indicador[2])\r\n            .query('ETAPA==\"3_FUND_ANOS_FINAIS\"')\r\n            .assign(ATENDIMENTO_IND=\\\r\n                lambda x:round((x[\"FORMACAO_ADEQUADA\"])/x[\"DOCENCIA_TOTAL\"],4) * 100)\r\n            .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                              'FORMACAO_ADEQUADA', 'DOCENCIA_TOTAL',\r\n                              'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind d\r\n    df_15d = \\\r\n        (df_dim_educ_bas_docentes_15\r\n            .assign(INDICADOR=list_indicador[3])\r\n            .query('ETAPA==\"4_ENSINO_MEDIO\"')\r\n            .assign(ATENDIMENTO_IND=\\\r\n                lambda x:round((x[\"FORMACAO_ADEQUADA\"])/x[\"DOCENCIA_TOTAL\"],4) * 100)\r\n            .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                              'FORMACAO_ADEQUADA', 'DOCENCIA_TOTAL',\r\n                              'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # meta concat\r\n    df_15_raw = pd.concat([df_15a, df_15b, df_15c, df_15d]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_15 = \\\r\n        (df_15_raw\r\n            .reset_index(drop=True)\r\n            .merge(\r\n                df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                              'FK_ESTADO_CODIGO']],\r\n                on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n                how='right')\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                      'INDICADOR', 'FORMACAO_ADEQUADA', 'DOCENCIA_TOTAL',\r\n                      'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .fillna(0)\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                               'FK_ESTADO_CODIGO',\r\n                                               'FORMACAO_ADEQUADA',\r\n                                               'DOCENCIA_TOTAL']})\r\n            .astype({'ANO':'uint16'})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_15", "language": "python", "refs": [{"name": "info_municipios", "package": null, "version": null}, {"name": "dim_educ_bas_docentes_15_group", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["model.exp.info_municipios", "model.exp.dim_educ_bas_docentes_15_group"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\15-fct_meta_quinze\\fct_meta_quinze.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_educ_bas_docentes_15 = dbt.ref(\"dim_educ_bas_docentes_15_group\")\r\n\r\n    # template\r\n    list_indicador = ['15A', '15B','15C','15D']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014,2020+1):\r\n            df_temp = (df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']].copy()\r\n                       .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                        'ESTADO_CODIGO':'FK_ESTADO_CODIGO'}))\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = pd.concat([df_ano_munic, df_temp]).reset_index(drop=True)\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    # ind a\r\n    df_15a = \\\r\n        (df_dim_educ_bas_docentes_15\r\n            .assign(INDICADOR=list_indicador[0])\r\n            .query('ETAPA==\"1_ENSINO_INFANTIL\"')\r\n            .assign(ATENDIMENTO_IND=\\\r\n                lambda x:round((x[\"FORMACAO_ADEQUADA\"])/x[\"DOCENCIA_TOTAL\"],4) * 100)\r\n            .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                              'FORMACAO_ADEQUADA', 'DOCENCIA_TOTAL',\r\n                              'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind b\r\n    df_15b = \\\r\n        (df_dim_educ_bas_docentes_15\r\n            .assign(INDICADOR=list_indicador[1])\r\n            .query('ETAPA==\"2_FUND_ANOS_INICIAIS\"')\r\n            .assign(ATENDIMENTO_IND=\\\r\n                lambda x:round((x[\"FORMACAO_ADEQUADA\"])/x[\"DOCENCIA_TOTAL\"],4) * 100)\r\n            .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                              'FORMACAO_ADEQUADA', 'DOCENCIA_TOTAL',\r\n                              'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind c\r\n    df_15c = \\\r\n        (df_dim_educ_bas_docentes_15\r\n            .assign(INDICADOR=list_indicador[2])\r\n            .query('ETAPA==\"3_FUND_ANOS_FINAIS\"')\r\n            .assign(ATENDIMENTO_IND=\\\r\n                lambda x:round((x[\"FORMACAO_ADEQUADA\"])/x[\"DOCENCIA_TOTAL\"],4) * 100)\r\n            .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                              'FORMACAO_ADEQUADA', 'DOCENCIA_TOTAL',\r\n                              'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind d\r\n    df_15d = \\\r\n        (df_dim_educ_bas_docentes_15\r\n            .assign(INDICADOR=list_indicador[3])\r\n            .query('ETAPA==\"4_ENSINO_MEDIO\"')\r\n            .assign(ATENDIMENTO_IND=\\\r\n                lambda x:round((x[\"FORMACAO_ADEQUADA\"])/x[\"DOCENCIA_TOTAL\"],4) * 100)\r\n            .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                              'FORMACAO_ADEQUADA', 'DOCENCIA_TOTAL',\r\n                              'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # meta concat\r\n    df_15_raw = pd.concat([df_15a, df_15b, df_15c, df_15d]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_15 = \\\r\n        (df_15_raw\r\n            .reset_index(drop=True)\r\n            .merge(\r\n                df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                              'FK_ESTADO_CODIGO']],\r\n                on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n                how='right')\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                      'INDICADOR', 'FORMACAO_ADEQUADA', 'DOCENCIA_TOTAL',\r\n                      'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .fillna(0)\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                               'FK_ESTADO_CODIGO',\r\n                                               'FORMACAO_ADEQUADA',\r\n                                               'DOCENCIA_TOTAL']})\r\n            .astype({'ANO':'uint16'})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_15\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_educ_bas_docentes_15_group\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_educ_bas_docentes_15_group\\\"\", \"info_municipios\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"info_municipios\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_quinze\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_quinze\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_dezesseis": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_dezesseis", "resource_type": "model", "package_name": "exp", "path": "serving\\16-fct_meta_dezesseis\\fct_meta_dezesseis.py", "original_file_path": "models\\serving\\16-fct_meta_dezesseis\\fct_meta_dezesseis.py", "unique_id": "model.exp.fct_meta_dezesseis", "fqn": ["exp", "serving", "16-fct_meta_dezesseis", "fct_meta_dezesseis"], "alias": "fct_meta_dezesseis", "checksum": {"name": "sha256", "checksum": "889b4468b7c663f3768daf76953aa00f7c7f92fb945c50d84ee17ded375aecf1"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Formar, em n\u00edvel de p\u00f3s-gradua\u00e7\u00e3o, 50% (cinquenta por cento) dos professores da educa\u00e7\u00e3o b\u00e1sica, at\u00e9 o \u00faltimo ano de vig\u00eancia deste PNE, e garantir a todos(as) os(as) profissionais da educa\u00e7\u00e3o b\u00e1sica forma\u00e7\u00e3o continuada em sua \u00e1rea de atua\u00e7\u00e3o, considerando as necessidades, demandas e contextualiza\u00e7\u00f5es dos sistemas de ensino.", "columns": {"ANO": {"name": "ANO", "description": "Ano do registro.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_ESTADO_CODIGO": {"name": "FK_ESTADO_CODIGO", "description": "C\u00f3digo do Estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do Munic\u00edpio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "INDICADOR": {"name": "INDICADOR", "description": "Define a qual indicador o registro pertence. 16A - Percentual de professores da educa\u00e7\u00e3o b\u00e1sica com p\u00f3s-gradua\u00e7\u00e3o lato sensu ou stricto sensu. 16B - Percentual de professores com forma\u00e7\u00e3o continuada.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "QT_PROF": {"name": "QT_PROF", "description": "Quantidade de professores.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "POSSUI_POS": {"name": "POSSUI_POS", "description": "Quantidade de professores da educa\u00e7\u00e3o b\u00e1sica com p\u00f3s-gradua\u00e7\u00e3o lato sensu ou stricto sensu.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "POSSUI_FC": {"name": "POSSUI_FC", "description": "Quantidade de professores com forma\u00e7\u00e3o continuada.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "ATENDIMENTO_IND": {"name": "ATENDIMENTO_IND", "description": "N\u00edvel de atendimento do Indicador.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\serving\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.759983, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_dezesseis\"", "raw_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_educ_bas_docentes_16 = dbt.ref(\"dim_educ_bas_docentes_16\")\r\n\r\n    # template\r\n    list_indicador = ['16A', '16B']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014,2020+1):\r\n            df_temp = (df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']]\r\n                .copy()\r\n                .rename(columns={'MUNICIPIO_CODIGO': 'FK_MUNICIPIO_CODIGO',\r\n                                 'ESTADO_CODIGO': 'FK_ESTADO_CODIGO'}))\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                  .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    # ind a\r\n    df_16a = \\\r\n        (df_dim_educ_bas_docentes_16\r\n            .assign(INDICADOR=list_indicador[0])\r\n            .assign(ATENDIMENTO_IND=\\\r\n                lambda x:round((x.POSSUI_POS)/x.QT_PROF,4) * 100)\r\n            .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                              'QT_PROF', 'POSSUI_POS', 'POSSUI_FC',\r\n                              'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind b\r\n    df_16b = \\\r\n        (df_dim_educ_bas_docentes_16\r\n            .assign(INDICADOR=list_indicador[1])\r\n            .assign(ATENDIMENTO_IND=\\\r\n                lambda x:round((x.POSSUI_FC)/x.QT_PROF,4) * 100)\r\n            .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                              'QT_PROF', 'POSSUI_POS', 'POSSUI_FC',\r\n                              'ATENDIMENTO_IND'])\r\n        )\r\n\r\n\r\n    # meta concat\r\n    df_16_raw = pd.concat([df_16a, df_16b]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_16 = \\\r\n        (df_16_raw\r\n            .reset_index(drop=True)\r\n            .merge(\r\n                df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                            'FK_ESTADO_CODIGO']],\r\n                on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n                how='right')\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO',\r\n                    'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                    'QT_PROF', 'POSSUI_POS', 'POSSUI_FC',\r\n                    'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .fillna(0)\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                               'FK_ESTADO_CODIGO', 'QT_PROF',\r\n                                               'POSSUI_POS', 'POSSUI_FC']})\r\n            .astype({'ANO':'uint16'})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_16", "language": "python", "refs": [{"name": "info_municipios", "package": null, "version": null}, {"name": "dim_educ_bas_docentes_16", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["model.exp.info_municipios", "model.exp.dim_educ_bas_docentes_16"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\16-fct_meta_dezesseis\\fct_meta_dezesseis.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_educ_bas_docentes_16 = dbt.ref(\"dim_educ_bas_docentes_16\")\r\n\r\n    # template\r\n    list_indicador = ['16A', '16B']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014,2020+1):\r\n            df_temp = (df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']]\r\n                .copy()\r\n                .rename(columns={'MUNICIPIO_CODIGO': 'FK_MUNICIPIO_CODIGO',\r\n                                 'ESTADO_CODIGO': 'FK_ESTADO_CODIGO'}))\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                  .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    # ind a\r\n    df_16a = \\\r\n        (df_dim_educ_bas_docentes_16\r\n            .assign(INDICADOR=list_indicador[0])\r\n            .assign(ATENDIMENTO_IND=\\\r\n                lambda x:round((x.POSSUI_POS)/x.QT_PROF,4) * 100)\r\n            .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                              'QT_PROF', 'POSSUI_POS', 'POSSUI_FC',\r\n                              'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind b\r\n    df_16b = \\\r\n        (df_dim_educ_bas_docentes_16\r\n            .assign(INDICADOR=list_indicador[1])\r\n            .assign(ATENDIMENTO_IND=\\\r\n                lambda x:round((x.POSSUI_FC)/x.QT_PROF,4) * 100)\r\n            .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                              'QT_PROF', 'POSSUI_POS', 'POSSUI_FC',\r\n                              'ATENDIMENTO_IND'])\r\n        )\r\n\r\n\r\n    # meta concat\r\n    df_16_raw = pd.concat([df_16a, df_16b]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_16 = \\\r\n        (df_16_raw\r\n            .reset_index(drop=True)\r\n            .merge(\r\n                df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                            'FK_ESTADO_CODIGO']],\r\n                on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n                how='right')\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO',\r\n                    'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                    'QT_PROF', 'POSSUI_POS', 'POSSUI_FC',\r\n                    'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .fillna(0)\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                               'FK_ESTADO_CODIGO', 'QT_PROF',\r\n                                               'POSSUI_POS', 'POSSUI_FC']})\r\n            .astype({'ANO':'uint16'})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_16\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_educ_bas_docentes_16\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_educ_bas_docentes_16\\\"\", \"info_municipios\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"info_municipios\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_dezesseis\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_dezesseis\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fcf_meta_dezessete": {"database": "postgres", "schema": "dbt_serving", "name": "fcf_meta_dezessete", "resource_type": "model", "package_name": "exp", "path": "serving\\17-fcf_meta_dezessete\\fcf_meta_dezessete.py", "original_file_path": "models\\serving\\17-fcf_meta_dezessete\\fcf_meta_dezessete.py", "unique_id": "model.exp.fcf_meta_dezessete", "fqn": ["exp", "serving", "17-fcf_meta_dezessete", "fcf_meta_dezessete"], "alias": "fcf_meta_dezessete", "checksum": {"name": "sha256", "checksum": "00a5ad77afa9e7fc27e4bb88dcb6ffd83319bba9e5db31e708de8de3582ed758"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Valorizar os(as) profissionais do magist\u00e9rio das redes p\u00fablicas de educa\u00e7\u00e3o b\u00e1sica, de forma a equiparar seu rendimento m\u00e9dio ao dos(as) demais profissionais com escolaridade equivalente, at\u00e9 o final do sexto ano de vig\u00eancia deste pne.", "columns": {"ANO": {"name": "ANO", "description": "Ano do registro.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_ESTADO_CODIGO": {"name": "FK_ESTADO_CODIGO", "description": "C\u00f3digo do Estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do Munic\u00edpio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "INDICADOR": {"name": "INDICADOR", "description": "Define a qual indicador o registro pertence. 17A - Rela\u00e7\u00e3o percentual entre o rendimento bruto m\u00e9dio mensal dos profissionais do magist\u00e9rio das redes p\u00fablicas da educa\u00e7\u00e3o b\u00e1sica, com n\u00edvel superior completo, e o rendimento bruto m\u00e9dio mensal dos demais profissionais assalariados, com n\u00edvel superior completo.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "RENDIMENTO_PROF_PUBLICOS_GRADUADOS": {"name": "RENDIMENTO_PROF_PUBLICOS_GRADUADOS", "description": "Rendimento bruto m\u00e9dio mensal dos profissionais do magist\u00e9rio das redes p\u00fablicas de educa\u00e7\u00e3o b\u00e1sica, com n\u00edvel de instru\u00e7\u00e3o superior completo.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}, "RENDIMENTO_GRADUADOS": {"name": "RENDIMENTO_GRADUADOS", "description": "Rendimento bruto m\u00e9dio mensal dos demais profissionais assalariados, com n\u00edvel de instru\u00e7\u00e3o supeior completo.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "ATENDIMENTO_IND": {"name": "ATENDIMENTO_IND", "description": "N\u00edvel de atendimento do Indicador.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\serving\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.764983, "relation_name": "\"postgres\".\"dbt_serving\".\"fcf_meta_dezessete\"", "raw_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_staging: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    dim_rais_17 = dbt.ref(\"dim_rais_17\")\r\n\r\n    # template\r\n    list_indicador = ['17A']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014, 2022+1):\r\n            df_temp = (\r\n                df_municipios_staging[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']].copy()\r\n                .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                'ESTADO_CODIGO':'FK_ESTADO_CODIGO'})\r\n                )\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    # ind a\r\n    df_17a = \\\r\n    (dim_rais_17\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .assign(INDICADOR=list_indicador[0])\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n                round(x['RENDIMENTO_PROF_PUBLICOS_GRADUADOS']/\r\n                      x['RENDIMENTO_GRADUADOS'],4)*100)\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                          'RENDIMENTO_PROF_PUBLICOS_GRADUADOS',\r\n                          'RENDIMENTO_GRADUADOS', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # meta concat\r\n    df_17_raw = pd.concat([df_17a]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_17 = \\\r\n        (df_17_raw\r\n            .reset_index(drop=True)\r\n            .merge(\r\n                df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                              'FK_ESTADO_CODIGO']],\r\n                on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n                how='right')\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                      'INDICADOR', 'RENDIMENTO_PROF_PUBLICOS_GRADUADOS',\r\n                      'RENDIMENTO_GRADUADOS', 'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .fillna(0)\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                               'FK_ESTADO_CODIGO']})\r\n            .astype({'ANO':'uint16'})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_17", "language": "python", "refs": [{"name": "info_municipios", "package": null, "version": null}, {"name": "dim_rais_17", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["model.exp.info_municipios", "model.exp.dim_rais_17"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\17-fcf_meta_dezessete\\fcf_meta_dezessete.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_staging: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    dim_rais_17 = dbt.ref(\"dim_rais_17\")\r\n\r\n    # template\r\n    list_indicador = ['17A']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014, 2022+1):\r\n            df_temp = (\r\n                df_municipios_staging[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']].copy()\r\n                .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                'ESTADO_CODIGO':'FK_ESTADO_CODIGO'})\r\n                )\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    # ind a\r\n    df_17a = \\\r\n    (dim_rais_17\r\n        .assign(ANO=lambda x:x['ANO'].astype(int))\r\n        .assign(INDICADOR=list_indicador[0])\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n                round(x['RENDIMENTO_PROF_PUBLICOS_GRADUADOS']/\r\n                      x['RENDIMENTO_GRADUADOS'],4)*100)\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                          'RENDIMENTO_PROF_PUBLICOS_GRADUADOS',\r\n                          'RENDIMENTO_GRADUADOS', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # meta concat\r\n    df_17_raw = pd.concat([df_17a]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_17 = \\\r\n        (df_17_raw\r\n            .reset_index(drop=True)\r\n            .merge(\r\n                df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                              'FK_ESTADO_CODIGO']],\r\n                on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n                how='right')\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                      'INDICADOR', 'RENDIMENTO_PROF_PUBLICOS_GRADUADOS',\r\n                      'RENDIMENTO_GRADUADOS', 'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .fillna(0)\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                               'FK_ESTADO_CODIGO']})\r\n            .astype({'ANO':'uint16'})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_17\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_rais_17\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_rais_17\\\"\", \"info_municipios\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"info_municipios\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fcf_meta_dezessete\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fcf_meta_dezessete\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_dezoito_estadic": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_dezoito_estadic", "resource_type": "model", "package_name": "exp", "path": "serving\\18-fcf_meta_dezoito\\fct_meta_dezoito_estadic.py", "original_file_path": "models\\serving\\18-fcf_meta_dezoito\\fct_meta_dezoito_estadic.py", "unique_id": "model.exp.fct_meta_dezoito_estadic", "fqn": ["exp", "serving", "18-fcf_meta_dezoito", "fct_meta_dezoito_estadic"], "alias": "fct_meta_dezoito_estadic", "checksum": {"name": "sha256", "checksum": "181f544141bb70feb633d9444b92a77090a54f49096af383b0bca0c3e7ce9c5f"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.4843388, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_dezoito_estadic\"", "raw_code": "import numpy as np\r\nimport pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_estadic_educ = dbt.ref(\"dim_estadic_educ\")\r\n\r\n    # template\r\n    list_indicador_estadic = ['18A','18B','18C','18D']\r\n\r\n    # ind a\r\n    df_18a = \\\r\n    (df_dim_estadic_educ\r\n        .reindex(columns=['ANO','FK_ESTADO_CODIGO','EEDU16'])\r\n        .assign(INDICADOR=list_indicador_estadic[0])\r\n        .rename(columns={'EEDU16':'ATENDIMENTO_IND'})\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'Sim':1, np.nan:-1,'N\u00e3o':0}))\r\n        .astype({'ATENDIMENTO_IND':np.int8})\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO',\r\n                          'INDICADOR','ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind b\r\n    df_18b = \\\r\n    (df_dim_estadic_educ\r\n        .reindex(columns=['ANO','FK_ESTADO_CODIGO',\r\n                          'EEDU18'])\r\n        .assign(INDICADOR=list_indicador_estadic[1])\r\n        .rename(columns={'EEDU18':'ATENDIMENTO_IND'})\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'Sim':1, np.nan:-1,'N\u00e3o':0}))\r\n        .astype({'ATENDIMENTO_IND':np.int8})\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO',\r\n                          'INDICADOR', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind c\r\n    df_18c = \\\r\n    (df_dim_estadic_educ\r\n        .reindex(columns=['ANO','FK_ESTADO_CODIGO',\r\n                          'EEDU20'])\r\n        .assign(INDICADOR=list_indicador_estadic[2])\r\n        .rename(columns={'EEDU20':'ATENDIMENTO_IND'})\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'Sim':1, np.nan:-1,'N\u00e3o':0}))\r\n        .astype({'ATENDIMENTO_IND':np.int8})\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO',\r\n                          'INDICADOR', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind d\r\n    df_18d = \\\r\n    (df_dim_estadic_educ\r\n        .reindex(columns=['ANO','FK_ESTADO_CODIGO',\r\n                          'EEDU21'])\r\n        .assign(INDICADOR=list_indicador_estadic[3])\r\n        .rename(columns={'EEDU21':'ATENDIMENTO_IND'})\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'Sim':1, np.nan:-1,'N\u00e3o':0}))\r\n        .astype({'ATENDIMENTO_IND':np.int8})\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO',\r\n                          'INDICADOR','ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # meta concat\r\n    df_18_estadic_raw = pd.concat([df_18a, df_18b,\r\n                                   df_18c, df_18d]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_18_estadic = \\\r\n        (df_18_estadic_raw\r\n            .reset_index(drop=True)\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO', 'INDICADOR',\r\n                      'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .fillna(0)\r\n            .astype({col: 'uint32' for col in ['FK_ESTADO_CODIGO']})\r\n            .astype({'ANO':'uint16'})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_ESTADO_CODIGO'])\r\n            .reset_index(drop=True))\r\n    return df_18_estadic", "language": "python", "refs": [{"name": "dim_estadic_educ", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["model.exp.dim_estadic_educ"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\18-fcf_meta_dezoito\\fct_meta_dezoito_estadic.py", "compiled": true, "compiled_code": "import numpy as np\r\nimport pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_estadic_educ = dbt.ref(\"dim_estadic_educ\")\r\n\r\n    # template\r\n    list_indicador_estadic = ['18A','18B','18C','18D']\r\n\r\n    # ind a\r\n    df_18a = \\\r\n    (df_dim_estadic_educ\r\n        .reindex(columns=['ANO','FK_ESTADO_CODIGO','EEDU16'])\r\n        .assign(INDICADOR=list_indicador_estadic[0])\r\n        .rename(columns={'EEDU16':'ATENDIMENTO_IND'})\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'Sim':1, np.nan:-1,'N\u00e3o':0}))\r\n        .astype({'ATENDIMENTO_IND':np.int8})\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO',\r\n                          'INDICADOR','ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind b\r\n    df_18b = \\\r\n    (df_dim_estadic_educ\r\n        .reindex(columns=['ANO','FK_ESTADO_CODIGO',\r\n                          'EEDU18'])\r\n        .assign(INDICADOR=list_indicador_estadic[1])\r\n        .rename(columns={'EEDU18':'ATENDIMENTO_IND'})\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'Sim':1, np.nan:-1,'N\u00e3o':0}))\r\n        .astype({'ATENDIMENTO_IND':np.int8})\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO',\r\n                          'INDICADOR', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind c\r\n    df_18c = \\\r\n    (df_dim_estadic_educ\r\n        .reindex(columns=['ANO','FK_ESTADO_CODIGO',\r\n                          'EEDU20'])\r\n        .assign(INDICADOR=list_indicador_estadic[2])\r\n        .rename(columns={'EEDU20':'ATENDIMENTO_IND'})\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'Sim':1, np.nan:-1,'N\u00e3o':0}))\r\n        .astype({'ATENDIMENTO_IND':np.int8})\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO',\r\n                          'INDICADOR', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind d\r\n    df_18d = \\\r\n    (df_dim_estadic_educ\r\n        .reindex(columns=['ANO','FK_ESTADO_CODIGO',\r\n                          'EEDU21'])\r\n        .assign(INDICADOR=list_indicador_estadic[3])\r\n        .rename(columns={'EEDU21':'ATENDIMENTO_IND'})\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'Sim':1, np.nan:-1,'N\u00e3o':0}))\r\n        .astype({'ATENDIMENTO_IND':np.int8})\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO',\r\n                          'INDICADOR','ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # meta concat\r\n    df_18_estadic_raw = pd.concat([df_18a, df_18b,\r\n                                   df_18c, df_18d]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_18_estadic = \\\r\n        (df_18_estadic_raw\r\n            .reset_index(drop=True)\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO', 'INDICADOR',\r\n                      'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .fillna(0)\r\n            .astype({col: 'uint32' for col in ['FK_ESTADO_CODIGO']})\r\n            .astype({'ANO':'uint16'})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_ESTADO_CODIGO'])\r\n            .reset_index(drop=True))\r\n    return df_18_estadic\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_estadic_educ\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_estadic_educ\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_dezoito_estadic\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_dezoito_estadic\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_dezoito_munic": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_dezoito_munic", "resource_type": "model", "package_name": "exp", "path": "serving\\18-fcf_meta_dezoito\\fct_meta_dezoito_munic.py", "original_file_path": "models\\serving\\18-fcf_meta_dezoito\\fct_meta_dezoito_munic.py", "unique_id": "model.exp.fct_meta_dezoito_munic", "fqn": ["exp", "serving", "18-fcf_meta_dezoito", "fct_meta_dezoito_munic"], "alias": "fct_meta_dezoito_munic", "checksum": {"name": "sha256", "checksum": "6f4d8b489f9fe0bfeae875e1ca677d1a2cbd57d1be5f0a42c699666d7276046d"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.4893382, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_dezoito_munic\"", "raw_code": "import numpy as np\r\nimport pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_munic_educ = dbt.ref(\"dim_munic_educ\")\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n\r\n    # template\r\n    list_indicador_munic = ['18E','18F','18G','18H']\r\n\r\n    # ind e\r\n    df_18e = \\\r\n    (df_dim_munic_educ\r\n        .reindex(columns=['ANO','FK_MUNICIPIO_CODIGO','MEDU16'])\r\n        .assign(INDICADOR=list_indicador_munic[0])\r\n        .rename(columns={'MEDU16':'ATENDIMENTO_IND'})\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'Sim':1, np.nan:-1,'N\u00e3o':0,\r\n                                          'N\u00e3o informado':-1,'Recusa':-1,\r\n                                          'N\u00e3o informou':-1}))\r\n        .astype({'ATENDIMENTO_IND':np.int8})\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind f\r\n    df_18f = \\\r\n    (df_dim_munic_educ\r\n        .reindex(columns=['ANO','FK_MUNICIPIO_CODIGO','MEDU18'])\r\n        .assign(INDICADOR=list_indicador_munic[1])\r\n        .rename(columns={'MEDU18':'ATENDIMENTO_IND'})\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'Sim':1, np.nan:-1,'N\u00e3o':0,\r\n                                          '(*) N\u00e3o soube informar':-1,\r\n                                          'Recusa':-1,'N\u00e3o informou':-1,\r\n                                          '-':-1}))\r\n        .astype({'ATENDIMENTO_IND':np.int8})\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind g\r\n    df_18g = \\\r\n    (df_dim_munic_educ\r\n        .reindex(columns=['ANO','FK_MUNICIPIO_CODIGO','MEDU20A'])\r\n        .assign(INDICADOR=list_indicador_munic[2])\r\n        .rename(columns={'MEDU20A':'ATENDIMENTO_IND'})\r\n        .assign(ATENDIMENTO_IND=lambda x: x['ATENDIMENTO_IND'].replace(\r\n            {np.nan:0, 'Sim':1, 'N\u00e3o':0,\r\n             'N\u00e3o h\u00e1 professores com jornada de 40 horas semanais':-2,\r\n             'Recusa':-1, 'N\u00e3o informou':-1}))\r\n        .astype({'ATENDIMENTO_IND':np.int8})\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind h\r\n    df_18h = \\\r\n    (df_dim_munic_educ\r\n        .reindex(columns=['ANO','FK_MUNICIPIO_CODIGO','MEDU21'])\r\n        .assign(INDICADOR=list_indicador_munic[3])\r\n        .rename(columns={'MEDU21':'ATENDIMENTO_IND'})\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({np.nan:-1, 'N\u00e3o':0, 'Sim':1,\r\n                                          'Recusa':-1, 'N\u00e3o informou':-1}))\r\n        .astype({'ATENDIMENTO_IND':np.int8})\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # meta concat\r\n    df_18_munic_raw = pd.concat([df_18e, df_18f,\r\n                                 df_18g, df_18h]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_18_munic = \\\r\n        (df_18_munic_raw\r\n            .reset_index(drop=True)\r\n            .merge(\r\n                (df_municipios_raw.rename(\r\n                    columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                            'ESTADO_CODIGO':'FK_ESTADO_CODIGO'})\r\n                .reindex(columns=['FK_MUNICIPIO_CODIGO','FK_ESTADO_CODIGO'])),\r\n                on=('FK_MUNICIPIO_CODIGO'),\r\n                how='left')\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO',\r\n                    'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                    'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .fillna(0)\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO', 'FK_ESTADO_CODIGO']})\r\n            .astype({'ANO':'uint16'})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_18_munic", "language": "python", "refs": [{"name": "dim_munic_educ", "package": null, "version": null}, {"name": "info_municipios", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["model.exp.dim_munic_educ", "model.exp.info_municipios"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\18-fcf_meta_dezoito\\fct_meta_dezoito_munic.py", "compiled": true, "compiled_code": "import numpy as np\r\nimport pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_munic_educ = dbt.ref(\"dim_munic_educ\")\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n\r\n    # template\r\n    list_indicador_munic = ['18E','18F','18G','18H']\r\n\r\n    # ind e\r\n    df_18e = \\\r\n    (df_dim_munic_educ\r\n        .reindex(columns=['ANO','FK_MUNICIPIO_CODIGO','MEDU16'])\r\n        .assign(INDICADOR=list_indicador_munic[0])\r\n        .rename(columns={'MEDU16':'ATENDIMENTO_IND'})\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'Sim':1, np.nan:-1,'N\u00e3o':0,\r\n                                          'N\u00e3o informado':-1,'Recusa':-1,\r\n                                          'N\u00e3o informou':-1}))\r\n        .astype({'ATENDIMENTO_IND':np.int8})\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind f\r\n    df_18f = \\\r\n    (df_dim_munic_educ\r\n        .reindex(columns=['ANO','FK_MUNICIPIO_CODIGO','MEDU18'])\r\n        .assign(INDICADOR=list_indicador_munic[1])\r\n        .rename(columns={'MEDU18':'ATENDIMENTO_IND'})\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({'Sim':1, np.nan:-1,'N\u00e3o':0,\r\n                                          '(*) N\u00e3o soube informar':-1,\r\n                                          'Recusa':-1,'N\u00e3o informou':-1,\r\n                                          '-':-1}))\r\n        .astype({'ATENDIMENTO_IND':np.int8})\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind g\r\n    df_18g = \\\r\n    (df_dim_munic_educ\r\n        .reindex(columns=['ANO','FK_MUNICIPIO_CODIGO','MEDU20A'])\r\n        .assign(INDICADOR=list_indicador_munic[2])\r\n        .rename(columns={'MEDU20A':'ATENDIMENTO_IND'})\r\n        .assign(ATENDIMENTO_IND=lambda x: x['ATENDIMENTO_IND'].replace(\r\n            {np.nan:0, 'Sim':1, 'N\u00e3o':0,\r\n             'N\u00e3o h\u00e1 professores com jornada de 40 horas semanais':-2,\r\n             'Recusa':-1, 'N\u00e3o informou':-1}))\r\n        .astype({'ATENDIMENTO_IND':np.int8})\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind h\r\n    df_18h = \\\r\n    (df_dim_munic_educ\r\n        .reindex(columns=['ANO','FK_MUNICIPIO_CODIGO','MEDU21'])\r\n        .assign(INDICADOR=list_indicador_munic[3])\r\n        .rename(columns={'MEDU21':'ATENDIMENTO_IND'})\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n            x['ATENDIMENTO_IND'].replace({np.nan:-1, 'N\u00e3o':0, 'Sim':1,\r\n                                          'Recusa':-1, 'N\u00e3o informou':-1}))\r\n        .astype({'ATENDIMENTO_IND':np.int8})\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # meta concat\r\n    df_18_munic_raw = pd.concat([df_18e, df_18f,\r\n                                 df_18g, df_18h]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_18_munic = \\\r\n        (df_18_munic_raw\r\n            .reset_index(drop=True)\r\n            .merge(\r\n                (df_municipios_raw.rename(\r\n                    columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                            'ESTADO_CODIGO':'FK_ESTADO_CODIGO'})\r\n                .reindex(columns=['FK_MUNICIPIO_CODIGO','FK_ESTADO_CODIGO'])),\r\n                on=('FK_MUNICIPIO_CODIGO'),\r\n                how='left')\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO',\r\n                    'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                    'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .fillna(0)\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO', 'FK_ESTADO_CODIGO']})\r\n            .astype({'ANO':'uint16'})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_18_munic\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_munic_educ\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_munic_educ\\\"\", \"info_municipios\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"info_municipios\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_dezoito_munic\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_dezoito_munic\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_dezenove_estadic": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_dezenove_estadic", "resource_type": "model", "package_name": "exp", "path": "serving\\19-fcf_meta_dezenove\\fct_meta_dezenove_estadic.py", "original_file_path": "models\\serving\\19-fcf_meta_dezenove\\fct_meta_dezenove_estadic.py", "unique_id": "model.exp.fct_meta_dezenove_estadic", "fqn": ["exp", "serving", "19-fcf_meta_dezenove", "fct_meta_dezenove_estadic"], "alias": "fct_meta_dezenove_estadic", "checksum": {"name": "sha256", "checksum": "cdd1f27eb8ffaf0684f6997a5f4829f99d293500f7f419098acdacf123186270"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.49434, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_dezenove_estadic\"", "raw_code": "import numpy as np\r\nimport pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_estadic_educ = dbt.ref(\"dim_estadic_educ\")\r\n\r\n    # template\r\n    list_indicador_estadic = ['19C','19D']\r\n\r\n    # ind c\r\n    df_19c = \\\r\n    (df_dim_estadic_educ\r\n        .reindex(columns=['ANO','FK_ESTADO_CODIGO','EEDU15','EEDU22','EEDU30','EEDU35'])\r\n        .replace({'N\u00e3o':0,np.nan:0,'Sim':1,\r\n                  'N\u00e3o informado':0, 'Recusa':0, 'N\u00e3o informou':0})\r\n        .assign(QTD_CONSELHOS=lambda x:\r\n                x[['EEDU15','EEDU22','EEDU30','EEDU35']].sum(axis=1))\r\n        .assign(QTD_CONSELHOS_MAX=4)\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n                round(x['QTD_CONSELHOS']/\r\n                      x['QTD_CONSELHOS_MAX'],4)*100)\r\n        .assign(INDICADOR=list_indicador_estadic[0])\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO','INDICADOR',\r\n                          'QTD_CONSELHOS', 'QTD_CONSELHOS_MAX',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind d\r\n    df_19d = \\\r\n    (df_dim_estadic_educ\r\n        .reindex(columns=['ANO','FK_ESTADO_CODIGO','EEDU27','EEDU261','EEDU262','EEDU34',\r\n                          'EEDU331','EEDU332','EEDU40','EEDU391','EEDU392'])\r\n        .replace({'N\u00e3o':0,np.nan:0,'Sim':1,'N\u00e3o informado':0, 'Recusa':0,\r\n                  'N\u00e3o informou':0,'-':0,'(*) N\u00e3o soube informar':0})\r\n        .assign(QTD_ESTRUTURA_DISPONIBILIZADA=lambda x:\r\n                x[['EEDU27','EEDU261','EEDU262','EEDU34','EEDU331','EEDU332','EEDU40',\r\n                   'EEDU391','EEDU392']].sum(axis=1))\r\n        .assign(QTD_MAX_ESTRUTURA_DISPONIBILIZADA=9)\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n                round(x['QTD_ESTRUTURA_DISPONIBILIZADA']/\r\n                      x['QTD_MAX_ESTRUTURA_DISPONIBILIZADA'],4)*100)\r\n        .assign(INDICADOR=list_indicador_estadic[1])\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO','INDICADOR',\r\n                          'QTD_ESTRUTURA_DISPONIBILIZADA', 'QTD_MAX_ESTRUTURA_DISPONIBILIZADA',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # meta concat\r\n    df_19_estadic_raw = pd.concat([df_19c, df_19d]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_19_estadic = \\\r\n        (df_19_estadic_raw\r\n            .reset_index(drop=True)\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                      'QTD_CONSELHOS', 'QTD_CONSELHOS_MAX', 'QTD_ESTRUTURA_DISPONIBILIZADA',\r\n                      'QTD_MAX_ESTRUTURA_DISPONIBILIZADA', 'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .fillna(0)\r\n            .astype({col: 'uint32' for col in ['FK_ESTADO_CODIGO']})\r\n            .astype({col: 'uint16' for col in ['QTD_CONSELHOS', 'QTD_CONSELHOS_MAX',\r\n                                               'QTD_ESTRUTURA_DISPONIBILIZADA',\r\n                                               'QTD_MAX_ESTRUTURA_DISPONIBILIZADA']})\r\n            .astype({'ANO':'uint16'})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_ESTADO_CODIGO'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_19_estadic", "language": "python", "refs": [{"name": "dim_estadic_educ", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["model.exp.dim_estadic_educ"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\19-fcf_meta_dezenove\\fct_meta_dezenove_estadic.py", "compiled": true, "compiled_code": "import numpy as np\r\nimport pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_dim_estadic_educ = dbt.ref(\"dim_estadic_educ\")\r\n\r\n    # template\r\n    list_indicador_estadic = ['19C','19D']\r\n\r\n    # ind c\r\n    df_19c = \\\r\n    (df_dim_estadic_educ\r\n        .reindex(columns=['ANO','FK_ESTADO_CODIGO','EEDU15','EEDU22','EEDU30','EEDU35'])\r\n        .replace({'N\u00e3o':0,np.nan:0,'Sim':1,\r\n                  'N\u00e3o informado':0, 'Recusa':0, 'N\u00e3o informou':0})\r\n        .assign(QTD_CONSELHOS=lambda x:\r\n                x[['EEDU15','EEDU22','EEDU30','EEDU35']].sum(axis=1))\r\n        .assign(QTD_CONSELHOS_MAX=4)\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n                round(x['QTD_CONSELHOS']/\r\n                      x['QTD_CONSELHOS_MAX'],4)*100)\r\n        .assign(INDICADOR=list_indicador_estadic[0])\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO','INDICADOR',\r\n                          'QTD_CONSELHOS', 'QTD_CONSELHOS_MAX',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind d\r\n    df_19d = \\\r\n    (df_dim_estadic_educ\r\n        .reindex(columns=['ANO','FK_ESTADO_CODIGO','EEDU27','EEDU261','EEDU262','EEDU34',\r\n                          'EEDU331','EEDU332','EEDU40','EEDU391','EEDU392'])\r\n        .replace({'N\u00e3o':0,np.nan:0,'Sim':1,'N\u00e3o informado':0, 'Recusa':0,\r\n                  'N\u00e3o informou':0,'-':0,'(*) N\u00e3o soube informar':0})\r\n        .assign(QTD_ESTRUTURA_DISPONIBILIZADA=lambda x:\r\n                x[['EEDU27','EEDU261','EEDU262','EEDU34','EEDU331','EEDU332','EEDU40',\r\n                   'EEDU391','EEDU392']].sum(axis=1))\r\n        .assign(QTD_MAX_ESTRUTURA_DISPONIBILIZADA=9)\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n                round(x['QTD_ESTRUTURA_DISPONIBILIZADA']/\r\n                      x['QTD_MAX_ESTRUTURA_DISPONIBILIZADA'],4)*100)\r\n        .assign(INDICADOR=list_indicador_estadic[1])\r\n        .reindex(columns=['ANO', 'FK_ESTADO_CODIGO','INDICADOR',\r\n                          'QTD_ESTRUTURA_DISPONIBILIZADA', 'QTD_MAX_ESTRUTURA_DISPONIBILIZADA',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # meta concat\r\n    df_19_estadic_raw = pd.concat([df_19c, df_19d]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_19_estadic = \\\r\n        (df_19_estadic_raw\r\n            .reset_index(drop=True)\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                      'QTD_CONSELHOS', 'QTD_CONSELHOS_MAX', 'QTD_ESTRUTURA_DISPONIBILIZADA',\r\n                      'QTD_MAX_ESTRUTURA_DISPONIBILIZADA', 'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .fillna(0)\r\n            .astype({col: 'uint32' for col in ['FK_ESTADO_CODIGO']})\r\n            .astype({col: 'uint16' for col in ['QTD_CONSELHOS', 'QTD_CONSELHOS_MAX',\r\n                                               'QTD_ESTRUTURA_DISPONIBILIZADA',\r\n                                               'QTD_MAX_ESTRUTURA_DISPONIBILIZADA']})\r\n            .astype({'ANO':'uint16'})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_ESTADO_CODIGO'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_19_estadic\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_estadic_educ\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_estadic_educ\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_dezenove_estadic\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_dezenove_estadic\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_dezenove_munic": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_dezenove_munic", "resource_type": "model", "package_name": "exp", "path": "serving\\19-fcf_meta_dezenove\\fct_meta_dezenove_munic.py", "original_file_path": "models\\serving\\19-fcf_meta_dezenove\\fct_meta_dezenove_munic.py", "unique_id": "model.exp.fct_meta_dezenove_munic", "fqn": ["exp", "serving", "19-fcf_meta_dezenove", "fct_meta_dezenove_munic"], "alias": "fct_meta_dezenove_munic", "checksum": {"name": "sha256", "checksum": "70a8d2203e121e04ce987c40975d5e9bb05b72d31e5fb30dd434664a22de4e1e"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.4993622, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_dezenove_munic\"", "raw_code": "import numpy as np\r\nimport pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_munic_educ = dbt.ref(\"dim_munic_educ\")\r\n    df_dim_educ_bas_escola_19 = dbt.ref(\"dim_educ_bas_escola_19\")\r\n    df_dim_educ_bas_gestor_19 = dbt.ref(\"dim_educ_bas_gestor_19\")\r\n\r\n    # template\r\n    list_indicador_munic = ['19A','19B','19E','19F']\r\n\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador_munic:\r\n        for ano in range(2014,2021+1):\r\n            df_temp = (df_municipios_raw[['MUNICIPIO_CODIGO',\r\n                                          'ESTADO_CODIGO']].copy()\r\n                    .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                     'ESTADO_CODIGO':'FK_ESTADO_CODIGO'}))\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = pd.concat([df_ano_munic, df_temp]).reset_index(drop=True)\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    # ind a\r\n    df_19a = \\\r\n    (df_dim_educ_bas_gestor_19\r\n        .reindex(columns=['NU_ANO_CENSO', 'CO_MUNICIPIO', 'TP_DEPENDENCIA',\r\n                          'TP_CARGO_GESTOR', 'TP_TIPO_ACESSO_CARGO'])\r\n        .query('TP_DEPENDENCIA!=4 and TP_CARGO_GESTOR==1')\r\n        .assign(INDICADOR=list_indicador_munic[0])\r\n        .rename(columns={'NU_ANO_CENSO':'ANO',\r\n                         'CO_MUNICIPIO':'FK_MUNICIPIO_CODIGO'})\r\n        .assign(QTD_DIRETORES=1)\r\n        .assign(QTD_DIRETORES_ELEITOS=1)\r\n        .assign(QTD_DIRETORES_ELEITOS=\\\r\n                lambda x:x['QTD_DIRETORES_ELEITOS']\r\n                .where(x['TP_TIPO_ACESSO_CARGO'].isin([6]), 0))\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                          'QTD_DIRETORES', 'QTD_DIRETORES_ELEITOS'])\r\n        .groupby(['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR']).sum().reset_index()\r\n        .assign(ATENDIMENTO_IND=lambda x:round(x['QTD_DIRETORES_ELEITOS']/x['QTD_DIRETORES'],4)*100)\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR', 'QTD_DIRETORES_ELEITOS',\r\n                          'QTD_DIRETORES', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind b\r\n    df_19b = \\\r\n    (df_dim_educ_bas_escola_19\r\n        .rename(columns={'NU_ANO_CENSO':'ANO', 'CO_MUNICIPIO':'FK_MUNICIPIO_CODIGO'})\r\n        .query('TP_DEPENDENCIA!=4 and TP_SITUACAO_FUNCIONAMENTO==1')\r\n        .drop(columns=['TP_DEPENDENCIA','TP_SITUACAO_FUNCIONAMENTO'])\r\n        .replace({9:0})\r\n        .assign(QTD_COLEGIADOS_POR_ESCOLA=lambda x:\r\n                x[['IN_ORGAO_ASS_PAIS', 'IN_ORGAO_ASS_PAIS_MESTRES',\r\n                   'IN_ORGAO_CONSELHO_ESCOLAR',\r\n                   'IN_ORGAO_GREMIO_ESTUDANTIL']].sum(axis=1))\r\n        .assign(QTD_COLEGIADOS_POR_ESCOLA=lambda x:\r\n                x['QTD_COLEGIADOS_POR_ESCOLA'].where(\r\n                    x['QTD_COLEGIADOS_POR_ESCOLA']<=3,3))\r\n        .assign(QTD_COLEGIADOS_POSSIVEL_POR_ESCOLA=3)\r\n        .reindex(columns=[\"ANO\",\"FK_MUNICIPIO_CODIGO\",\r\n                          \"QTD_COLEGIADOS_POR_ESCOLA\",\r\n                          \"QTD_COLEGIADOS_POSSIVEL_POR_ESCOLA\"])\r\n        .groupby(['ANO','FK_MUNICIPIO_CODIGO']).sum().reset_index()\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n                round(x['QTD_COLEGIADOS_POR_ESCOLA']/\r\n                      x['QTD_COLEGIADOS_POSSIVEL_POR_ESCOLA'],4)*100)\r\n        .assign(INDICADOR=list_indicador_munic[1])\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'QTD_COLEGIADOS_POR_ESCOLA', 'QTD_COLEGIADOS_POSSIVEL_POR_ESCOLA',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind c\r\n    df_19e = \\\r\n    (df_dim_munic_educ\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','MEDU41','MEDU22','MEDU30','MEDU35'])\r\n        .replace({'N\u00e3o':0, np.nan:0, 'Sim':1,'N\u00e3o informado':0,\r\n                  'Recusa':0, 'N\u00e3o informou':0})\r\n        .assign(QTD_CONSELHOS=lambda x:\r\n                x[['MEDU41', 'MEDU22', 'MEDU30', 'MEDU35']].sum(axis=1))\r\n        .assign(QTD_CONSELHOS_MAX=4)\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n                round(x['QTD_CONSELHOS']/\r\n                    x['QTD_CONSELHOS_MAX'],4)*100)\r\n        .assign(INDICADOR=list_indicador_munic[2])\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'QTD_CONSELHOS', 'QTD_CONSELHOS_MAX',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind d\r\n    df_19f = \\\r\n    (df_dim_munic_educ\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','MEDU27','MEDU261',\r\n                          'MEDU262','MEDU34','MEDU331','MEDU332','MEDU40',\r\n                          'MEDU391','MEDU392'])\r\n        .replace({'N\u00e3o':0,np.nan:0,'Sim':1,'N\u00e3o informado':0, 'Recusa':0,\r\n                  'N\u00e3o informou':0,'-':0,'(*) N\u00e3o soube informar':0})\r\n        .assign(QTD_ESTRUTURA_DISPONIBILIZADA=lambda x:\r\n                x[['MEDU27','MEDU261','MEDU262','MEDU34','MEDU331',\r\n                   'MEDU332','MEDU40', 'MEDU391','MEDU392']].sum(axis=1))\r\n        .assign(QTD_ESTRUTURA_MAX=9)\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n                round(x['QTD_ESTRUTURA_DISPONIBILIZADA']/\r\n                      x['QTD_ESTRUTURA_MAX'],4)*100)\r\n        .assign(INDICADOR=list_indicador_munic[3])\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'QTD_ESTRUTURA_DISPONIBILIZADA', 'QTD_ESTRUTURA_MAX',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n\r\n    # meta concat\r\n    df_19_munic_raw = pd.concat([df_19a, df_19b,\r\n                                 df_19e, df_19f]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_19_munic = \\\r\n        (df_19_munic_raw\r\n            .reset_index(drop=True)\r\n            .merge(\r\n                df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                              'FK_ESTADO_CODIGO']],\r\n                on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n                how='right')\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                      'INDICADOR', 'QTD_DIRETORES_ELEITOS', 'QTD_DIRETORES',\r\n                      'QTD_COLEGIADOS_POR_ESCOLA',\r\n                      'QTD_COLEGIADOS_POSSIVEL_POR_ESCOLA', 'QTD_CONSELHOS',\r\n                      'QTD_CONSELHOS_MAX', 'QTD_ESTRUTURA_DISPONIBILIZADA',\r\n                      'QTD_ESTRUTURA_MAX', 'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .fillna(0)\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                               'FK_ESTADO_CODIGO']})\r\n            .astype({'ANO':'uint16'})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_19_munic", "language": "python", "refs": [{"name": "info_municipios", "package": null, "version": null}, {"name": "dim_munic_educ", "package": null, "version": null}, {"name": "dim_educ_bas_escola_19", "package": null, "version": null}, {"name": "dim_educ_bas_gestor_19", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["model.exp.info_municipios", "model.exp.dim_munic_educ", "model.exp.dim_educ_bas_escola_19", "model.exp.dim_educ_bas_gestor_19"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\19-fcf_meta_dezenove\\fct_meta_dezenove_munic.py", "compiled": true, "compiled_code": "import numpy as np\r\nimport pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_munic_educ = dbt.ref(\"dim_munic_educ\")\r\n    df_dim_educ_bas_escola_19 = dbt.ref(\"dim_educ_bas_escola_19\")\r\n    df_dim_educ_bas_gestor_19 = dbt.ref(\"dim_educ_bas_gestor_19\")\r\n\r\n    # template\r\n    list_indicador_munic = ['19A','19B','19E','19F']\r\n\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador_munic:\r\n        for ano in range(2014,2021+1):\r\n            df_temp = (df_municipios_raw[['MUNICIPIO_CODIGO',\r\n                                          'ESTADO_CODIGO']].copy()\r\n                    .rename(columns={'MUNICIPIO_CODIGO':'FK_MUNICIPIO_CODIGO',\r\n                                     'ESTADO_CODIGO':'FK_ESTADO_CODIGO'}))\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = pd.concat([df_ano_munic, df_temp]).reset_index(drop=True)\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    # ind a\r\n    df_19a = \\\r\n    (df_dim_educ_bas_gestor_19\r\n        .reindex(columns=['NU_ANO_CENSO', 'CO_MUNICIPIO', 'TP_DEPENDENCIA',\r\n                          'TP_CARGO_GESTOR', 'TP_TIPO_ACESSO_CARGO'])\r\n        .query('TP_DEPENDENCIA!=4 and TP_CARGO_GESTOR==1')\r\n        .assign(INDICADOR=list_indicador_munic[0])\r\n        .rename(columns={'NU_ANO_CENSO':'ANO',\r\n                         'CO_MUNICIPIO':'FK_MUNICIPIO_CODIGO'})\r\n        .assign(QTD_DIRETORES=1)\r\n        .assign(QTD_DIRETORES_ELEITOS=1)\r\n        .assign(QTD_DIRETORES_ELEITOS=\\\r\n                lambda x:x['QTD_DIRETORES_ELEITOS']\r\n                .where(x['TP_TIPO_ACESSO_CARGO'].isin([6]), 0))\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                          'QTD_DIRETORES', 'QTD_DIRETORES_ELEITOS'])\r\n        .groupby(['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR']).sum().reset_index()\r\n        .assign(ATENDIMENTO_IND=lambda x:round(x['QTD_DIRETORES_ELEITOS']/x['QTD_DIRETORES'],4)*100)\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR', 'QTD_DIRETORES_ELEITOS',\r\n                          'QTD_DIRETORES', 'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind b\r\n    df_19b = \\\r\n    (df_dim_educ_bas_escola_19\r\n        .rename(columns={'NU_ANO_CENSO':'ANO', 'CO_MUNICIPIO':'FK_MUNICIPIO_CODIGO'})\r\n        .query('TP_DEPENDENCIA!=4 and TP_SITUACAO_FUNCIONAMENTO==1')\r\n        .drop(columns=['TP_DEPENDENCIA','TP_SITUACAO_FUNCIONAMENTO'])\r\n        .replace({9:0})\r\n        .assign(QTD_COLEGIADOS_POR_ESCOLA=lambda x:\r\n                x[['IN_ORGAO_ASS_PAIS', 'IN_ORGAO_ASS_PAIS_MESTRES',\r\n                   'IN_ORGAO_CONSELHO_ESCOLAR',\r\n                   'IN_ORGAO_GREMIO_ESTUDANTIL']].sum(axis=1))\r\n        .assign(QTD_COLEGIADOS_POR_ESCOLA=lambda x:\r\n                x['QTD_COLEGIADOS_POR_ESCOLA'].where(\r\n                    x['QTD_COLEGIADOS_POR_ESCOLA']<=3,3))\r\n        .assign(QTD_COLEGIADOS_POSSIVEL_POR_ESCOLA=3)\r\n        .reindex(columns=[\"ANO\",\"FK_MUNICIPIO_CODIGO\",\r\n                          \"QTD_COLEGIADOS_POR_ESCOLA\",\r\n                          \"QTD_COLEGIADOS_POSSIVEL_POR_ESCOLA\"])\r\n        .groupby(['ANO','FK_MUNICIPIO_CODIGO']).sum().reset_index()\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n                round(x['QTD_COLEGIADOS_POR_ESCOLA']/\r\n                      x['QTD_COLEGIADOS_POSSIVEL_POR_ESCOLA'],4)*100)\r\n        .assign(INDICADOR=list_indicador_munic[1])\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'QTD_COLEGIADOS_POR_ESCOLA', 'QTD_COLEGIADOS_POSSIVEL_POR_ESCOLA',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind c\r\n    df_19e = \\\r\n    (df_dim_munic_educ\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','MEDU41','MEDU22','MEDU30','MEDU35'])\r\n        .replace({'N\u00e3o':0, np.nan:0, 'Sim':1,'N\u00e3o informado':0,\r\n                  'Recusa':0, 'N\u00e3o informou':0})\r\n        .assign(QTD_CONSELHOS=lambda x:\r\n                x[['MEDU41', 'MEDU22', 'MEDU30', 'MEDU35']].sum(axis=1))\r\n        .assign(QTD_CONSELHOS_MAX=4)\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n                round(x['QTD_CONSELHOS']/\r\n                    x['QTD_CONSELHOS_MAX'],4)*100)\r\n        .assign(INDICADOR=list_indicador_munic[2])\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'QTD_CONSELHOS', 'QTD_CONSELHOS_MAX',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    # ind d\r\n    df_19f = \\\r\n    (df_dim_munic_educ\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','MEDU27','MEDU261',\r\n                          'MEDU262','MEDU34','MEDU331','MEDU332','MEDU40',\r\n                          'MEDU391','MEDU392'])\r\n        .replace({'N\u00e3o':0,np.nan:0,'Sim':1,'N\u00e3o informado':0, 'Recusa':0,\r\n                  'N\u00e3o informou':0,'-':0,'(*) N\u00e3o soube informar':0})\r\n        .assign(QTD_ESTRUTURA_DISPONIBILIZADA=lambda x:\r\n                x[['MEDU27','MEDU261','MEDU262','MEDU34','MEDU331',\r\n                   'MEDU332','MEDU40', 'MEDU391','MEDU392']].sum(axis=1))\r\n        .assign(QTD_ESTRUTURA_MAX=9)\r\n        .assign(ATENDIMENTO_IND=lambda x:\r\n                round(x['QTD_ESTRUTURA_DISPONIBILIZADA']/\r\n                      x['QTD_ESTRUTURA_MAX'],4)*100)\r\n        .assign(INDICADOR=list_indicador_munic[3])\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO','INDICADOR',\r\n                          'QTD_ESTRUTURA_DISPONIBILIZADA', 'QTD_ESTRUTURA_MAX',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n\r\n\r\n    # meta concat\r\n    df_19_munic_raw = pd.concat([df_19a, df_19b,\r\n                                 df_19e, df_19f]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_19_munic = \\\r\n        (df_19_munic_raw\r\n            .reset_index(drop=True)\r\n            .merge(\r\n                df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                              'FK_ESTADO_CODIGO']],\r\n                on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n                how='right')\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO', 'FK_MUNICIPIO_CODIGO',\r\n                      'INDICADOR', 'QTD_DIRETORES_ELEITOS', 'QTD_DIRETORES',\r\n                      'QTD_COLEGIADOS_POR_ESCOLA',\r\n                      'QTD_COLEGIADOS_POSSIVEL_POR_ESCOLA', 'QTD_CONSELHOS',\r\n                      'QTD_CONSELHOS_MAX', 'QTD_ESTRUTURA_DISPONIBILIZADA',\r\n                      'QTD_ESTRUTURA_MAX', 'ATENDIMENTO_IND'],\r\n                    axis=1)\r\n            .fillna(0)\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                               'FK_ESTADO_CODIGO']})\r\n            .astype({'ANO':'uint16'})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_19_munic\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_educ_bas_escola_19\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_educ_bas_escola_19\\\"\", \"dim_educ_bas_gestor_19\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_educ_bas_gestor_19\\\"\", \"dim_munic_educ\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_munic_educ\\\"\", \"info_municipios\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"info_municipios\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_dezenove_munic\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_dezenove_munic\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.exp.fct_meta_vinte": {"database": "postgres", "schema": "dbt_serving", "name": "fct_meta_vinte", "resource_type": "model", "package_name": "exp", "path": "serving\\20-fct_meta_vinte\\fct_meta_vinte.py", "original_file_path": "models\\serving\\20-fct_meta_vinte\\fct_meta_vinte.py", "unique_id": "model.exp.fct_meta_vinte", "fqn": ["exp", "serving", "20-fct_meta_vinte", "fct_meta_vinte"], "alias": "fct_meta_vinte", "checksum": {"name": "sha256", "checksum": "3006fbc36a42993104b026e4fcffef2c8c6de788104b527508aa4edbd4af8baf"}, "config": {"enabled": true, "alias": null, "schema": "serving", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Ampliar o investimento p\u00fablico em educa\u00e7\u00e3o p\u00fablica de forma a atingir, no m\u00ednimo, o patamar de 7% (sete por cento) do Produto Interno Bruto - PIB do Pa\u00eds no 5\u00ba (quinto) ano de vig\u00eancia desta Lei e, no m\u00ednimo, o equivalente a 10% (dez por cento) do PIB ao final do dec\u00eanio.", "columns": {"ANO": {"name": "ANO", "description": "Ano do registro.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_ESTADO_CODIGO": {"name": "FK_ESTADO_CODIGO", "description": "C\u00f3digo do Estado", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "FK_MUNICIPIO_CODIGO": {"name": "FK_MUNICIPIO_CODIGO", "description": "C\u00f3digo do Munic\u00edpio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "INT"}, "INDICADOR": {"name": "INDICADOR", "description": "Define a qual indicador o registro pertence. 20A - Gasto p\u00fablico em educa\u00e7\u00e3o p\u00fablica em propor\u00e7\u00e3o ao Produto Interno Bruto (PIB). 20B - Gasto p\u00fablico em educa\u00e7\u00e3o em propor\u00e7\u00e3o ao Produto Interno Bruto (PIB).", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "STR"}, "GASTOS_EDUCACAO": {"name": "GASTOS_EDUCACAO", "description": "Somat\u00f3rio de gastos em educa\u00e7\u00e3o.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}, "GASTOS_EDUCACAO_PUBLICA": {"name": "GASTOS_EDUCACAO_PUBLICA", "description": "Somat\u00f3rio de gastos em educa\u00e7\u00e3o p\u00fablica.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}, "TRANSFERENCIAS_EDUC_BASICA": {"name": "TRANSFERENCIAS_EDUC_BASICA", "description": "Somat\u00f3rio de transfer\u00eancia para educa\u00e7\u00e3o.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}, "PIB": {"name": "PIB", "description": "Produto interno bruto do munic\u00edpio.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}, "ATENDIMENTO_IND": {"name": "ATENDIMENTO_IND", "description": "N\u00edvel de atendimento do Indicador.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "type": "FLOAT"}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "exp://models\\serving\\schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"schema": "serving", "materialized": "table"}, "created_at": 1723502084.7719824, "relation_name": "\"postgres\".\"dbt_serving\".\"fct_meta_vinte\"", "raw_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_municipios_pib = dbt.source(\"raw\", \"DIM_MUNICIPIOS_PIB\")\r\n    df_dim_siconfi_20 = dbt.ref(\"dim_siconfi_20\")\r\n    df_dim_tce_pe_educacao = dbt.ref(\"dim_tce_pe_educacao\")\r\n    df_dim_tce_sp_educacao = dbt.ref(\"dim_tce_sp_educacao\")\r\n    df_dim_tce_mg_educacao = dbt.ref(\"dim_tce_mg_educacao\")\r\n    df_dim_tce_es_educacao = dbt.ref(\"dim_tce_es_educacao\")\r\n\r\n    # template\r\n    list_indicador = ['20A', '20B']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014, 2020+1):\r\n            df_temp = (\r\n                df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']]\r\n                .copy()\r\n                .rename(columns={'MUNICIPIO_CODIGO': 'FK_MUNICIPIO_CODIGO',\r\n                                 'ESTADO_CODIGO': 'FK_ESTADO_CODIGO'}))\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                  .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    # ind a\r\n    df_20a = \\\r\n        (df_dim_siconfi_20\r\n         .query('ANO>=2014 & ANO<=2020')\r\n         .groupby(by=['ANO', 'FK_MUNICIPIO_CODIGO', 'CONTA']).sum(numeric_only=False)\r\n         .reset_index()\r\n         .pivot(index=['ANO', 'FK_MUNICIPIO_CODIGO'], columns='CONTA', values='VALOR')\r\n         .reset_index()\r\n         .rename(columns={\"12 - Educa\u00e7\u00e3o\": 'GASTOS_EDUCACAO',\r\n                          \"28.847 - Transfer\u00eancias para a Educa\u00e7\u00e3o B\u00e1sica\": 'TRANSFERENCIAS_EDUC_BASICA'})\r\n         .assign(TRANSFERENCIAS_EDUC_BASICA=lambda x:x['TRANSFERENCIAS_EDUC_BASICA'].fillna(0))\r\n         .assign(GASTOS_EDUCACAO_PUBLICA=lambda x:x['GASTOS_EDUCACAO'].fillna(0))\r\n         .merge(df_dim_municipios_pib[[\"ANO\", \"CODIGO_DO_MUNICIPIO\",\r\n                                       \"PRODUTO_INTERNO_BRUTO_A_PRECOS_CORRENTES_R_1_000\"]],\r\n                left_on=['ANO', 'FK_MUNICIPIO_CODIGO'],\r\n                right_on=['ANO', 'CODIGO_DO_MUNICIPIO'], how='left')\r\n\r\n         .rename(columns={'PRODUTO_INTERNO_BRUTO_A_PRECOS_CORRENTES_R_1_000': 'PIB'})\r\n         .assign(PIB=lambda x:x['PIB']*1000)\r\n         .assign(INDICADOR=list_indicador[0])\r\n         .assign(ATENDIMENTO_IND =\\\r\n             lambda x:round((x['GASTOS_EDUCACAO_PUBLICA']+x['TRANSFERENCIAS_EDUC_BASICA'])/x['PIB'],4) * 100)\r\n         .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                           'GASTOS_EDUCACAO_PUBLICA', 'TRANSFERENCIAS_EDUC_BASICA', 'PIB',\r\n                           'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    df_20b = \\\r\n        (pd.concat([df_dim_tce_pe_educacao[['ANO', 'FK_MUNICIPIO_CODIGO', 'VALOR_PAGO']],\r\n                    df_dim_tce_sp_educacao[['ANO', 'FK_MUNICIPIO_CODIGO', 'VALOR_PAGO']],\r\n                    df_dim_tce_mg_educacao[['ANO', 'FK_MUNICIPIO_CODIGO', 'VALOR_PAGO']],\r\n                    df_dim_tce_es_educacao[['ANO', 'FK_MUNICIPIO_CODIGO', 'VALOR_PAGO']]]\r\n                )\r\n        .groupby(by=['ANO', 'FK_MUNICIPIO_CODIGO'])['VALOR_PAGO'].sum().reset_index()\r\n        .rename(columns={'VALOR_PAGO': 'GASTOS_EDUCACAO'})\r\n        .query('ANO >= 2014 and ANO <= 2020')\r\n        .merge((df_dim_municipios_pib\r\n                .reindex(columns=['ANO', 'CODIGO_DO_MUNICIPIO',\r\n                                  'PRODUTO_INTERNO_BRUTO_A_PRECOS_CORRENTES_R_1_000'])\r\n                .query('ANO >= 2014')\r\n                .rename(columns={'PRODUTO_INTERNO_BRUTO_A_PRECOS_CORRENTES_R_1_000': 'PIB',\r\n                                 'CODIGO_DO_MUNICIPIO': 'FK_MUNICIPIO_CODIGO'})\r\n                .assign(PIB=lambda x:x['PIB']*1000)\r\n                ),\r\n                on=['ANO', 'FK_MUNICIPIO_CODIGO'],how='left')\r\n        .assign(INDICADOR=list_indicador[1])\r\n        .assign(ATENDIMENTO_IND = \\\r\n                lambda x:round(x['GASTOS_EDUCACAO']/x['PIB'], 4) * 100)\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                          'GASTOS_EDUCACAO', 'PIB',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n    # meta concat\r\n    df_20_raw = pd.concat([df_20a, df_20b]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_20 = \\\r\n        (df_20_raw\r\n            .reset_index(drop=True)\r\n            .merge(\r\n                df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                              'FK_ESTADO_CODIGO']],\r\n                on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n                how='right')\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO',\r\n                      'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                      'GASTOS_EDUCACAO', 'GASTOS_EDUCACAO_PUBLICA',\r\n                      'TRANSFERENCIAS_EDUC_BASICA', 'PIB',\r\n                      'ATENDIMENTO_IND'],\r\n                     axis=1)\r\n            .fillna(0)\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                               'FK_ESTADO_CODIGO',]})\r\n            .astype({col: 'float16' for col in ['ATENDIMENTO_IND']})\r\n            .astype({'ANO': 'uint16'})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_20", "language": "python", "refs": [{"name": "info_municipios", "package": null, "version": null}, {"name": "dim_siconfi_20", "package": null, "version": null}, {"name": "dim_tce_pe_educacao", "package": null, "version": null}, {"name": "dim_tce_sp_educacao", "package": null, "version": null}, {"name": "dim_tce_mg_educacao", "package": null, "version": null}, {"name": "dim_tce_es_educacao", "package": null, "version": null}], "sources": [["raw", "DIM_MUNICIPIOS_PIB"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["source.exp.raw.DIM_MUNICIPIOS_PIB", "model.exp.info_municipios", "model.exp.dim_siconfi_20", "model.exp.dim_tce_pe_educacao", "model.exp.dim_tce_sp_educacao", "model.exp.dim_tce_mg_educacao", "model.exp.dim_tce_es_educacao"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\20-fct_meta_vinte\\fct_meta_vinte.py", "compiled": true, "compiled_code": "import pandas as pd\r\n\r\n\r\n# fmt: off\r\ndef model(dbt, fal):\r\n    # load\r\n    df_municipios_raw: pd.DataFrame = dbt.ref(\"info_municipios\")\r\n    df_dim_municipios_pib = dbt.source(\"raw\", \"DIM_MUNICIPIOS_PIB\")\r\n    df_dim_siconfi_20 = dbt.ref(\"dim_siconfi_20\")\r\n    df_dim_tce_pe_educacao = dbt.ref(\"dim_tce_pe_educacao\")\r\n    df_dim_tce_sp_educacao = dbt.ref(\"dim_tce_sp_educacao\")\r\n    df_dim_tce_mg_educacao = dbt.ref(\"dim_tce_mg_educacao\")\r\n    df_dim_tce_es_educacao = dbt.ref(\"dim_tce_es_educacao\")\r\n\r\n    # template\r\n    list_indicador = ['20A', '20B']\r\n    df_ano_munic = pd.DataFrame()\r\n    for indicador in list_indicador:\r\n        for ano in range(2014, 2020+1):\r\n            df_temp = (\r\n                df_municipios_raw[['MUNICIPIO_CODIGO', 'ESTADO_CODIGO']]\r\n                .copy()\r\n                .rename(columns={'MUNICIPIO_CODIGO': 'FK_MUNICIPIO_CODIGO',\r\n                                 'ESTADO_CODIGO': 'FK_ESTADO_CODIGO'}))\r\n            df_temp['ANO']=ano\r\n            df_temp['INDICADOR']=indicador\r\n            if df_ano_munic.shape != (0,0):\r\n                df_ano_munic = (pd.concat([df_ano_munic, df_temp])\r\n                                  .reset_index(drop=True))\r\n            else:\r\n                df_ano_munic = df_temp.copy()\r\n\r\n    # ind a\r\n    df_20a = \\\r\n        (df_dim_siconfi_20\r\n         .query('ANO>=2014 & ANO<=2020')\r\n         .groupby(by=['ANO', 'FK_MUNICIPIO_CODIGO', 'CONTA']).sum(numeric_only=False)\r\n         .reset_index()\r\n         .pivot(index=['ANO', 'FK_MUNICIPIO_CODIGO'], columns='CONTA', values='VALOR')\r\n         .reset_index()\r\n         .rename(columns={\"12 - Educa\u00e7\u00e3o\": 'GASTOS_EDUCACAO',\r\n                          \"28.847 - Transfer\u00eancias para a Educa\u00e7\u00e3o B\u00e1sica\": 'TRANSFERENCIAS_EDUC_BASICA'})\r\n         .assign(TRANSFERENCIAS_EDUC_BASICA=lambda x:x['TRANSFERENCIAS_EDUC_BASICA'].fillna(0))\r\n         .assign(GASTOS_EDUCACAO_PUBLICA=lambda x:x['GASTOS_EDUCACAO'].fillna(0))\r\n         .merge(df_dim_municipios_pib[[\"ANO\", \"CODIGO_DO_MUNICIPIO\",\r\n                                       \"PRODUTO_INTERNO_BRUTO_A_PRECOS_CORRENTES_R_1_000\"]],\r\n                left_on=['ANO', 'FK_MUNICIPIO_CODIGO'],\r\n                right_on=['ANO', 'CODIGO_DO_MUNICIPIO'], how='left')\r\n\r\n         .rename(columns={'PRODUTO_INTERNO_BRUTO_A_PRECOS_CORRENTES_R_1_000': 'PIB'})\r\n         .assign(PIB=lambda x:x['PIB']*1000)\r\n         .assign(INDICADOR=list_indicador[0])\r\n         .assign(ATENDIMENTO_IND =\\\r\n             lambda x:round((x['GASTOS_EDUCACAO_PUBLICA']+x['TRANSFERENCIAS_EDUC_BASICA'])/x['PIB'],4) * 100)\r\n         .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                           'GASTOS_EDUCACAO_PUBLICA', 'TRANSFERENCIAS_EDUC_BASICA', 'PIB',\r\n                           'ATENDIMENTO_IND'])\r\n        )\r\n\r\n    df_20b = \\\r\n        (pd.concat([df_dim_tce_pe_educacao[['ANO', 'FK_MUNICIPIO_CODIGO', 'VALOR_PAGO']],\r\n                    df_dim_tce_sp_educacao[['ANO', 'FK_MUNICIPIO_CODIGO', 'VALOR_PAGO']],\r\n                    df_dim_tce_mg_educacao[['ANO', 'FK_MUNICIPIO_CODIGO', 'VALOR_PAGO']],\r\n                    df_dim_tce_es_educacao[['ANO', 'FK_MUNICIPIO_CODIGO', 'VALOR_PAGO']]]\r\n                )\r\n        .groupby(by=['ANO', 'FK_MUNICIPIO_CODIGO'])['VALOR_PAGO'].sum().reset_index()\r\n        .rename(columns={'VALOR_PAGO': 'GASTOS_EDUCACAO'})\r\n        .query('ANO >= 2014 and ANO <= 2020')\r\n        .merge((df_dim_municipios_pib\r\n                .reindex(columns=['ANO', 'CODIGO_DO_MUNICIPIO',\r\n                                  'PRODUTO_INTERNO_BRUTO_A_PRECOS_CORRENTES_R_1_000'])\r\n                .query('ANO >= 2014')\r\n                .rename(columns={'PRODUTO_INTERNO_BRUTO_A_PRECOS_CORRENTES_R_1_000': 'PIB',\r\n                                 'CODIGO_DO_MUNICIPIO': 'FK_MUNICIPIO_CODIGO'})\r\n                .assign(PIB=lambda x:x['PIB']*1000)\r\n                ),\r\n                on=['ANO', 'FK_MUNICIPIO_CODIGO'],how='left')\r\n        .assign(INDICADOR=list_indicador[1])\r\n        .assign(ATENDIMENTO_IND = \\\r\n                lambda x:round(x['GASTOS_EDUCACAO']/x['PIB'], 4) * 100)\r\n        .reindex(columns=['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                          'GASTOS_EDUCACAO', 'PIB',\r\n                          'ATENDIMENTO_IND'])\r\n        )\r\n    # meta concat\r\n    df_20_raw = pd.concat([df_20a, df_20b]).reset_index(drop=True)\r\n\r\n    # meta transform\r\n    df_20 = \\\r\n        (df_20_raw\r\n            .reset_index(drop=True)\r\n            .merge(\r\n                df_ano_munic[['ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                              'FK_ESTADO_CODIGO']],\r\n                on=('ANO', 'FK_MUNICIPIO_CODIGO', 'INDICADOR'),\r\n                how='right')\r\n            .reindex(['ANO', 'FK_ESTADO_CODIGO',\r\n                      'FK_MUNICIPIO_CODIGO', 'INDICADOR',\r\n                      'GASTOS_EDUCACAO', 'GASTOS_EDUCACAO_PUBLICA',\r\n                      'TRANSFERENCIAS_EDUC_BASICA', 'PIB',\r\n                      'ATENDIMENTO_IND'],\r\n                     axis=1)\r\n            .fillna(0)\r\n            .astype({col: 'uint32' for col in ['FK_MUNICIPIO_CODIGO',\r\n                                               'FK_ESTADO_CODIGO',]})\r\n            .astype({col: 'float16' for col in ['ATENDIMENTO_IND']})\r\n            .astype({'ANO': 'uint16'})\r\n            .sort_values(by=['ANO', 'INDICADOR', 'FK_MUNICIPIO_CODIGO'])\r\n            .reset_index(drop=True)\r\n        )\r\n    return df_20\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"dim_siconfi_20\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_siconfi_20\\\"\", \"dim_tce_es_educacao\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_tce_es_educacao\\\"\", \"dim_tce_mg_educacao\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_tce_mg_educacao\\\"\", \"dim_tce_pe_educacao\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_tce_pe_educacao\\\"\", \"dim_tce_sp_educacao\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"dim_tce_sp_educacao\\\"\", \"info_municipios\": \"\\\"postgres\\\".\\\"dbt_staging\\\".\\\"info_municipios\\\"\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {\"raw.DIM_MUNICIPIOS_PIB\": \"\\\"postgres\\\".\\\"raw\\\".\\\"DIM_MUNICIPIOS_PIB\\\"\"}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"postgres\"\n    schema = \"dbt_serving\"\n    identifier = \"fct_meta_vinte\"\n    \n    def __repr__(self):\n        return '\"postgres\".\"dbt_serving\".\"fct_meta_vinte\"'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "test.exp.accepted_values_dim_ideb_municipal_ORIGEM__anos_iniciais__anos_finais__ensino_medio.f1b92194d5": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["anos_iniciais", "anos_finais", "ensino_medio"], "column_name": "ORIGEM", "model": "{{ get_where_subquery(ref('dim_ideb_municipal')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_dim_ideb_municipal_ORIGEM__anos_iniciais__anos_finais__ensino_medio", "resource_type": "test", "package_name": "exp", "path": "accepted_values_dim_ideb_munic_474c894ff72f25a4e48356b031514b64.sql", "original_file_path": "models\\schema.yml", "unique_id": "test.exp.accepted_values_dim_ideb_municipal_ORIGEM__anos_iniciais__anos_finais__ensino_medio.f1b92194d5", "fqn": ["exp", "accepted_values_dim_ideb_municipal_ORIGEM__anos_iniciais__anos_finais__ensino_medio"], "alias": "accepted_values_dim_ideb_munic_474c894ff72f25a4e48356b031514b64", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_dim_ideb_munic_474c894ff72f25a4e48356b031514b64", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_dim_ideb_munic_474c894ff72f25a4e48356b031514b64"}, "created_at": 1723502084.5723963, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_dim_ideb_munic_474c894ff72f25a4e48356b031514b64\") }}", "language": "sql", "refs": [{"name": "dim_ideb_municipal", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.dim_ideb_municipal"]}, "compiled_path": "target\\compiled\\exp\\models\\schema.yml\\accepted_values_dim_ideb_munic_474c894ff72f25a4e48356b031514b64.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        ORIGEM as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_staging\".\"dim_ideb_municipal\"\n    group by ORIGEM\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'anos_iniciais','anos_finais','ensino_medio'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "ORIGEM", "file_key_name": "models.dim_ideb_municipal", "attached_node": "model.exp.dim_ideb_municipal"}, "test.exp.accepted_values_fct_meta_um_INDICADOR__1A__1B.1c6eb010c0": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["1A", "1B"], "column_name": "INDICADOR", "model": "{{ get_where_subquery(ref('fct_meta_um')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_um_INDICADOR__1A__1B", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_um_INDICADOR__1A__1B.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_um_INDICADOR__1A__1B.1c6eb010c0", "fqn": ["exp", "serving", "accepted_values_fct_meta_um_INDICADOR__1A__1B"], "alias": "accepted_values_fct_meta_um_INDICADOR__1A__1B", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.7729826, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_meta_um", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_um"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_um_INDICADOR__1A__1B.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        INDICADOR as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_um\"\n    group by INDICADOR\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '1A','1B'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "INDICADOR", "file_key_name": "models.fct_meta_um", "attached_node": "model.exp.fct_meta_um"}, "test.exp.accepted_values_fct_meta_dois_INDICADOR__2A.9ca3ea2095": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["2A"], "column_name": "INDICADOR", "model": "{{ get_where_subquery(ref('fct_meta_dois')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_dois_INDICADOR__2A", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_dois_INDICADOR__2A.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_dois_INDICADOR__2A.9ca3ea2095", "fqn": ["exp", "serving", "accepted_values_fct_meta_dois_INDICADOR__2A"], "alias": "accepted_values_fct_meta_dois_INDICADOR__2A", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.7780044, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_meta_dois", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_dois"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_dois_INDICADOR__2A.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        INDICADOR as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_dois\"\n    group by INDICADOR\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '2A'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "INDICADOR", "file_key_name": "models.fct_meta_dois", "attached_node": "model.exp.fct_meta_dois"}, "test.exp.accepted_values_fct_meta_tres_INDICADOR__3A.c10359b903": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["3A"], "column_name": "INDICADOR", "model": "{{ get_where_subquery(ref('fct_meta_tres')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_tres_INDICADOR__3A", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_tres_INDICADOR__3A.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_tres_INDICADOR__3A.c10359b903", "fqn": ["exp", "serving", "accepted_values_fct_meta_tres_INDICADOR__3A"], "alias": "accepted_values_fct_meta_tres_INDICADOR__3A", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.7840052, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_meta_tres", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_tres"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_tres_INDICADOR__3A.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        INDICADOR as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_tres\"\n    group by INDICADOR\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '3A'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "INDICADOR", "file_key_name": "models.fct_meta_tres", "attached_node": "model.exp.fct_meta_tres"}, "test.exp.accepted_values_fct_meta_quatro_INDICADOR__4B__4C.4f558b6954": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["4B", "4C"], "column_name": "INDICADOR", "model": "{{ get_where_subquery(ref('fct_meta_quatro')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_quatro_INDICADOR__4B__4C", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_quatro_INDICADOR__4B__4C.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_quatro_INDICADOR__4B__4C.4f558b6954", "fqn": ["exp", "serving", "accepted_values_fct_meta_quatro_INDICADOR__4B__4C"], "alias": "accepted_values_fct_meta_quatro_INDICADOR__4B__4C", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.7890048, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_meta_quatro", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_quatro"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_quatro_INDICADOR__4B__4C.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        INDICADOR as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_quatro\"\n    group by INDICADOR\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '4B','4C'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "INDICADOR", "file_key_name": "models.fct_meta_quatro", "attached_node": "model.exp.fct_meta_quatro"}, "test.exp.accepted_values_fct_meta_seis_INDICADOR__6A__6B.a34f59227a": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["6A", "6B"], "column_name": "INDICADOR", "model": "{{ get_where_subquery(ref('fct_meta_seis')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_seis_INDICADOR__6A__6B", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_seis_INDICADOR__6A__6B.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_seis_INDICADOR__6A__6B.a34f59227a", "fqn": ["exp", "serving", "accepted_values_fct_meta_seis_INDICADOR__6A__6B"], "alias": "accepted_values_fct_meta_seis_INDICADOR__6A__6B", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.7950127, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_meta_seis", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_seis"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_seis_INDICADOR__6A__6B.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        INDICADOR as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_seis\"\n    group by INDICADOR\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '6A','6B'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "INDICADOR", "file_key_name": "models.fct_meta_seis", "attached_node": "model.exp.fct_meta_seis"}, "test.exp.accepted_values_fct_meta_sete_municipal_INDICADOR__7A__7B__7C.d41ff7f17a": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["7A", "7B", "7C"], "column_name": "INDICADOR", "model": "{{ get_where_subquery(ref('fct_meta_sete_municipal')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_sete_municipal_INDICADOR__7A__7B__7C", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_sete_municipal_INDICADOR__7A__7B__7C.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_sete_municipal_INDICADOR__7A__7B__7C.d41ff7f17a", "fqn": ["exp", "serving", "accepted_values_fct_meta_sete_municipal_INDICADOR__7A__7B__7C"], "alias": "accepted_values_fct_meta_sete_municipal_INDICADOR__7A__7B__7C", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.801005, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_meta_sete_municipal", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_sete_municipal"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_sete_municipal_INDICADOR__7A__7B__7C.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        INDICADOR as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_sete_municipal\"\n    group by INDICADOR\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '7A','7B','7C'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "INDICADOR", "file_key_name": "models.fct_meta_sete_municipal", "attached_node": "model.exp.fct_meta_sete_municipal"}, "test.exp.accepted_values_fct_meta_sete_municipal_REDE__MUNICIPAL__P_BLICA.a6286cdb86": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["MUNICIPAL", "P\u00daBLICA"], "column_name": "REDE", "model": "{{ get_where_subquery(ref('fct_meta_sete_municipal')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_sete_municipal_REDE__MUNICIPAL__P_BLICA", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_sete__b4541c2f01d8dce0037dd20279940245.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_sete_municipal_REDE__MUNICIPAL__P_BLICA.a6286cdb86", "fqn": ["exp", "serving", "accepted_values_fct_meta_sete_municipal_REDE__MUNICIPAL__P_BLICA"], "alias": "accepted_values_fct_meta_sete__b4541c2f01d8dce0037dd20279940245", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_fct_meta_sete__b4541c2f01d8dce0037dd20279940245", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_fct_meta_sete__b4541c2f01d8dce0037dd20279940245"}, "created_at": 1723502084.8070045, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_fct_meta_sete__b4541c2f01d8dce0037dd20279940245\") }}", "language": "sql", "refs": [{"name": "fct_meta_sete_municipal", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_sete_municipal"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_sete__b4541c2f01d8dce0037dd20279940245.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        REDE as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_sete_municipal\"\n    group by REDE\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MUNICIPAL','P\u00daBLICA'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "REDE", "file_key_name": "models.fct_meta_sete_municipal", "attached_node": "model.exp.fct_meta_sete_municipal"}, "test.exp.accepted_values_fct_meta_sete_estadual_INDICADOR__7A__7B__7C.f34607867a": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["7A", "7B", "7C"], "column_name": "INDICADOR", "model": "{{ get_where_subquery(ref('fct_meta_sete_estadual')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_sete_estadual_INDICADOR__7A__7B__7C", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_sete_estadual_INDICADOR__7A__7B__7C.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_sete_estadual_INDICADOR__7A__7B__7C.f34607867a", "fqn": ["exp", "serving", "accepted_values_fct_meta_sete_estadual_INDICADOR__7A__7B__7C"], "alias": "accepted_values_fct_meta_sete_estadual_INDICADOR__7A__7B__7C", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.8130386, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_meta_sete_estadual", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_sete_estadual"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_sete_estadual_INDICADOR__7A__7B__7C.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        INDICADOR as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_sete_estadual\"\n    group by INDICADOR\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '7A','7B','7C'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "INDICADOR", "file_key_name": "models.fct_meta_sete_estadual", "attached_node": "model.exp.fct_meta_sete_estadual"}, "test.exp.accepted_values_fct_meta_sete_estadual_REDE__ESTADUAL__P_BLICA.24fc73bb28": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["ESTADUAL", "P\u00daBLICA"], "column_name": "REDE", "model": "{{ get_where_subquery(ref('fct_meta_sete_estadual')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_sete_estadual_REDE__ESTADUAL__P_BLICA", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_sete_estadual_REDE__ESTADUAL__P_BLICA.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_sete_estadual_REDE__ESTADUAL__P_BLICA.24fc73bb28", "fqn": ["exp", "serving", "accepted_values_fct_meta_sete_estadual_REDE__ESTADUAL__P_BLICA"], "alias": "accepted_values_fct_meta_sete_estadual_REDE__ESTADUAL__P_BLICA", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.8180928, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_meta_sete_estadual", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_sete_estadual"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_sete_estadual_REDE__ESTADUAL__P_BLICA.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        REDE as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_sete_estadual\"\n    group by REDE\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'ESTADUAL','P\u00daBLICA'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "REDE", "file_key_name": "models.fct_meta_sete_estadual", "attached_node": "model.exp.fct_meta_sete_estadual"}, "test.exp.accepted_values_fct_meta_nove_INDICADOR__9A__9B.838ebf268c": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["9A", "9B"], "column_name": "INDICADOR", "model": "{{ get_where_subquery(ref('fct_meta_nove')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_nove_INDICADOR__9A__9B", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_nove_INDICADOR__9A__9B.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_nove_INDICADOR__9A__9B.838ebf268c", "fqn": ["exp", "serving", "accepted_values_fct_meta_nove_INDICADOR__9A__9B"], "alias": "accepted_values_fct_meta_nove_INDICADOR__9A__9B", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.823055, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_meta_nove", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_nove"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_nove_INDICADOR__9A__9B.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        INDICADOR as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_nove\"\n    group by INDICADOR\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '9A','9B'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "INDICADOR", "file_key_name": "models.fct_meta_nove", "attached_node": "model.exp.fct_meta_nove"}, "test.exp.accepted_values_fct_meta_dez_INDICADOR__10A.15c25612b6": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["10A"], "column_name": "INDICADOR", "model": "{{ get_where_subquery(ref('fct_meta_dez')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_dez_INDICADOR__10A", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_dez_INDICADOR__10A.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_dez_INDICADOR__10A.15c25612b6", "fqn": ["exp", "serving", "accepted_values_fct_meta_dez_INDICADOR__10A"], "alias": "accepted_values_fct_meta_dez_INDICADOR__10A", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.8290567, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_meta_dez", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_dez"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_dez_INDICADOR__10A.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        INDICADOR as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_dez\"\n    group by INDICADOR\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '10A'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "INDICADOR", "file_key_name": "models.fct_meta_dez", "attached_node": "model.exp.fct_meta_dez"}, "test.exp.accepted_values_fct_meta_onze_INDICADOR__11A.add946633c": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["11A"], "column_name": "INDICADOR", "model": "{{ get_where_subquery(ref('fct_meta_onze')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_onze_INDICADOR__11A", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_onze_INDICADOR__11A.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_onze_INDICADOR__11A.add946633c", "fqn": ["exp", "serving", "accepted_values_fct_meta_onze_INDICADOR__11A"], "alias": "accepted_values_fct_meta_onze_INDICADOR__11A", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.8340547, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_meta_onze", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_onze"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_onze_INDICADOR__11A.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        INDICADOR as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_onze\"\n    group by INDICADOR\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '11A'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "INDICADOR", "file_key_name": "models.fct_meta_onze", "attached_node": "model.exp.fct_meta_onze"}, "test.exp.accepted_values_fct_meta_doze_INDICADOR__12A__12B__12C.2411090836": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["12A", "12B", "12C"], "column_name": "INDICADOR", "model": "{{ get_where_subquery(ref('fct_meta_doze')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_doze_INDICADOR__12A__12B__12C", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_doze_INDICADOR__12A__12B__12C.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_doze_INDICADOR__12A__12B__12C.2411090836", "fqn": ["exp", "serving", "accepted_values_fct_meta_doze_INDICADOR__12A__12B__12C"], "alias": "accepted_values_fct_meta_doze_INDICADOR__12A__12B__12C", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.8390548, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_meta_doze", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_doze"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_doze_INDICADOR__12A__12B__12C.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        INDICADOR as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_doze\"\n    group by INDICADOR\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '12A','12B','12C'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "INDICADOR", "file_key_name": "models.fct_meta_doze", "attached_node": "model.exp.fct_meta_doze"}, "test.exp.accepted_values_fct_meta_treze_INDICADOR__13A__13B.8ba70a1972": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["13A", "13B"], "column_name": "INDICADOR", "model": "{{ get_where_subquery(ref('fct_meta_treze')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_treze_INDICADOR__13A__13B", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_treze_INDICADOR__13A__13B.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_treze_INDICADOR__13A__13B.8ba70a1972", "fqn": ["exp", "serving", "accepted_values_fct_meta_treze_INDICADOR__13A__13B"], "alias": "accepted_values_fct_meta_treze_INDICADOR__13A__13B", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.8450553, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_meta_treze", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_treze"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_treze_INDICADOR__13A__13B.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        INDICADOR as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_treze\"\n    group by INDICADOR\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '13A','13B'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "INDICADOR", "file_key_name": "models.fct_meta_treze", "attached_node": "model.exp.fct_meta_treze"}, "test.exp.accepted_values_fct_meta_quatorze_INDICADOR__14A__14B.16062c7594": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["14A", "14B"], "column_name": "INDICADOR", "model": "{{ get_where_subquery(ref('fct_meta_quatorze')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_quatorze_INDICADOR__14A__14B", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_quatorze_INDICADOR__14A__14B.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_quatorze_INDICADOR__14A__14B.16062c7594", "fqn": ["exp", "serving", "accepted_values_fct_meta_quatorze_INDICADOR__14A__14B"], "alias": "accepted_values_fct_meta_quatorze_INDICADOR__14A__14B", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.8505652, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_meta_quatorze", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_quatorze"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_quatorze_INDICADOR__14A__14B.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        INDICADOR as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_quatorze\"\n    group by INDICADOR\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '14A','14B'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "INDICADOR", "file_key_name": "models.fct_meta_quatorze", "attached_node": "model.exp.fct_meta_quatorze"}, "test.exp.accepted_values_fct_meta_quatorze_GRAU_ACADEMICO__MESTRADO__DOUTORADO.ae62a78d3c": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["MESTRADO", "DOUTORADO"], "column_name": "GRAU_ACADEMICO", "model": "{{ get_where_subquery(ref('fct_meta_quatorze')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_quatorze_GRAU_ACADEMICO__MESTRADO__DOUTORADO", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_quato_ec3c06d1250f37ed7bab20823b341892.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_quatorze_GRAU_ACADEMICO__MESTRADO__DOUTORADO.ae62a78d3c", "fqn": ["exp", "serving", "accepted_values_fct_meta_quatorze_GRAU_ACADEMICO__MESTRADO__DOUTORADO"], "alias": "accepted_values_fct_meta_quato_ec3c06d1250f37ed7bab20823b341892", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_fct_meta_quato_ec3c06d1250f37ed7bab20823b341892", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_fct_meta_quato_ec3c06d1250f37ed7bab20823b341892"}, "created_at": 1723502084.8555653, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_fct_meta_quato_ec3c06d1250f37ed7bab20823b341892\") }}", "language": "sql", "refs": [{"name": "fct_meta_quatorze", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_quatorze"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_quato_ec3c06d1250f37ed7bab20823b341892.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        GRAU_ACADEMICO as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_quatorze\"\n    group by GRAU_ACADEMICO\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MESTRADO','DOUTORADO'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "GRAU_ACADEMICO", "file_key_name": "models.fct_meta_quatorze", "attached_node": "model.exp.fct_meta_quatorze"}, "test.exp.accepted_values_fct_meta_quinze_INDICADOR__15A__15B__15C__15D.94884ed1aa": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["15A", "15B", "15C", "15D"], "column_name": "INDICADOR", "model": "{{ get_where_subquery(ref('fct_meta_quinze')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_quinze_INDICADOR__15A__15B__15C__15D", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_quinze_INDICADOR__15A__15B__15C__15D.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_quinze_INDICADOR__15A__15B__15C__15D.94884ed1aa", "fqn": ["exp", "serving", "accepted_values_fct_meta_quinze_INDICADOR__15A__15B__15C__15D"], "alias": "accepted_values_fct_meta_quinze_INDICADOR__15A__15B__15C__15D", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.8620791, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_meta_quinze", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_quinze"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_quinze_INDICADOR__15A__15B__15C__15D.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        INDICADOR as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_quinze\"\n    group by INDICADOR\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '15A','15B','15C','15D'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "INDICADOR", "file_key_name": "models.fct_meta_quinze", "attached_node": "model.exp.fct_meta_quinze"}, "test.exp.accepted_values_fct_meta_dezesseis_INDICADOR__16A__16B.f9467f38c0": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["16A", "16B"], "column_name": "INDICADOR", "model": "{{ get_where_subquery(ref('fct_meta_dezesseis')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_dezesseis_INDICADOR__16A__16B", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_dezesseis_INDICADOR__16A__16B.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_dezesseis_INDICADOR__16A__16B.f9467f38c0", "fqn": ["exp", "serving", "accepted_values_fct_meta_dezesseis_INDICADOR__16A__16B"], "alias": "accepted_values_fct_meta_dezesseis_INDICADOR__16A__16B", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.8690796, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_meta_dezesseis", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_dezesseis"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_dezesseis_INDICADOR__16A__16B.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        INDICADOR as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_dezesseis\"\n    group by INDICADOR\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '16A','16B'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "INDICADOR", "file_key_name": "models.fct_meta_dezesseis", "attached_node": "model.exp.fct_meta_dezesseis"}, "test.exp.accepted_values_fcf_meta_dezessete_INDICADOR__17A.409555fa86": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["17A"], "column_name": "INDICADOR", "model": "{{ get_where_subquery(ref('fcf_meta_dezessete')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fcf_meta_dezessete_INDICADOR__17A", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fcf_meta_dezessete_INDICADOR__17A.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fcf_meta_dezessete_INDICADOR__17A.409555fa86", "fqn": ["exp", "serving", "accepted_values_fcf_meta_dezessete_INDICADOR__17A"], "alias": "accepted_values_fcf_meta_dezessete_INDICADOR__17A", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.874079, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fcf_meta_dezessete", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fcf_meta_dezessete"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fcf_meta_dezessete_INDICADOR__17A.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        INDICADOR as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fcf_meta_dezessete\"\n    group by INDICADOR\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '17A'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "INDICADOR", "file_key_name": "models.fcf_meta_dezessete", "attached_node": "model.exp.fcf_meta_dezessete"}, "test.exp.accepted_values_fct_meta_vinte_INDICADOR__20A__20B.3e774771a8": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["20A", "20B"], "column_name": "INDICADOR", "model": "{{ get_where_subquery(ref('fct_meta_vinte')) }}"}, "namespace": null}, "database": "postgres", "schema": "dbt_dbt_test__audit", "name": "accepted_values_fct_meta_vinte_INDICADOR__20A__20B", "resource_type": "test", "package_name": "exp", "path": "accepted_values_fct_meta_vinte_INDICADOR__20A__20B.sql", "original_file_path": "models\\serving\\schema.yml", "unique_id": "test.exp.accepted_values_fct_meta_vinte_INDICADOR__20A__20B.3e774771a8", "fqn": ["exp", "serving", "accepted_values_fct_meta_vinte_INDICADOR__20A__20B"], "alias": "accepted_values_fct_meta_vinte_INDICADOR__20A__20B", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1723502084.879079, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_meta_vinte", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.exp.fct_meta_vinte"]}, "compiled_path": "target\\compiled\\exp\\models\\serving\\schema.yml\\accepted_values_fct_meta_vinte_INDICADOR__20A__20B.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        INDICADOR as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"dbt_serving\".\"fct_meta_vinte\"\n    group by INDICADOR\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '20A','20B'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "INDICADOR", "file_key_name": "models.fct_meta_vinte", "attached_node": "model.exp.fct_meta_vinte"}}, "sources": {"source.exp.raw.DIM_MICRODADOS_ED_BASICA_2014": {"database": "postgres", "schema": "raw", "name": "DIM_MICRODADOS_ED_BASICA_2014", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2014", "fqn": ["exp", "raw", "DIM_MICRODADOS_ED_BASICA_2014"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_MICRODADOS_ED_BASICA_2014", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2014\"", "created_at": 1723502084.884082}, "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2015": {"database": "postgres", "schema": "raw", "name": "DIM_MICRODADOS_ED_BASICA_2015", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2015", "fqn": ["exp", "raw", "DIM_MICRODADOS_ED_BASICA_2015"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_MICRODADOS_ED_BASICA_2015", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2015\"", "created_at": 1723502084.8850799}, "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2016": {"database": "postgres", "schema": "raw", "name": "DIM_MICRODADOS_ED_BASICA_2016", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2016", "fqn": ["exp", "raw", "DIM_MICRODADOS_ED_BASICA_2016"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_MICRODADOS_ED_BASICA_2016", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2016\"", "created_at": 1723502084.8850799}, "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2017": {"database": "postgres", "schema": "raw", "name": "DIM_MICRODADOS_ED_BASICA_2017", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2017", "fqn": ["exp", "raw", "DIM_MICRODADOS_ED_BASICA_2017"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_MICRODADOS_ED_BASICA_2017", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2017\"", "created_at": 1723502084.8856034}, "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2018": {"database": "postgres", "schema": "raw", "name": "DIM_MICRODADOS_ED_BASICA_2018", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2018", "fqn": ["exp", "raw", "DIM_MICRODADOS_ED_BASICA_2018"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_MICRODADOS_ED_BASICA_2018", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2018\"", "created_at": 1723502084.8856034}, "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2019": {"database": "postgres", "schema": "raw", "name": "DIM_MICRODADOS_ED_BASICA_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2019", "fqn": ["exp", "raw", "DIM_MICRODADOS_ED_BASICA_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_MICRODADOS_ED_BASICA_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2019\"", "created_at": 1723502084.8856034}, "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2020": {"database": "postgres", "schema": "raw", "name": "DIM_MICRODADOS_ED_BASICA_2020", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2020", "fqn": ["exp", "raw", "DIM_MICRODADOS_ED_BASICA_2020"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_MICRODADOS_ED_BASICA_2020", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2020\"", "created_at": 1723502084.8856034}, "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2021": {"database": "postgres", "schema": "raw", "name": "DIM_MICRODADOS_ED_BASICA_2021", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2021", "fqn": ["exp", "raw", "DIM_MICRODADOS_ED_BASICA_2021"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_MICRODADOS_ED_BASICA_2021", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_MICRODADOS_ED_BASICA_2021\"", "created_at": 1723502084.8856034}, "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2009": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_MATRICULA_2009", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2009", "fqn": ["exp", "raw", "DIM_EDUC_SUP_MATRICULA_2009"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_MATRICULA_2009", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2009\"", "created_at": 1723502084.8856034}, "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2010": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_MATRICULA_2010", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2010", "fqn": ["exp", "raw", "DIM_EDUC_SUP_MATRICULA_2010"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_MATRICULA_2010", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2010\"", "created_at": 1723502084.8866005}, "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2011": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_MATRICULA_2011", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2011", "fqn": ["exp", "raw", "DIM_EDUC_SUP_MATRICULA_2011"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_MATRICULA_2011", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2011\"", "created_at": 1723502084.8866005}, "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2012": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_MATRICULA_2012", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2012", "fqn": ["exp", "raw", "DIM_EDUC_SUP_MATRICULA_2012"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_MATRICULA_2012", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2012\"", "created_at": 1723502084.8866005}, "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2013": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_MATRICULA_2013", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2013", "fqn": ["exp", "raw", "DIM_EDUC_SUP_MATRICULA_2013"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_MATRICULA_2013", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2013\"", "created_at": 1723502084.8866005}, "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2014": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_MATRICULA_2014", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2014", "fqn": ["exp", "raw", "DIM_EDUC_SUP_MATRICULA_2014"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_MATRICULA_2014", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2014\"", "created_at": 1723502084.8866005}, "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2015": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_MATRICULA_2015", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2015", "fqn": ["exp", "raw", "DIM_EDUC_SUP_MATRICULA_2015"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_MATRICULA_2015", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2015\"", "created_at": 1723502084.8866005}, "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2016": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_MATRICULA_2016", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2016", "fqn": ["exp", "raw", "DIM_EDUC_SUP_MATRICULA_2016"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_MATRICULA_2016", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2016\"", "created_at": 1723502084.8866005}, "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2017": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_MATRICULA_2017", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2017", "fqn": ["exp", "raw", "DIM_EDUC_SUP_MATRICULA_2017"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_MATRICULA_2017", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2017\"", "created_at": 1723502084.8876002}, "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2018": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_MATRICULA_2018", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2018", "fqn": ["exp", "raw", "DIM_EDUC_SUP_MATRICULA_2018"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_MATRICULA_2018", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2018\"", "created_at": 1723502084.8876002}, "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2019": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_MATRICULA_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2019", "fqn": ["exp", "raw", "DIM_EDUC_SUP_MATRICULA_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_MATRICULA_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2019\"", "created_at": 1723502084.8876002}, "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2020": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_MATRICULA_2020", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2020", "fqn": ["exp", "raw", "DIM_EDUC_SUP_MATRICULA_2020"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_MATRICULA_2020", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2020\"", "created_at": 1723502084.8876002}, "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2021": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_MATRICULA_2021", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2021", "fqn": ["exp", "raw", "DIM_EDUC_SUP_MATRICULA_2021"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_MATRICULA_2021", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2021\"", "created_at": 1723502084.8876002}, "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2022": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_MATRICULA_2022", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2022", "fqn": ["exp", "raw", "DIM_EDUC_SUP_MATRICULA_2022"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_MATRICULA_2022", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_MATRICULA_2022\"", "created_at": 1723502084.8876002}, "source.exp.raw.DIM_EDUC_SUP_IES_2009": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_IES_2009", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_IES_2009", "fqn": ["exp", "raw", "DIM_EDUC_SUP_IES_2009"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_IES_2009", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2009\"", "created_at": 1723502084.8876002}, "source.exp.raw.DIM_EDUC_SUP_IES_2010": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_IES_2010", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_IES_2010", "fqn": ["exp", "raw", "DIM_EDUC_SUP_IES_2010"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_IES_2010", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2010\"", "created_at": 1723502084.8886003}, "source.exp.raw.DIM_EDUC_SUP_IES_2011": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_IES_2011", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_IES_2011", "fqn": ["exp", "raw", "DIM_EDUC_SUP_IES_2011"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_IES_2011", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2011\"", "created_at": 1723502084.8886003}, "source.exp.raw.DIM_EDUC_SUP_IES_2012": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_IES_2012", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_IES_2012", "fqn": ["exp", "raw", "DIM_EDUC_SUP_IES_2012"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_IES_2012", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2012\"", "created_at": 1723502084.8886003}, "source.exp.raw.DIM_EDUC_SUP_IES_2013": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_IES_2013", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_IES_2013", "fqn": ["exp", "raw", "DIM_EDUC_SUP_IES_2013"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_IES_2013", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2013\"", "created_at": 1723502084.8886003}, "source.exp.raw.DIM_EDUC_SUP_IES_2014": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_IES_2014", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_IES_2014", "fqn": ["exp", "raw", "DIM_EDUC_SUP_IES_2014"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_IES_2014", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2014\"", "created_at": 1723502084.8886003}, "source.exp.raw.DIM_EDUC_SUP_IES_2015": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_IES_2015", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_IES_2015", "fqn": ["exp", "raw", "DIM_EDUC_SUP_IES_2015"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_IES_2015", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2015\"", "created_at": 1723502084.8886003}, "source.exp.raw.DIM_EDUC_SUP_IES_2016": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_IES_2016", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_IES_2016", "fqn": ["exp", "raw", "DIM_EDUC_SUP_IES_2016"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_IES_2016", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2016\"", "created_at": 1723502084.8886003}, "source.exp.raw.DIM_EDUC_SUP_IES_2017": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_IES_2017", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_IES_2017", "fqn": ["exp", "raw", "DIM_EDUC_SUP_IES_2017"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_IES_2017", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2017\"", "created_at": 1723502084.8896005}, "source.exp.raw.DIM_EDUC_SUP_IES_2018": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_IES_2018", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_IES_2018", "fqn": ["exp", "raw", "DIM_EDUC_SUP_IES_2018"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_IES_2018", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2018\"", "created_at": 1723502084.8896005}, "source.exp.raw.DIM_EDUC_SUP_IES_2019": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_IES_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_IES_2019", "fqn": ["exp", "raw", "DIM_EDUC_SUP_IES_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_IES_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2019\"", "created_at": 1723502084.8896005}, "source.exp.raw.DIM_EDUC_SUP_IES_2020": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_IES_2020", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_IES_2020", "fqn": ["exp", "raw", "DIM_EDUC_SUP_IES_2020"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_IES_2020", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2020\"", "created_at": 1723502084.8896005}, "source.exp.raw.DIM_EDUC_SUP_IES_2021": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_IES_2021", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_IES_2021", "fqn": ["exp", "raw", "DIM_EDUC_SUP_IES_2021"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_IES_2021", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2021\"", "created_at": 1723502084.8896005}, "source.exp.raw.DIM_EDUC_SUP_IES_2022": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_SUP_IES_2022", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_SUP_IES_2022", "fqn": ["exp", "raw", "DIM_EDUC_SUP_IES_2022"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_SUP_IES_2022", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_SUP_IES_2022\"", "created_at": 1723502084.8896005}, "source.exp.raw.DIM_GEOCAPES_TITULACAO_2022": {"database": "postgres", "schema": "raw", "name": "DIM_GEOCAPES_TITULACAO_2022", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_GEOCAPES_TITULACAO_2022", "fqn": ["exp", "raw", "DIM_GEOCAPES_TITULACAO_2022"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_GEOCAPES_TITULACAO_2022", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_GEOCAPES_TITULACAO_2022\"", "created_at": 1723502084.8896005}, "source.exp.raw.DIM_DOCENTES_CO_2013": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_CO_2013", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_CO_2013", "fqn": ["exp", "raw", "DIM_DOCENTES_CO_2013"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_CO_2013", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_CO_2013\"", "created_at": 1723502084.8906002}, "source.exp.raw.DIM_DOCENTES_CO_2014": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_CO_2014", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_CO_2014", "fqn": ["exp", "raw", "DIM_DOCENTES_CO_2014"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_CO_2014", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_CO_2014\"", "created_at": 1723502084.8906002}, "source.exp.raw.DIM_DOCENTES_CO_2015": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_CO_2015", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_CO_2015", "fqn": ["exp", "raw", "DIM_DOCENTES_CO_2015"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_CO_2015", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_CO_2015\"", "created_at": 1723502084.8906002}, "source.exp.raw.DIM_DOCENTES_CO_2016": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_CO_2016", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_CO_2016", "fqn": ["exp", "raw", "DIM_DOCENTES_CO_2016"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_CO_2016", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_CO_2016\"", "created_at": 1723502084.8906002}, "source.exp.raw.DIM_DOCENTES_CO_2017": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_CO_2017", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_CO_2017", "fqn": ["exp", "raw", "DIM_DOCENTES_CO_2017"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_CO_2017", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_CO_2017\"", "created_at": 1723502084.8906002}, "source.exp.raw.DIM_DOCENTES_CO_2018": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_CO_2018", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_CO_2018", "fqn": ["exp", "raw", "DIM_DOCENTES_CO_2018"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_CO_2018", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_CO_2018\"", "created_at": 1723502084.8906002}, "source.exp.raw.DIM_DOCENTES_CO_2019": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_CO_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_CO_2019", "fqn": ["exp", "raw", "DIM_DOCENTES_CO_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_CO_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_CO_2019\"", "created_at": 1723502084.8906002}, "source.exp.raw.DIM_DOCENTES_CO_2020": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_CO_2020", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_CO_2020", "fqn": ["exp", "raw", "DIM_DOCENTES_CO_2020"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_CO_2020", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_CO_2020\"", "created_at": 1723502084.8916008}, "source.exp.raw.DIM_DOCENTES_NORDESTE_2013": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_NORDESTE_2013", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_NORDESTE_2013", "fqn": ["exp", "raw", "DIM_DOCENTES_NORDESTE_2013"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_NORDESTE_2013", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2013\"", "created_at": 1723502084.8916008}, "source.exp.raw.DIM_DOCENTES_NORDESTE_2014": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_NORDESTE_2014", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_NORDESTE_2014", "fqn": ["exp", "raw", "DIM_DOCENTES_NORDESTE_2014"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_NORDESTE_2014", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2014\"", "created_at": 1723502084.8916008}, "source.exp.raw.DIM_DOCENTES_NORDESTE_2015": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_NORDESTE_2015", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_NORDESTE_2015", "fqn": ["exp", "raw", "DIM_DOCENTES_NORDESTE_2015"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_NORDESTE_2015", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2015\"", "created_at": 1723502084.8916008}, "source.exp.raw.DIM_DOCENTES_NORDESTE_2016": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_NORDESTE_2016", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_NORDESTE_2016", "fqn": ["exp", "raw", "DIM_DOCENTES_NORDESTE_2016"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_NORDESTE_2016", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2016\"", "created_at": 1723502084.8916008}, "source.exp.raw.DIM_DOCENTES_NORDESTE_2017": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_NORDESTE_2017", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_NORDESTE_2017", "fqn": ["exp", "raw", "DIM_DOCENTES_NORDESTE_2017"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_NORDESTE_2017", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2017\"", "created_at": 1723502084.8916008}, "source.exp.raw.DIM_DOCENTES_NORDESTE_2018": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_NORDESTE_2018", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_NORDESTE_2018", "fqn": ["exp", "raw", "DIM_DOCENTES_NORDESTE_2018"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_NORDESTE_2018", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2018\"", "created_at": 1723502084.8926003}, "source.exp.raw.DIM_DOCENTES_NORDESTE_2019": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_NORDESTE_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_NORDESTE_2019", "fqn": ["exp", "raw", "DIM_DOCENTES_NORDESTE_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_NORDESTE_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2019\"", "created_at": 1723502084.8926003}, "source.exp.raw.DIM_DOCENTES_NORDESTE_2020": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_NORDESTE_2020", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_NORDESTE_2020", "fqn": ["exp", "raw", "DIM_DOCENTES_NORDESTE_2020"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_NORDESTE_2020", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_NORDESTE_2020\"", "created_at": 1723502084.8926003}, "source.exp.raw.DIM_DOCENTES_NORTE_2013": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_NORTE_2013", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_NORTE_2013", "fqn": ["exp", "raw", "DIM_DOCENTES_NORTE_2013"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_NORTE_2013", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2013\"", "created_at": 1723502084.8926003}, "source.exp.raw.DIM_DOCENTES_NORTE_2014": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_NORTE_2014", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_NORTE_2014", "fqn": ["exp", "raw", "DIM_DOCENTES_NORTE_2014"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_NORTE_2014", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2014\"", "created_at": 1723502084.8926003}, "source.exp.raw.DIM_DOCENTES_NORTE_2015": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_NORTE_2015", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_NORTE_2015", "fqn": ["exp", "raw", "DIM_DOCENTES_NORTE_2015"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_NORTE_2015", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2015\"", "created_at": 1723502084.8926003}, "source.exp.raw.DIM_DOCENTES_NORTE_2016": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_NORTE_2016", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_NORTE_2016", "fqn": ["exp", "raw", "DIM_DOCENTES_NORTE_2016"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_NORTE_2016", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2016\"", "created_at": 1723502084.8936005}, "source.exp.raw.DIM_DOCENTES_NORTE_2017": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_NORTE_2017", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_NORTE_2017", "fqn": ["exp", "raw", "DIM_DOCENTES_NORTE_2017"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_NORTE_2017", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2017\"", "created_at": 1723502084.8936005}, "source.exp.raw.DIM_DOCENTES_NORTE_2018": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_NORTE_2018", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_NORTE_2018", "fqn": ["exp", "raw", "DIM_DOCENTES_NORTE_2018"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_NORTE_2018", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2018\"", "created_at": 1723502084.8936005}, "source.exp.raw.DIM_DOCENTES_NORTE_2019": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_NORTE_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_NORTE_2019", "fqn": ["exp", "raw", "DIM_DOCENTES_NORTE_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_NORTE_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2019\"", "created_at": 1723502084.8936005}, "source.exp.raw.DIM_DOCENTES_NORTE_2020": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_NORTE_2020", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_NORTE_2020", "fqn": ["exp", "raw", "DIM_DOCENTES_NORTE_2020"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_NORTE_2020", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_NORTE_2020\"", "created_at": 1723502084.8936005}, "source.exp.raw.DIM_DOCENTES_SUDESTE_2013": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_SUDESTE_2013", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_SUDESTE_2013", "fqn": ["exp", "raw", "DIM_DOCENTES_SUDESTE_2013"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_SUDESTE_2013", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2013\"", "created_at": 1723502084.8936005}, "source.exp.raw.DIM_DOCENTES_SUDESTE_2014": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_SUDESTE_2014", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_SUDESTE_2014", "fqn": ["exp", "raw", "DIM_DOCENTES_SUDESTE_2014"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_SUDESTE_2014", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2014\"", "created_at": 1723502084.8936005}, "source.exp.raw.DIM_DOCENTES_SUDESTE_2015": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_SUDESTE_2015", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_SUDESTE_2015", "fqn": ["exp", "raw", "DIM_DOCENTES_SUDESTE_2015"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_SUDESTE_2015", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2015\"", "created_at": 1723502084.8946002}, "source.exp.raw.DIM_DOCENTES_SUDESTE_2016": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_SUDESTE_2016", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_SUDESTE_2016", "fqn": ["exp", "raw", "DIM_DOCENTES_SUDESTE_2016"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_SUDESTE_2016", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2016\"", "created_at": 1723502084.8946002}, "source.exp.raw.DIM_DOCENTES_SUDESTE_2017": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_SUDESTE_2017", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_SUDESTE_2017", "fqn": ["exp", "raw", "DIM_DOCENTES_SUDESTE_2017"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_SUDESTE_2017", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2017\"", "created_at": 1723502084.8946002}, "source.exp.raw.DIM_DOCENTES_SUDESTE_2018": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_SUDESTE_2018", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_SUDESTE_2018", "fqn": ["exp", "raw", "DIM_DOCENTES_SUDESTE_2018"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_SUDESTE_2018", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2018\"", "created_at": 1723502084.8946002}, "source.exp.raw.DIM_DOCENTES_SUDESTE_2019": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_SUDESTE_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_SUDESTE_2019", "fqn": ["exp", "raw", "DIM_DOCENTES_SUDESTE_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_SUDESTE_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2019\"", "created_at": 1723502084.8946002}, "source.exp.raw.DIM_DOCENTES_SUDESTE_2020": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_SUDESTE_2020", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_SUDESTE_2020", "fqn": ["exp", "raw", "DIM_DOCENTES_SUDESTE_2020"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_SUDESTE_2020", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_SUDESTE_2020\"", "created_at": 1723502084.8946002}, "source.exp.raw.DIM_DOCENTES_SUL_2013": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_SUL_2013", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_SUL_2013", "fqn": ["exp", "raw", "DIM_DOCENTES_SUL_2013"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_SUL_2013", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2013\"", "created_at": 1723502084.8946002}, "source.exp.raw.DIM_DOCENTES_SUL_2014": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_SUL_2014", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_SUL_2014", "fqn": ["exp", "raw", "DIM_DOCENTES_SUL_2014"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_SUL_2014", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2014\"", "created_at": 1723502084.8956006}, "source.exp.raw.DIM_DOCENTES_SUL_2015": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_SUL_2015", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_SUL_2015", "fqn": ["exp", "raw", "DIM_DOCENTES_SUL_2015"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_SUL_2015", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2015\"", "created_at": 1723502084.8956006}, "source.exp.raw.DIM_DOCENTES_SUL_2016": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_SUL_2016", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_SUL_2016", "fqn": ["exp", "raw", "DIM_DOCENTES_SUL_2016"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_SUL_2016", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2016\"", "created_at": 1723502084.8956006}, "source.exp.raw.DIM_DOCENTES_SUL_2017": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_SUL_2017", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_SUL_2017", "fqn": ["exp", "raw", "DIM_DOCENTES_SUL_2017"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_SUL_2017", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2017\"", "created_at": 1723502084.8956006}, "source.exp.raw.DIM_DOCENTES_SUL_2018": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_SUL_2018", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_SUL_2018", "fqn": ["exp", "raw", "DIM_DOCENTES_SUL_2018"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_SUL_2018", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2018\"", "created_at": 1723502084.8956006}, "source.exp.raw.DIM_DOCENTES_SUL_2019": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_SUL_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_SUL_2019", "fqn": ["exp", "raw", "DIM_DOCENTES_SUL_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_SUL_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2019\"", "created_at": 1723502084.8956006}, "source.exp.raw.DIM_DOCENTES_SUL_2020": {"database": "postgres", "schema": "raw", "name": "DIM_DOCENTES_SUL_2020", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_DOCENTES_SUL_2020", "fqn": ["exp", "raw", "DIM_DOCENTES_SUL_2020"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_DOCENTES_SUL_2020", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_DOCENTES_SUL_2020\"", "created_at": 1723502084.8956006}, "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2013": {"database": "postgres", "schema": "raw", "name": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2013", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2013", "fqn": ["exp", "raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2013"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2013", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2013\"", "created_at": 1723502084.8966017}, "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2014": {"database": "postgres", "schema": "raw", "name": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2014", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2014", "fqn": ["exp", "raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2014"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2014", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2014\"", "created_at": 1723502084.8966017}, "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2015": {"database": "postgres", "schema": "raw", "name": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2015", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2015", "fqn": ["exp", "raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2015"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2015", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2015\"", "created_at": 1723502084.8966017}, "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2016": {"database": "postgres", "schema": "raw", "name": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2016", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2016", "fqn": ["exp", "raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2016"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2016", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2016\"", "created_at": 1723502084.8966017}, "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2017": {"database": "postgres", "schema": "raw", "name": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2017", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2017", "fqn": ["exp", "raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2017"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2017", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2017\"", "created_at": 1723502084.8966017}, "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2018": {"database": "postgres", "schema": "raw", "name": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2018", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2018", "fqn": ["exp", "raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2018"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2018", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2018\"", "created_at": 1723502084.8966017}, "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2019": {"database": "postgres", "schema": "raw", "name": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2019", "fqn": ["exp", "raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2019\"", "created_at": 1723502084.8966017}, "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2020": {"database": "postgres", "schema": "raw", "name": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2020", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2020", "fqn": ["exp", "raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2020"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2020", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2020\"", "created_at": 1723502084.8976002}, "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2021": {"database": "postgres", "schema": "raw", "name": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2021", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2021", "fqn": ["exp", "raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2021"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2021", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2021\"", "created_at": 1723502084.8976002}, "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2022": {"database": "postgres", "schema": "raw", "name": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2022", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2022", "fqn": ["exp", "raw", "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2022"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_SICONFI_MUN_DESPESASPORFUNCAO_2022", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_SICONFI_MUN_DESPESASPORFUNCAO_2022\"", "created_at": 1723502084.8976002}, "source.exp.raw.DIM_MUNICIPIOS_PIB": {"database": "postgres", "schema": "raw", "name": "DIM_MUNICIPIOS_PIB", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_MUNICIPIOS_PIB", "fqn": ["exp", "raw", "DIM_MUNICIPIOS_PIB"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_MUNICIPIOS_PIB", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_MUNICIPIOS_PIB\"", "created_at": 1723502084.8976002}, "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2019": {"database": "postgres", "schema": "raw", "name": "DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2019", "fqn": ["exp", "raw", "DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2019\"", "created_at": 1723502084.8976002}, "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2021": {"database": "postgres", "schema": "raw", "name": "DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2021", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2021", "fqn": ["exp", "raw", "DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2021"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2021", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2021\"", "created_at": 1723502084.8976002}, "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2019": {"database": "postgres", "schema": "raw", "name": "DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2019", "fqn": ["exp", "raw", "DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2019\"", "created_at": 1723502084.8986}, "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2021": {"database": "postgres", "schema": "raw", "name": "DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2021", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2021", "fqn": ["exp", "raw", "DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2021"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2021", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2021\"", "created_at": 1723502084.8986}, "source.exp.raw.DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2019": {"database": "postgres", "schema": "raw", "name": "DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2019", "fqn": ["exp", "raw", "DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2019\"", "created_at": 1723502084.8986}, "source.exp.raw.DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2021": {"database": "postgres", "schema": "raw", "name": "DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2021", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2021", "fqn": ["exp", "raw", "DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2021"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2021", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2021\"", "created_at": 1723502084.8986}, "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2019": {"database": "postgres", "schema": "raw", "name": "DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2019", "fqn": ["exp", "raw", "DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2019\"", "created_at": 1723502084.8986}, "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2021": {"database": "postgres", "schema": "raw", "name": "DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2021", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2021", "fqn": ["exp", "raw", "DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2021"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2021", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2021\"", "created_at": 1723502084.8986}, "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_FINAIS_2019": {"database": "postgres", "schema": "raw", "name": "DIM_IDEB_ESTADUAL_ANOS_FINAIS_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_FINAIS_2019", "fqn": ["exp", "raw", "DIM_IDEB_ESTADUAL_ANOS_FINAIS_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_IDEB_ESTADUAL_ANOS_FINAIS_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_IDEB_ESTADUAL_ANOS_FINAIS_2019\"", "created_at": 1723502084.8986}, "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_FINAIS_2021": {"database": "postgres", "schema": "raw", "name": "DIM_IDEB_ESTADUAL_ANOS_FINAIS_2021", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_FINAIS_2021", "fqn": ["exp", "raw", "DIM_IDEB_ESTADUAL_ANOS_FINAIS_2021"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_IDEB_ESTADUAL_ANOS_FINAIS_2021", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_IDEB_ESTADUAL_ANOS_FINAIS_2021\"", "created_at": 1723502084.8996007}, "source.exp.raw.DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2019": {"database": "postgres", "schema": "raw", "name": "DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2019", "fqn": ["exp", "raw", "DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2019\"", "created_at": 1723502084.8996007}, "source.exp.raw.DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2021": {"database": "postgres", "schema": "raw", "name": "DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2021", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2021", "fqn": ["exp", "raw", "DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2021"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2021", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2021\"", "created_at": 1723502084.8996007}, "source.exp.raw.DIM_MUNIC_EDUC_2014": {"database": "postgres", "schema": "raw", "name": "DIM_MUNIC_EDUC_2014", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_MUNIC_EDUC_2014", "fqn": ["exp", "raw", "DIM_MUNIC_EDUC_2014"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_MUNIC_EDUC_2014", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_MUNIC_EDUC_2014\"", "created_at": 1723502084.8996007}, "source.exp.raw.DIM_MUNIC_EDUC_2018": {"database": "postgres", "schema": "raw", "name": "DIM_MUNIC_EDUC_2018", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_MUNIC_EDUC_2018", "fqn": ["exp", "raw", "DIM_MUNIC_EDUC_2018"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_MUNIC_EDUC_2018", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_MUNIC_EDUC_2018\"", "created_at": 1723502084.8996007}, "source.exp.raw.DIM_MUNIC_EDUC_2021": {"database": "postgres", "schema": "raw", "name": "DIM_MUNIC_EDUC_2021", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_MUNIC_EDUC_2021", "fqn": ["exp", "raw", "DIM_MUNIC_EDUC_2021"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_MUNIC_EDUC_2021", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_MUNIC_EDUC_2021\"", "created_at": 1723502084.8996007}, "source.exp.raw.DIM_EDUC_BASICA_ESCOLA_2019": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_BASICA_ESCOLA_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_BASICA_ESCOLA_2019", "fqn": ["exp", "raw", "DIM_EDUC_BASICA_ESCOLA_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_BASICA_ESCOLA_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_BASICA_ESCOLA_2019\"", "created_at": 1723502084.8996007}, "source.exp.raw.DIM_EDUC_BASICA_ESCOLA_2020": {"database": "postgres", "schema": "raw", "name": "DIM_EDUC_BASICA_ESCOLA_2020", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_EDUC_BASICA_ESCOLA_2020", "fqn": ["exp", "raw", "DIM_EDUC_BASICA_ESCOLA_2020"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_EDUC_BASICA_ESCOLA_2020", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_EDUC_BASICA_ESCOLA_2020\"", "created_at": 1723502084.9006007}, "source.exp.raw.DIM_CENSO_EDUC_BASICA_GESTOR_2019": {"database": "postgres", "schema": "raw", "name": "DIM_CENSO_EDUC_BASICA_GESTOR_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_CENSO_EDUC_BASICA_GESTOR_2019", "fqn": ["exp", "raw", "DIM_CENSO_EDUC_BASICA_GESTOR_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_CENSO_EDUC_BASICA_GESTOR_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_GESTOR_2019\"", "created_at": 1723502084.9006007}, "source.exp.raw.DIM_CENSO_EDUC_BASICA_GESTOR_2020": {"database": "postgres", "schema": "raw", "name": "DIM_CENSO_EDUC_BASICA_GESTOR_2020", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_CENSO_EDUC_BASICA_GESTOR_2020", "fqn": ["exp", "raw", "DIM_CENSO_EDUC_BASICA_GESTOR_2020"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_CENSO_EDUC_BASICA_GESTOR_2020", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_GESTOR_2020\"", "created_at": 1723502084.9006007}, "source.exp.raw.DIM_ESTADIC_2014": {"database": "postgres", "schema": "raw", "name": "DIM_ESTADIC_2014", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_ESTADIC_2014", "fqn": ["exp", "raw", "DIM_ESTADIC_2014"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_ESTADIC_2014", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_ESTADIC_2014\"", "created_at": 1723502084.9006007}, "source.exp.raw.DIM_ESTADIC_2018": {"database": "postgres", "schema": "raw", "name": "DIM_ESTADIC_2018", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_ESTADIC_2018", "fqn": ["exp", "raw", "DIM_ESTADIC_2018"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_ESTADIC_2018", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_ESTADIC_2018\"", "created_at": 1723502084.9006007}, "source.exp.raw.DIM_ESTADIC_2021": {"database": "postgres", "schema": "raw", "name": "DIM_ESTADIC_2021", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_ESTADIC_2021", "fqn": ["exp", "raw", "DIM_ESTADIC_2021"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_ESTADIC_2021", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_ESTADIC_2021\"", "created_at": 1723502084.9006007}, "source.exp.raw.DIM_FORMACAO_ADEQUADA": {"database": "postgres", "schema": "raw", "name": "DIM_FORMACAO_ADEQUADA", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_FORMACAO_ADEQUADA", "fqn": ["exp", "raw", "DIM_FORMACAO_ADEQUADA"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_FORMACAO_ADEQUADA", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_FORMACAO_ADEQUADA\"", "created_at": 1723502084.9006007}, "source.exp.raw.DIM_CURSO_SUPERIOR": {"database": "postgres", "schema": "raw", "name": "DIM_CURSO_SUPERIOR", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_CURSO_SUPERIOR", "fqn": ["exp", "raw", "DIM_CURSO_SUPERIOR"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_CURSO_SUPERIOR", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_CURSO_SUPERIOR\"", "created_at": 1723502084.9016013}, "source.exp.raw.DIM_COMPLEMENTACAO_PEDAGOGICA": {"database": "postgres", "schema": "raw", "name": "DIM_COMPLEMENTACAO_PEDAGOGICA", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_COMPLEMENTACAO_PEDAGOGICA", "fqn": ["exp", "raw", "DIM_COMPLEMENTACAO_PEDAGOGICA"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_COMPLEMENTACAO_PEDAGOGICA", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_COMPLEMENTACAO_PEDAGOGICA\"", "created_at": 1723502084.9016013}, "source.exp.raw.DIM_RAIS_PROFESSORES_PUBLICOS_GRADUADOS_2014_2022": {"database": "postgres", "schema": "raw", "name": "DIM_RAIS_PROFESSORES_PUBLICOS_GRADUADOS_2014_2022", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_RAIS_PROFESSORES_PUBLICOS_GRADUADOS_2014_2022", "fqn": ["exp", "raw", "DIM_RAIS_PROFESSORES_PUBLICOS_GRADUADOS_2014_2022"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_RAIS_PROFESSORES_PUBLICOS_GRADUADOS_2014_2022", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_RAIS_PROFESSORES_PUBLICOS_GRADUADOS_2014_2022\"", "created_at": 1723502084.9016013}, "source.exp.raw.DIM_RAIS_PROFISSIONAIS_GRADUADOS_2014_2022": {"database": "postgres", "schema": "raw", "name": "DIM_RAIS_PROFISSIONAIS_GRADUADOS_2014_2022", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_RAIS_PROFISSIONAIS_GRADUADOS_2014_2022", "fqn": ["exp", "raw", "DIM_RAIS_PROFISSIONAIS_GRADUADOS_2014_2022"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_RAIS_PROFISSIONAIS_GRADUADOS_2014_2022", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_RAIS_PROFISSIONAIS_GRADUADOS_2014_2022\"", "created_at": 1723502084.9016013}, "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2014": {"database": "postgres", "schema": "raw", "name": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2014", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2014", "fqn": ["exp", "raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2014"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2014", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2014\"", "created_at": 1723502084.9016013}, "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2015": {"database": "postgres", "schema": "raw", "name": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2015", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2015", "fqn": ["exp", "raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2015"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2015", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2015\"", "created_at": 1723502084.9016013}, "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2016": {"database": "postgres", "schema": "raw", "name": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2016", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2016", "fqn": ["exp", "raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2016"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2016", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2016\"", "created_at": 1723502084.9016013}, "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2017": {"database": "postgres", "schema": "raw", "name": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2017", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2017", "fqn": ["exp", "raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2017"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2017", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2017\"", "created_at": 1723502084.9026022}, "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2018": {"database": "postgres", "schema": "raw", "name": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2018", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2018", "fqn": ["exp", "raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2018"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2018", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2018\"", "created_at": 1723502084.9026022}, "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2019": {"database": "postgres", "schema": "raw", "name": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2019", "fqn": ["exp", "raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2019\"", "created_at": 1723502084.9026022}, "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2020": {"database": "postgres", "schema": "raw", "name": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2020", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2020", "fqn": ["exp", "raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2020"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2020", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2020\"", "created_at": 1723502084.9026022}, "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2014": {"database": "postgres", "schema": "raw", "name": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2014", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2014", "fqn": ["exp", "raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2014"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2014", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2014\"", "created_at": 1723502084.9026022}, "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2015": {"database": "postgres", "schema": "raw", "name": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2015", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2015", "fqn": ["exp", "raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2015"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2015", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2015\"", "created_at": 1723502084.9026022}, "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2016": {"database": "postgres", "schema": "raw", "name": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2016", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2016", "fqn": ["exp", "raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2016"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2016", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2016\"", "created_at": 1723502084.9026022}, "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2017": {"database": "postgres", "schema": "raw", "name": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2017", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2017", "fqn": ["exp", "raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2017"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2017", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2017\"", "created_at": 1723502084.9026022}, "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2018": {"database": "postgres", "schema": "raw", "name": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2018", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2018", "fqn": ["exp", "raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2018"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2018", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2018\"", "created_at": 1723502084.903602}, "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2019": {"database": "postgres", "schema": "raw", "name": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2019", "fqn": ["exp", "raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2019\"", "created_at": 1723502084.903602}, "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2020": {"database": "postgres", "schema": "raw", "name": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2020", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2020", "fqn": ["exp", "raw", "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2020"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2020", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2020\"", "created_at": 1723502084.903602}, "source.exp.raw.DIM_ANALFABETISMO_FUNCIONAL": {"database": "postgres", "schema": "raw", "name": "DIM_ANALFABETISMO_FUNCIONAL", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_ANALFABETISMO_FUNCIONAL", "fqn": ["exp", "raw", "DIM_ANALFABETISMO_FUNCIONAL"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_ANALFABETISMO_FUNCIONAL", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_ANALFABETISMO_FUNCIONAL\"", "created_at": 1723502084.903602}, "source.exp.raw.DIM_TCE_PE_MUNICIPIO": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_PE_MUNICIPIO", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_PE_MUNICIPIO", "fqn": ["exp", "raw", "DIM_TCE_PE_MUNICIPIO"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_PE_MUNICIPIO", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_PE_MUNICIPIO\"", "created_at": 1723502084.903602}, "source.exp.raw.DIM_TCE_PE_DESPESAS_2014": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_PE_DESPESAS_2014", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_PE_DESPESAS_2014", "fqn": ["exp", "raw", "DIM_TCE_PE_DESPESAS_2014"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_PE_DESPESAS_2014", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2014\"", "created_at": 1723502084.903602}, "source.exp.raw.DIM_TCE_PE_DESPESAS_2015": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_PE_DESPESAS_2015", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_PE_DESPESAS_2015", "fqn": ["exp", "raw", "DIM_TCE_PE_DESPESAS_2015"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_PE_DESPESAS_2015", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2015\"", "created_at": 1723502084.9046009}, "source.exp.raw.DIM_TCE_PE_DESPESAS_2016": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_PE_DESPESAS_2016", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_PE_DESPESAS_2016", "fqn": ["exp", "raw", "DIM_TCE_PE_DESPESAS_2016"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_PE_DESPESAS_2016", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2016\"", "created_at": 1723502084.9046009}, "source.exp.raw.DIM_TCE_PE_DESPESAS_2017": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_PE_DESPESAS_2017", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_PE_DESPESAS_2017", "fqn": ["exp", "raw", "DIM_TCE_PE_DESPESAS_2017"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_PE_DESPESAS_2017", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2017\"", "created_at": 1723502084.9046009}, "source.exp.raw.DIM_TCE_PE_DESPESAS_2018": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_PE_DESPESAS_2018", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_PE_DESPESAS_2018", "fqn": ["exp", "raw", "DIM_TCE_PE_DESPESAS_2018"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_PE_DESPESAS_2018", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2018\"", "created_at": 1723502084.9046009}, "source.exp.raw.DIM_TCE_PE_DESPESAS_2019": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_PE_DESPESAS_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_PE_DESPESAS_2019", "fqn": ["exp", "raw", "DIM_TCE_PE_DESPESAS_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_PE_DESPESAS_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2019\"", "created_at": 1723502084.9046009}, "source.exp.raw.DIM_TCE_PE_DESPESAS_2020": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_PE_DESPESAS_2020", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_PE_DESPESAS_2020", "fqn": ["exp", "raw", "DIM_TCE_PE_DESPESAS_2020"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_PE_DESPESAS_2020", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2020\"", "created_at": 1723502084.9046009}, "source.exp.raw.DIM_TCE_PE_DESPESAS_2021": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_PE_DESPESAS_2021", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_PE_DESPESAS_2021", "fqn": ["exp", "raw", "DIM_TCE_PE_DESPESAS_2021"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_PE_DESPESAS_2021", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2021\"", "created_at": 1723502084.9046009}, "source.exp.raw.DIM_TCE_PE_DESPESAS_2022": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_PE_DESPESAS_2022", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_PE_DESPESAS_2022", "fqn": ["exp", "raw", "DIM_TCE_PE_DESPESAS_2022"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_PE_DESPESAS_2022", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2022\"", "created_at": 1723502084.9056005}, "source.exp.raw.DIM_TCE_PE_DESPESAS_2023": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_PE_DESPESAS_2023", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_PE_DESPESAS_2023", "fqn": ["exp", "raw", "DIM_TCE_PE_DESPESAS_2023"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_PE_DESPESAS_2023", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_PE_DESPESAS_2023\"", "created_at": 1723502084.9056005}, "source.exp.raw.DIM_TCE_SP_DESPESAS_2014": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_SP_DESPESAS_2014", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_SP_DESPESAS_2014", "fqn": ["exp", "raw", "DIM_TCE_SP_DESPESAS_2014"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_SP_DESPESAS_2014", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2014\"", "created_at": 1723502084.9056005}, "source.exp.raw.DIM_TCE_SP_DESPESAS_2015": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_SP_DESPESAS_2015", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_SP_DESPESAS_2015", "fqn": ["exp", "raw", "DIM_TCE_SP_DESPESAS_2015"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_SP_DESPESAS_2015", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2015\"", "created_at": 1723502084.9056005}, "source.exp.raw.DIM_TCE_SP_DESPESAS_2016": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_SP_DESPESAS_2016", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_SP_DESPESAS_2016", "fqn": ["exp", "raw", "DIM_TCE_SP_DESPESAS_2016"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_SP_DESPESAS_2016", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2016\"", "created_at": 1723502084.9056005}, "source.exp.raw.DIM_TCE_SP_DESPESAS_2017": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_SP_DESPESAS_2017", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_SP_DESPESAS_2017", "fqn": ["exp", "raw", "DIM_TCE_SP_DESPESAS_2017"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_SP_DESPESAS_2017", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2017\"", "created_at": 1723502084.9056005}, "source.exp.raw.DIM_TCE_SP_DESPESAS_2018": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_SP_DESPESAS_2018", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_SP_DESPESAS_2018", "fqn": ["exp", "raw", "DIM_TCE_SP_DESPESAS_2018"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_SP_DESPESAS_2018", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2018\"", "created_at": 1723502084.9056005}, "source.exp.raw.DIM_TCE_SP_DESPESAS_2019": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_SP_DESPESAS_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_SP_DESPESAS_2019", "fqn": ["exp", "raw", "DIM_TCE_SP_DESPESAS_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_SP_DESPESAS_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2019\"", "created_at": 1723502084.906601}, "source.exp.raw.DIM_TCE_SP_DESPESAS_2020": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_SP_DESPESAS_2020", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_SP_DESPESAS_2020", "fqn": ["exp", "raw", "DIM_TCE_SP_DESPESAS_2020"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_SP_DESPESAS_2020", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2020\"", "created_at": 1723502084.906601}, "source.exp.raw.DIM_TCE_SP_DESPESAS_2021": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_SP_DESPESAS_2021", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_SP_DESPESAS_2021", "fqn": ["exp", "raw", "DIM_TCE_SP_DESPESAS_2021"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_SP_DESPESAS_2021", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2021\"", "created_at": 1723502084.906601}, "source.exp.raw.DIM_TCE_SP_DESPESAS_2022": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_SP_DESPESAS_2022", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_SP_DESPESAS_2022", "fqn": ["exp", "raw", "DIM_TCE_SP_DESPESAS_2022"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_SP_DESPESAS_2022", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2022\"", "created_at": 1723502084.906601}, "source.exp.raw.DIM_TCE_SP_DESPESAS_2023": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_SP_DESPESAS_2023", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_SP_DESPESAS_2023", "fqn": ["exp", "raw", "DIM_TCE_SP_DESPESAS_2023"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_SP_DESPESAS_2023", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_SP_DESPESAS_2023\"", "created_at": 1723502084.906601}, "source.exp.raw.DIM_TCE_MG_EDUCACAO": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_MG_EDUCACAO", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_MG_EDUCACAO", "fqn": ["exp", "raw", "DIM_TCE_MG_EDUCACAO"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_MG_EDUCACAO", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_MG_EDUCACAO\"", "created_at": 1723502084.906601}, "source.exp.raw.DIM_TCE_ES_DESPESAS_2014": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_ES_DESPESAS_2014", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_ES_DESPESAS_2014", "fqn": ["exp", "raw", "DIM_TCE_ES_DESPESAS_2014"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_ES_DESPESAS_2014", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2014\"", "created_at": 1723502084.906601}, "source.exp.raw.DIM_TCE_ES_DESPESAS_2015": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_ES_DESPESAS_2015", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_ES_DESPESAS_2015", "fqn": ["exp", "raw", "DIM_TCE_ES_DESPESAS_2015"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_ES_DESPESAS_2015", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2015\"", "created_at": 1723502084.9076009}, "source.exp.raw.DIM_TCE_ES_DESPESAS_2016": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_ES_DESPESAS_2016", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_ES_DESPESAS_2016", "fqn": ["exp", "raw", "DIM_TCE_ES_DESPESAS_2016"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_ES_DESPESAS_2016", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2016\"", "created_at": 1723502084.9076009}, "source.exp.raw.DIM_TCE_ES_DESPESAS_2017": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_ES_DESPESAS_2017", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_ES_DESPESAS_2017", "fqn": ["exp", "raw", "DIM_TCE_ES_DESPESAS_2017"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_ES_DESPESAS_2017", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2017\"", "created_at": 1723502084.9076009}, "source.exp.raw.DIM_TCE_ES_DESPESAS_2018": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_ES_DESPESAS_2018", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_ES_DESPESAS_2018", "fqn": ["exp", "raw", "DIM_TCE_ES_DESPESAS_2018"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_ES_DESPESAS_2018", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2018\"", "created_at": 1723502084.9076009}, "source.exp.raw.DIM_TCE_ES_DESPESAS_2019": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_ES_DESPESAS_2019", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_ES_DESPESAS_2019", "fqn": ["exp", "raw", "DIM_TCE_ES_DESPESAS_2019"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_ES_DESPESAS_2019", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2019\"", "created_at": 1723502084.9076009}, "source.exp.raw.DIM_TCE_ES_DESPESAS_2020": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_ES_DESPESAS_2020", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_ES_DESPESAS_2020", "fqn": ["exp", "raw", "DIM_TCE_ES_DESPESAS_2020"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_ES_DESPESAS_2020", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2020\"", "created_at": 1723502084.9076009}, "source.exp.raw.DIM_TCE_ES_DESPESAS_2021": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_ES_DESPESAS_2021", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_ES_DESPESAS_2021", "fqn": ["exp", "raw", "DIM_TCE_ES_DESPESAS_2021"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_ES_DESPESAS_2021", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2021\"", "created_at": 1723502084.9076009}, "source.exp.raw.DIM_TCE_ES_DESPESAS_2022": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_ES_DESPESAS_2022", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_ES_DESPESAS_2022", "fqn": ["exp", "raw", "DIM_TCE_ES_DESPESAS_2022"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_ES_DESPESAS_2022", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2022\"", "created_at": 1723502084.9086008}, "source.exp.raw.DIM_TCE_ES_DESPESAS_2023": {"database": "postgres", "schema": "raw", "name": "DIM_TCE_ES_DESPESAS_2023", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.raw.DIM_TCE_ES_DESPESAS_2023", "fqn": ["exp", "raw", "DIM_TCE_ES_DESPESAS_2023"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_TCE_ES_DESPESAS_2023", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_TCE_ES_DESPESAS_2023\"", "created_at": 1723502084.9086008}, "source.exp.staging.FCT_ESCOLAS_PUBLICAS_INTEGRAL_6B": {"database": "postgres", "schema": "staging", "name": "FCT_ESCOLAS_PUBLICAS_INTEGRAL_6B", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.staging.FCT_ESCOLAS_PUBLICAS_INTEGRAL_6B", "fqn": ["exp", "staging", "FCT_ESCOLAS_PUBLICAS_INTEGRAL_6B"], "source_name": "staging", "source_description": "", "loader": "", "identifier": "FCT_ESCOLAS_PUBLICAS_INTEGRAL_6B", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"staging\".\"FCT_ESCOLAS_PUBLICAS_INTEGRAL_6B\"", "created_at": 1723502084.9086008}, "source.exp.staging.FCT_MATRICULAS_EPT": {"database": "postgres", "schema": "staging", "name": "FCT_MATRICULAS_EPT", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.staging.FCT_MATRICULAS_EPT", "fqn": ["exp", "staging", "FCT_MATRICULAS_EPT"], "source_name": "staging", "source_description": "", "loader": "", "identifier": "FCT_MATRICULAS_EPT", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"staging\".\"FCT_MATRICULAS_EPT\"", "created_at": 1723502084.9086008}, "source.exp.staging.FCT_MATRICULAS_EJA_10A": {"database": "postgres", "schema": "staging", "name": "FCT_MATRICULAS_EJA_10A", "resource_type": "source", "package_name": "exp", "path": "models\\schema.yml", "original_file_path": "models\\schema.yml", "unique_id": "source.exp.staging.FCT_MATRICULAS_EJA_10A", "fqn": ["exp", "staging", "FCT_MATRICULAS_EJA_10A"], "source_name": "staging", "source_description": "", "loader": "", "identifier": "FCT_MATRICULAS_EJA_10A", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"staging\".\"FCT_MATRICULAS_EJA_10A\"", "created_at": 1723502084.9086008}, "source.exp.raw.DIM_ESTIMATIVA_DA_POPULACAO_POR_ANO_MUNICIPIO_IDADE": {"database": "postgres", "schema": "raw", "name": "DIM_ESTIMATIVA_DA_POPULACAO_POR_ANO_MUNICIPIO_IDADE", "resource_type": "source", "package_name": "exp", "path": "models\\fct_projecao_populacional\\schema.yml", "original_file_path": "models\\fct_projecao_populacional\\schema.yml", "unique_id": "source.exp.raw.DIM_ESTIMATIVA_DA_POPULACAO_POR_ANO_MUNICIPIO_IDADE", "fqn": ["exp", "fct_projecao_populacional", "raw", "DIM_ESTIMATIVA_DA_POPULACAO_POR_ANO_MUNICIPIO_IDADE"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_ESTIMATIVA_DA_POPULACAO_POR_ANO_MUNICIPIO_IDADE", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_ESTIMATIVA_DA_POPULACAO_POR_ANO_MUNICIPIO_IDADE\"", "created_at": 1723502084.9086008}, "source.exp.raw.DIM_ESTADOS": {"database": "postgres", "schema": "raw", "name": "DIM_ESTADOS", "resource_type": "source", "package_name": "exp", "path": "models\\info_estados\\schema.yml", "original_file_path": "models\\info_estados\\schema.yml", "unique_id": "source.exp.raw.DIM_ESTADOS", "fqn": ["exp", "info_estados", "raw", "DIM_ESTADOS"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_ESTADOS", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_ESTADOS\"", "created_at": 1723502084.9086008}, "source.exp.raw.DIM_ESTADOS_AREA": {"database": "postgres", "schema": "raw", "name": "DIM_ESTADOS_AREA", "resource_type": "source", "package_name": "exp", "path": "models\\info_estados\\schema.yml", "original_file_path": "models\\info_estados\\schema.yml", "unique_id": "source.exp.raw.DIM_ESTADOS_AREA", "fqn": ["exp", "info_estados", "raw", "DIM_ESTADOS_AREA"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_ESTADOS_AREA", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_ESTADOS_AREA\"", "created_at": 1723502084.9096012}, "source.exp.raw.DIM_ESTADOS_CAPITAIS": {"database": "postgres", "schema": "raw", "name": "DIM_ESTADOS_CAPITAIS", "resource_type": "source", "package_name": "exp", "path": "models\\info_estados\\schema.yml", "original_file_path": "models\\info_estados\\schema.yml", "unique_id": "source.exp.raw.DIM_ESTADOS_CAPITAIS", "fqn": ["exp", "info_estados", "raw", "DIM_ESTADOS_CAPITAIS"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_ESTADOS_CAPITAIS", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_ESTADOS_CAPITAIS\"", "created_at": 1723502084.9096012}, "source.exp.raw.DIM_ESTADOS_CENSO_ATLAS_2013": {"database": "postgres", "schema": "raw", "name": "DIM_ESTADOS_CENSO_ATLAS_2013", "resource_type": "source", "package_name": "exp", "path": "models\\info_estados\\schema.yml", "original_file_path": "models\\info_estados\\schema.yml", "unique_id": "source.exp.raw.DIM_ESTADOS_CENSO_ATLAS_2013", "fqn": ["exp", "info_estados", "raw", "DIM_ESTADOS_CENSO_ATLAS_2013"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_ESTADOS_CENSO_ATLAS_2013", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_ESTADOS_CENSO_ATLAS_2013\"", "created_at": 1723502084.9096012}, "source.exp.raw.DIM_MUNICIPIOS_MALHA_2022": {"database": "postgres", "schema": "raw", "name": "DIM_MUNICIPIOS_MALHA_2022", "resource_type": "source", "package_name": "exp", "path": "models\\info_municipios\\schema.yml", "original_file_path": "models\\info_municipios\\schema.yml", "unique_id": "source.exp.raw.DIM_MUNICIPIOS_MALHA_2022", "fqn": ["exp", "info_municipios", "raw", "DIM_MUNICIPIOS_MALHA_2022"], "source_name": "raw", "source_description": "", "loader": "", "identifier": "DIM_MUNICIPIOS_MALHA_2022", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"postgres\".\"raw\".\"DIM_MUNICIPIOS_MALHA_2022\"", "created_at": 1723502084.9096012}}, "macros": {"macro.dbt_fal.duckdb__copy_to": {"name": "duckdb__copy_to", "resource_type": "macro", "package_name": "dbt_fal", "path": "macros\\teleport_duckdb.sql", "original_file_path": "macros\\teleport_duckdb.sql", "unique_id": "macro.dbt_fal.duckdb__copy_to", "macro_sql": "{% macro duckdb__copy_to(relation, url) -%}\n    COPY {{ relation }} TO '{{ url }}'\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6037533, "supported_languages": null}, "macro.dbt_fal.duckdb__copy_from_parquet": {"name": "duckdb__copy_from_parquet", "resource_type": "macro", "package_name": "dbt_fal", "path": "macros\\teleport_duckdb.sql", "original_file_path": "macros\\teleport_duckdb.sql", "unique_id": "macro.dbt_fal.duckdb__copy_from_parquet", "macro_sql": "{% macro duckdb__copy_from_parquet(relation, url) -%}\n    CREATE OR REPLACE TABLE {{ relation }} AS\n        SELECT * FROM read_parquet('{{ url }}');\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6047556, "supported_languages": null}, "macro.dbt_fal.snowflake__create_table_from_parquet": {"name": "snowflake__create_table_from_parquet", "resource_type": "macro", "package_name": "dbt_fal", "path": "macros\\teleport_snowflake.sql", "original_file_path": "macros\\teleport_snowflake.sql", "unique_id": "macro.dbt_fal.snowflake__create_table_from_parquet", "macro_sql": "{% macro snowflake__create_table_from_parquet(relation, location) -%}\n    CREATE OR REPLACE TABLE {{ relation }} USING template (\n      SELECT array_agg(object_construct(*))\n\t  \tFROM table(\n  \t\t\tinfer_schema(\n\t  \t\t\tLOCATION=>'{{ location }}',\n\t\t  \t\tFILE_FORMAT=>'falparquet',\n\t\t  \t\tIGNORE_CASE=>TRUE\n\t\t\t  )\n  \t\t)\n    );\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6047556, "supported_languages": null}, "macro.dbt_fal.snowflake__copy_from_parquet": {"name": "snowflake__copy_from_parquet", "resource_type": "macro", "package_name": "dbt_fal", "path": "macros\\teleport_snowflake.sql", "original_file_path": "macros\\teleport_snowflake.sql", "unique_id": "macro.dbt_fal.snowflake__copy_from_parquet", "macro_sql": "{% macro snowflake__copy_from_parquet(relation, location) -%}\n    COPY INTO {{ relation }} FROM (\n      SELECT\n        {% for col in adapter.get_columns_in_relation(relation) %}\n          $1:{{col.column}}\n          {%- if not loop.last -%},{%- endif -%}\n        {% endfor %}\n      FROM {{ location }})\n    FILE_FORMAT = (FORMAT_NAME = 'falparquet');\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.605754, "supported_languages": null}, "macro.dbt_fal.snowflake__copy_to_parquet": {"name": "snowflake__copy_to_parquet", "resource_type": "macro", "package_name": "dbt_fal", "path": "macros\\teleport_snowflake.sql", "original_file_path": "macros\\teleport_snowflake.sql", "unique_id": "macro.dbt_fal.snowflake__copy_to_parquet", "macro_sql": "{% macro snowflake__copy_to_parquet(relation, location) -%}\n    COPY INTO {{ location }} FROM {{ relation }}\n    FILE_FORMAT = (TYPE=parquet)\n    OVERWRITE = TRUE\n    SINGLE = TRUE\n    HEADER = TRUE;\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.605754, "supported_languages": null}, "macro.dbt_fal.materialization_table_fal": {"name": "materialization_table_fal", "resource_type": "macro", "package_name": "dbt_fal", "path": "macros\\materializations\\table.sql", "original_file_path": "macros\\materializations\\table.sql", "unique_id": "macro.dbt_fal.materialization_table_fal", "macro_sql": "{% materialization table, adapter='fal', supported_languages=['python', 'sql'] -%}\n\n{%- set language = model['language'] -%}\n\n{%- if language == 'python' -%}\n\n  {%- if adapter.is_teleport() -%}\n    {%- for _ref in model.refs -%}\n      {% set _ref_args = [_ref.get('package'), _ref['name']] if _ref.get('package') else [_ref['name'],] %}\n      {%- set resolved = ref(*_ref_args, v=_ref.get('version')) -%}\n      {%- do adapter.sync_teleport_relation(resolved) -%}\n    {%- endfor -%}\n  {%- endif -%}\n\n  {%- set relation = this.incorporate(type='table') -%}\n\n  {%- call statement('main', language=language) -%}\n\n    {{- py_write(compiled_code, relation) }}\n\n  {%- endcall %}\n\n{{- return({'relations': [relation]}) }}\n\n{%- elif language == 'sql' -%}\n\n  {# HACK: proxy to the db adapter table materialization #}\n  {{- return(adapter.db_materialization(context, \"table\")) }}\n\n{%- endif -%}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_fal.py_write"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6087534, "supported_languages": ["python", "sql"]}, "macro.dbt_fal.py_write": {"name": "py_write", "resource_type": "macro", "package_name": "dbt_fal", "path": "macros\\materializations\\table.sql", "original_file_path": "macros\\materializations\\table.sql", "unique_id": "macro.dbt_fal.py_write", "macro_sql": "{% macro py_write(code, relation) -%}\n{{- compiled_code -}}\n\n# Generated by dbt-fal\n\ndef main(read_df, write_df, fal_context=None):\n  dbt_context = dbtObj(read_df)\n  df = model(dbt_context, fal_context)\n  return write_df(\n      '{{ relation.quote(False, False, False) }}',\n      df\n  )\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6087534, "supported_languages": null}, "macro.dbt_postgres.postgres__create_table_as": {"name": "postgres__create_table_as", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres__create_table_as", "macro_sql": "{% macro postgres__create_table_as(temporary, relation, sql) -%}\n  {%- set unlogged = config.get('unlogged', default=false) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary -%}\n    temporary\n  {%- elif unlogged -%}\n    unlogged\n  {%- endif %} table {{ relation }}\n  {% set contract_config = config.get('contract') %}\n  {% if contract_config.enforced %}\n    {{ get_assert_columns_equivalent(sql) }}\n    {{ get_table_columns_and_constraints() }} ;\n    insert into {{ relation }} (\n      {{ adapter.dispatch('get_column_names', 'dbt')() }}\n    )\n    {%- set sql = get_select_subquery(sql) %}\n  {% else %}\n    as\n  {% endif %}\n  (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.default__get_column_names", "macro.dbt.get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6167245, "supported_languages": null}, "macro.dbt_postgres.postgres__get_create_index_sql": {"name": "postgres__get_create_index_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres__get_create_index_sql", "macro_sql": "{% macro postgres__get_create_index_sql(relation, index_dict) -%}\n  {%- set index_config = adapter.parse_index(index_dict) -%}\n  {%- set comma_separated_columns = \", \".join(index_config.columns) -%}\n  {%- set index_name = index_config.render(relation) -%}\n\n  create {% if index_config.unique -%}\n    unique\n  {%- endif %} index if not exists\n  \"{{ index_name }}\"\n  on {{ relation }} {% if index_config.type -%}\n    using {{ index_config.type }}\n  {%- endif %}\n  ({{ comma_separated_columns }});\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6177542, "supported_languages": null}, "macro.dbt_postgres.postgres__create_schema": {"name": "postgres__create_schema", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres__create_schema", "macro_sql": "{% macro postgres__create_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier().include(database=False) }}\n  {%- endcall -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6187243, "supported_languages": null}, "macro.dbt_postgres.postgres__drop_schema": {"name": "postgres__drop_schema", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres__drop_schema", "macro_sql": "{% macro postgres__drop_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier().include(database=False) }} cascade\n  {%- endcall -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6187243, "supported_languages": null}, "macro.dbt_postgres.postgres__get_columns_in_relation": {"name": "postgres__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres__get_columns_in_relation", "macro_sql": "{% macro postgres__get_columns_in_relation(relation) -%}\n  {% call statement('get_columns_in_relation', fetch_result=True) %}\n      select\n          column_name,\n          data_type,\n          character_maximum_length,\n          numeric_precision,\n          numeric_scale\n\n      from {{ relation.information_schema('columns') }}\n      where table_name = '{{ relation.identifier }}'\n        {% if relation.schema %}\n        and table_schema = '{{ relation.schema }}'\n        {% endif %}\n      order by ordinal_position\n\n  {% endcall %}\n  {% set table = load_result('get_columns_in_relation').table %}\n  {{ return(sql_convert_columns_in_relation(table)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.sql_convert_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6197574, "supported_languages": null}, "macro.dbt_postgres.postgres__list_relations_without_caching": {"name": "postgres__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres__list_relations_without_caching", "macro_sql": "{% macro postgres__list_relations_without_caching(schema_relation) %}\n  {% call statement('list_relations_without_caching', fetch_result=True) -%}\n    select\n      '{{ schema_relation.database }}' as database,\n      tablename as name,\n      schemaname as schema,\n      'table' as type\n    from pg_tables\n    where schemaname ilike '{{ schema_relation.schema }}'\n    union all\n    select\n      '{{ schema_relation.database }}' as database,\n      viewname as name,\n      schemaname as schema,\n      'view' as type\n    from pg_views\n    where schemaname ilike '{{ schema_relation.schema }}'\n  {% endcall %}\n  {{ return(load_result('list_relations_without_caching').table) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6197574, "supported_languages": null}, "macro.dbt_postgres.postgres__information_schema_name": {"name": "postgres__information_schema_name", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres__information_schema_name", "macro_sql": "{% macro postgres__information_schema_name(database) -%}\n  {% if database_name -%}\n    {{ adapter.verify_database(database_name) }}\n  {%- endif -%}\n  information_schema\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6207588, "supported_languages": null}, "macro.dbt_postgres.postgres__list_schemas": {"name": "postgres__list_schemas", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres__list_schemas", "macro_sql": "{% macro postgres__list_schemas(database) %}\n  {% if database -%}\n    {{ adapter.verify_database(database) }}\n  {%- endif -%}\n  {% call statement('list_schemas', fetch_result=True, auto_begin=False) %}\n    select distinct nspname from pg_namespace\n  {% endcall %}\n  {{ return(load_result('list_schemas').table) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6207588, "supported_languages": null}, "macro.dbt_postgres.postgres__check_schema_exists": {"name": "postgres__check_schema_exists", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres__check_schema_exists", "macro_sql": "{% macro postgres__check_schema_exists(information_schema, schema) -%}\n  {% if information_schema.database -%}\n    {{ adapter.verify_database(information_schema.database) }}\n  {%- endif -%}\n  {% call statement('check_schema_exists', fetch_result=True, auto_begin=False) %}\n    select count(*) from pg_namespace where nspname = '{{ schema }}'\n  {% endcall %}\n  {{ return(load_result('check_schema_exists').table) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6217577, "supported_languages": null}, "macro.dbt_postgres.postgres__make_relation_with_suffix": {"name": "postgres__make_relation_with_suffix", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres__make_relation_with_suffix", "macro_sql": "{% macro postgres__make_relation_with_suffix(base_relation, suffix, dstring) %}\n    {% if dstring %}\n      {% set dt = modules.datetime.datetime.now() %}\n      {% set dtstring = dt.strftime(\"%H%M%S%f\") %}\n      {% set suffix = suffix ~ dtstring %}\n    {% endif %}\n    {% set suffix_length = suffix|length %}\n    {% set relation_max_name_length = base_relation.relation_max_name_length() %}\n    {% if suffix_length > relation_max_name_length %}\n        {% do exceptions.raise_compiler_error('Relation suffix is too long (' ~ suffix_length ~ ' characters). Maximum length is ' ~ relation_max_name_length ~ ' characters.') %}\n    {% endif %}\n    {% set identifier = base_relation.identifier[:relation_max_name_length - suffix_length] ~ suffix %}\n\n    {{ return(base_relation.incorporate(path={\"identifier\": identifier })) }}\n\n  {% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6227574, "supported_languages": null}, "macro.dbt_postgres.postgres__make_intermediate_relation": {"name": "postgres__make_intermediate_relation", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres__make_intermediate_relation", "macro_sql": "{% macro postgres__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(postgres__make_relation_with_suffix(base_relation, suffix, dstring=False)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.623758, "supported_languages": null}, "macro.dbt_postgres.postgres__make_temp_relation": {"name": "postgres__make_temp_relation", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres__make_temp_relation", "macro_sql": "{% macro postgres__make_temp_relation(base_relation, suffix) %}\n    {% set temp_relation = postgres__make_relation_with_suffix(base_relation, suffix, dstring=True) %}\n    {{ return(temp_relation.incorporate(path={\"schema\": none,\n                                              \"database\": none})) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.623758, "supported_languages": null}, "macro.dbt_postgres.postgres__make_backup_relation": {"name": "postgres__make_backup_relation", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres__make_backup_relation", "macro_sql": "{% macro postgres__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {% set backup_relation = postgres__make_relation_with_suffix(base_relation, suffix, dstring=False) %}\n    {{ return(backup_relation.incorporate(type=backup_relation_type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6247659, "supported_languages": null}, "macro.dbt_postgres.postgres_escape_comment": {"name": "postgres_escape_comment", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres_escape_comment", "macro_sql": "{% macro postgres_escape_comment(comment) -%}\n  {% if comment is not string %}\n    {% do exceptions.raise_compiler_error('cannot escape a non-string: ' ~ comment) %}\n  {% endif %}\n  {%- set magic = '$dbt_comment_literal_block$' -%}\n  {%- if magic in comment -%}\n    {%- do exceptions.raise_compiler_error('The string ' ~ magic ~ ' is not allowed in comments.') -%}\n  {%- endif -%}\n  {{ magic }}{{ comment }}{{ magic }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6247659, "supported_languages": null}, "macro.dbt_postgres.postgres__alter_relation_comment": {"name": "postgres__alter_relation_comment", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres__alter_relation_comment", "macro_sql": "{% macro postgres__alter_relation_comment(relation, comment) %}\n  {% set escaped_comment = postgres_escape_comment(comment) %}\n  comment on {{ relation.type }} {{ relation }} is {{ escaped_comment }};\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6257558, "supported_languages": null}, "macro.dbt_postgres.postgres__alter_column_comment": {"name": "postgres__alter_column_comment", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres__alter_column_comment", "macro_sql": "{% macro postgres__alter_column_comment(relation, column_dict) %}\n  {% set existing_columns = adapter.get_columns_in_relation(relation) | map(attribute=\"name\") | list %}\n  {% for column_name in column_dict if (column_name in existing_columns) %}\n    {% set comment = column_dict[column_name]['description'] %}\n    {% set escaped_comment = postgres_escape_comment(comment) %}\n    comment on column {{ relation }}.{{ adapter.quote(column_name) if column_dict[column_name]['quote'] else column_name }} is {{ escaped_comment }};\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6267562, "supported_languages": null}, "macro.dbt_postgres.postgres__get_show_grant_sql": {"name": "postgres__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres__get_show_grant_sql", "macro_sql": "\n\n{%- macro postgres__get_show_grant_sql(relation) -%}\n  select grantee, privilege_type\n  from {{ relation.information_schema('role_table_grants') }}\n      where grantor = current_role\n        and grantee != current_role\n        and table_schema = '{{ relation.schema }}'\n        and table_name = '{{ relation.identifier }}'\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6267562, "supported_languages": null}, "macro.dbt_postgres.postgres__copy_grants": {"name": "postgres__copy_grants", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_postgres.postgres__copy_grants", "macro_sql": "{% macro postgres__copy_grants() %}\n    {{ return(False) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6267562, "supported_languages": null}, "macro.dbt_postgres.postgres__get_catalog": {"name": "postgres__get_catalog", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\catalog.sql", "original_file_path": "macros\\catalog.sql", "unique_id": "macro.dbt_postgres.postgres__get_catalog", "macro_sql": "{% macro postgres__get_catalog(information_schema, schemas) -%}\n\n  {%- call statement('catalog', fetch_result=True) -%}\n    {#\n      If the user has multiple databases set and the first one is wrong, this will fail.\n      But we won't fail in the case where there are multiple quoting-difference-only dbs, which is better.\n    #}\n    {% set database = information_schema.database %}\n    {{ adapter.verify_database(database) }}\n\n    select\n        '{{ database }}' as table_database,\n        sch.nspname as table_schema,\n        tbl.relname as table_name,\n        case tbl.relkind\n            when 'v' then 'VIEW'\n            else 'BASE TABLE'\n        end as table_type,\n        tbl_desc.description as table_comment,\n        col.attname as column_name,\n        col.attnum as column_index,\n        pg_catalog.format_type(col.atttypid, col.atttypmod) as column_type,\n        col_desc.description as column_comment,\n        pg_get_userbyid(tbl.relowner) as table_owner\n\n    from pg_catalog.pg_namespace sch\n    join pg_catalog.pg_class tbl on tbl.relnamespace = sch.oid\n    join pg_catalog.pg_attribute col on col.attrelid = tbl.oid\n    left outer join pg_catalog.pg_description tbl_desc on (tbl_desc.objoid = tbl.oid and tbl_desc.objsubid = 0)\n    left outer join pg_catalog.pg_description col_desc on (col_desc.objoid = tbl.oid and col_desc.objsubid = col.attnum)\n\n    where (\n        {%- for schema in schemas -%}\n          upper(sch.nspname) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n      )\n      and not pg_is_other_temp_schema(sch.oid) -- not a temporary schema belonging to another session\n      and tbl.relpersistence in ('p', 'u') -- [p]ermanent table or [u]nlogged table. Exclude [t]emporary tables\n      and tbl.relkind in ('r', 'v', 'f', 'p') -- o[r]dinary table, [v]iew, [f]oreign table, [p]artitioned table. Other values are [i]ndex, [S]equence, [c]omposite type, [t]OAST table, [m]aterialized view\n      and col.attnum > 0 -- negative numbers are used for system columns such as oid\n      and not col.attisdropped -- column as not been dropped\n\n    order by\n        sch.nspname,\n        tbl.relname,\n        col.attnum\n\n  {%- endcall -%}\n\n  {{ return(load_result('catalog').table) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6287239, "supported_languages": null}, "macro.dbt_postgres.postgres_get_relations": {"name": "postgres_get_relations", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\relations.sql", "original_file_path": "macros\\relations.sql", "unique_id": "macro.dbt_postgres.postgres_get_relations", "macro_sql": "{% macro postgres_get_relations () -%}\n\n  {#\n      -- in pg_depend, objid is the dependent, refobjid is the referenced object\n      --  > a pg_depend entry indicates that the referenced object cannot be\n      --  > dropped without also dropping the dependent object.\n  #}\n\n  {%- call statement('relations', fetch_result=True) -%}\n    with relation as (\n        select\n            pg_rewrite.ev_class as class,\n            pg_rewrite.oid as id\n        from pg_rewrite\n    ),\n    class as (\n        select\n            oid as id,\n            relname as name,\n            relnamespace as schema,\n            relkind as kind\n        from pg_class\n    ),\n    dependency as (\n        select distinct\n            pg_depend.objid as id,\n            pg_depend.refobjid as ref\n        from pg_depend\n    ),\n    schema as (\n        select\n            pg_namespace.oid as id,\n            pg_namespace.nspname as name\n        from pg_namespace\n        where nspname != 'information_schema' and nspname not like 'pg\\_%'\n    ),\n    referenced as (\n        select\n            relation.id AS id,\n            referenced_class.name ,\n            referenced_class.schema ,\n            referenced_class.kind\n        from relation\n        join class as referenced_class on relation.class=referenced_class.id\n        where referenced_class.kind in ('r', 'v')\n    ),\n    relationships as (\n        select\n            referenced.name as referenced_name,\n            referenced.schema as referenced_schema_id,\n            dependent_class.name as dependent_name,\n            dependent_class.schema as dependent_schema_id,\n            referenced.kind as kind\n        from referenced\n        join dependency on referenced.id=dependency.id\n        join class as dependent_class on dependency.ref=dependent_class.id\n        where\n            (referenced.name != dependent_class.name or\n             referenced.schema != dependent_class.schema)\n    )\n\n    select\n        referenced_schema.name as referenced_schema,\n        relationships.referenced_name as referenced_name,\n        dependent_schema.name as dependent_schema,\n        relationships.dependent_name as dependent_name\n    from relationships\n    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id\n    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id\n    group by referenced_schema, referenced_name, dependent_schema, dependent_name\n    order by referenced_schema, referenced_name, dependent_schema, dependent_name;\n\n  {%- endcall -%}\n\n  {{ return(load_result('relations').table) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6297235, "supported_languages": null}, "macro.dbt_postgres.postgres__current_timestamp": {"name": "postgres__current_timestamp", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\timestamps.sql", "original_file_path": "macros\\timestamps.sql", "unique_id": "macro.dbt_postgres.postgres__current_timestamp", "macro_sql": "{% macro postgres__current_timestamp() -%}\n    now()\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6297235, "supported_languages": null}, "macro.dbt_postgres.postgres__snapshot_string_as_time": {"name": "postgres__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\timestamps.sql", "original_file_path": "macros\\timestamps.sql", "unique_id": "macro.dbt_postgres.postgres__snapshot_string_as_time", "macro_sql": "{% macro postgres__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"'\" ~ timestamp ~ \"'::timestamp without time zone\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6307235, "supported_languages": null}, "macro.dbt_postgres.postgres__snapshot_get_time": {"name": "postgres__snapshot_get_time", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\timestamps.sql", "original_file_path": "macros\\timestamps.sql", "unique_id": "macro.dbt_postgres.postgres__snapshot_get_time", "macro_sql": "{% macro postgres__snapshot_get_time() -%}\n  {{ current_timestamp() }}::timestamp without time zone\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6307235, "supported_languages": null}, "macro.dbt_postgres.postgres__current_timestamp_backcompat": {"name": "postgres__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\timestamps.sql", "original_file_path": "macros\\timestamps.sql", "unique_id": "macro.dbt_postgres.postgres__current_timestamp_backcompat", "macro_sql": "{% macro postgres__current_timestamp_backcompat() %}\n    current_timestamp::{{ type_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6307235, "supported_languages": null}, "macro.dbt_postgres.postgres__current_timestamp_in_utc_backcompat": {"name": "postgres__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\timestamps.sql", "original_file_path": "macros\\timestamps.sql", "unique_id": "macro.dbt_postgres.postgres__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro postgres__current_timestamp_in_utc_backcompat() %}\n    (current_timestamp at time zone 'utc')::{{ type_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6307235, "supported_languages": null}, "macro.dbt_postgres.postgres__get_incremental_default_sql": {"name": "postgres__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\materializations\\incremental_strategies.sql", "original_file_path": "macros\\materializations\\incremental_strategies.sql", "unique_id": "macro.dbt_postgres.postgres__get_incremental_default_sql", "macro_sql": "{% macro postgres__get_incremental_default_sql(arg_dict) %}\n\n  {% if arg_dict[\"unique_key\"] %}\n    {% do return(get_incremental_delete_insert_sql(arg_dict)) %}\n  {% else %}\n    {% do return(get_incremental_append_sql(arg_dict)) %}\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_delete_insert_sql", "macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6317239, "supported_languages": null}, "macro.dbt_postgres.postgres__snapshot_merge_sql": {"name": "postgres__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\materializations\\snapshot_merge.sql", "original_file_path": "macros\\materializations\\snapshot_merge.sql", "unique_id": "macro.dbt_postgres.postgres__snapshot_merge_sql", "macro_sql": "{% macro postgres__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    update {{ target }}\n    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = {{ target }}.dbt_scd_id::text\n      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)\n      and {{ target }}.dbt_valid_to is null;\n\n    insert into {{ target }} ({{ insert_cols_csv }})\n    select {% for column in insert_cols -%}\n        DBT_INTERNAL_SOURCE.{{ column }} {%- if not loop.last %}, {%- endif %}\n    {%- endfor %}\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6327245, "supported_languages": null}, "macro.dbt_postgres.postgres__any_value": {"name": "postgres__any_value", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\utils\\any_value.sql", "original_file_path": "macros\\utils\\any_value.sql", "unique_id": "macro.dbt_postgres.postgres__any_value", "macro_sql": "{% macro postgres__any_value(expression) -%}\n\n    min({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6327245, "supported_languages": null}, "macro.dbt_postgres.postgres__dateadd": {"name": "postgres__dateadd", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\utils\\dateadd.sql", "original_file_path": "macros\\utils\\dateadd.sql", "unique_id": "macro.dbt_postgres.postgres__dateadd", "macro_sql": "{% macro postgres__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ from_date_or_timestamp }} + ((interval '1 {{ datepart }}') * ({{ interval }}))\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6337237, "supported_languages": null}, "macro.dbt_postgres.postgres__datediff": {"name": "postgres__datediff", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\utils\\datediff.sql", "original_file_path": "macros\\utils\\datediff.sql", "unique_id": "macro.dbt_postgres.postgres__datediff", "macro_sql": "{% macro postgres__datediff(first_date, second_date, datepart) -%}\n\n    {% if datepart == 'year' %}\n        (date_part('year', ({{second_date}})::date) - date_part('year', ({{first_date}})::date))\n    {% elif datepart == 'quarter' %}\n        ({{ datediff(first_date, second_date, 'year') }} * 4 + date_part('quarter', ({{second_date}})::date) - date_part('quarter', ({{first_date}})::date))\n    {% elif datepart == 'month' %}\n        ({{ datediff(first_date, second_date, 'year') }} * 12 + date_part('month', ({{second_date}})::date) - date_part('month', ({{first_date}})::date))\n    {% elif datepart == 'day' %}\n        (({{second_date}})::date - ({{first_date}})::date)\n    {% elif datepart == 'week' %}\n        ({{ datediff(first_date, second_date, 'day') }} / 7 + case\n            when date_part('dow', ({{first_date}})::timestamp) <= date_part('dow', ({{second_date}})::timestamp) then\n                case when {{first_date}} <= {{second_date}} then 0 else -1 end\n            else\n                case when {{first_date}} <= {{second_date}} then 1 else 0 end\n        end)\n    {% elif datepart == 'hour' %}\n        ({{ datediff(first_date, second_date, 'day') }} * 24 + date_part('hour', ({{second_date}})::timestamp) - date_part('hour', ({{first_date}})::timestamp))\n    {% elif datepart == 'minute' %}\n        ({{ datediff(first_date, second_date, 'hour') }} * 60 + date_part('minute', ({{second_date}})::timestamp) - date_part('minute', ({{first_date}})::timestamp))\n    {% elif datepart == 'second' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60 + floor(date_part('second', ({{second_date}})::timestamp)) - floor(date_part('second', ({{first_date}})::timestamp)))\n    {% elif datepart == 'millisecond' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60000 + floor(date_part('millisecond', ({{second_date}})::timestamp)) - floor(date_part('millisecond', ({{first_date}})::timestamp)))\n    {% elif datepart == 'microsecond' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60000000 + floor(date_part('microsecond', ({{second_date}})::timestamp)) - floor(date_part('microsecond', ({{first_date}})::timestamp)))\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Unsupported datepart for macro datediff in postgres: {!r}\".format(datepart)) }}\n    {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6377237, "supported_languages": null}, "macro.dbt_postgres.postgres__last_day": {"name": "postgres__last_day", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\utils\\last_day.sql", "original_file_path": "macros\\utils\\last_day.sql", "unique_id": "macro.dbt_postgres.postgres__last_day", "macro_sql": "{% macro postgres__last_day(date, datepart) -%}\n\n    {%- if datepart == 'quarter' -%}\n    -- postgres dateadd does not support quarter interval.\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd('month', '3', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n    {%- else -%}\n    {{dbt.default_last_day(date, datepart)}}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc", "macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6387234, "supported_languages": null}, "macro.dbt_postgres.postgres__listagg": {"name": "postgres__listagg", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\utils\\listagg.sql", "original_file_path": "macros\\utils\\listagg.sql", "unique_id": "macro.dbt_postgres.postgres__listagg", "macro_sql": "{% macro postgres__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        (array_agg(\n            {{ measure }}\n            {% if order_by_clause -%}\n            {{ order_by_clause }}\n            {%- endif %}\n        ))[1:{{ limit_num }}],\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    string_agg(\n        {{ measure }},\n        {{ delimiter_text }}\n        {% if order_by_clause -%}\n        {{ order_by_clause }}\n        {%- endif %}\n        )\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.639724, "supported_languages": null}, "macro.dbt_postgres.postgres__split_part": {"name": "postgres__split_part", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros\\utils\\split_part.sql", "original_file_path": "macros\\utils\\split_part.sql", "unique_id": "macro.dbt_postgres.postgres__split_part", "macro_sql": "{% macro postgres__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    {{ dbt.default__split_part(string_text, delimiter_text, part_number) }}\n  {% else %}\n    {{ dbt._split_part_negative(string_text, delimiter_text, part_number) }}\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__split_part", "macro.dbt._split_part_negative"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.639724, "supported_languages": null}, "macro.dbt.copy_grants": {"name": "copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.copy_grants", "macro_sql": "{% macro copy_grants() %}\n    {{ return(adapter.dispatch('copy_grants', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6417234, "supported_languages": null}, "macro.dbt.default__copy_grants": {"name": "default__copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.default__copy_grants", "macro_sql": "{% macro default__copy_grants() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6417234, "supported_languages": null}, "macro.dbt.support_multiple_grantees_per_dcl_statement": {"name": "support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.support_multiple_grantees_per_dcl_statement", "macro_sql": "{% macro support_multiple_grantees_per_dcl_statement() %}\n    {{ return(adapter.dispatch('support_multiple_grantees_per_dcl_statement', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6427243, "supported_languages": null}, "macro.dbt.default__support_multiple_grantees_per_dcl_statement": {"name": "default__support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.default__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro default__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(True) }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6427243, "supported_languages": null}, "macro.dbt.should_revoke": {"name": "should_revoke", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.should_revoke", "macro_sql": "{% macro should_revoke(existing_relation, full_refresh_mode=True) %}\n\n    {% if not existing_relation %}\n        {#-- The table doesn't already exist, so no grants to copy over --#}\n        {{ return(False) }}\n    {% elif full_refresh_mode %}\n        {#-- The object is being REPLACED -- whether grants are copied over depends on the value of user config --#}\n        {{ return(copy_grants()) }}\n    {% else %}\n        {#-- The table is being merged/upserted/inserted -- grants will be carried over --#}\n        {{ return(True) }}\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6427243, "supported_languages": null}, "macro.dbt.get_show_grant_sql": {"name": "get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.get_show_grant_sql", "macro_sql": "{% macro get_show_grant_sql(relation) %}\n    {{ return(adapter.dispatch(\"get_show_grant_sql\", \"dbt\")(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_show_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6437237, "supported_languages": null}, "macro.dbt.default__get_show_grant_sql": {"name": "default__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.default__get_show_grant_sql", "macro_sql": "{% macro default__get_show_grant_sql(relation) %}\n    show grants on {{ relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6437237, "supported_languages": null}, "macro.dbt.get_grant_sql": {"name": "get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.get_grant_sql", "macro_sql": "{% macro get_grant_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_grant_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6437237, "supported_languages": null}, "macro.dbt.default__get_grant_sql": {"name": "default__get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.default__get_grant_sql", "macro_sql": "\n\n{%- macro default__get_grant_sql(relation, privilege, grantees) -%}\n    grant {{ privilege }} on {{ relation }} to {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6447232, "supported_languages": null}, "macro.dbt.get_revoke_sql": {"name": "get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.get_revoke_sql", "macro_sql": "{% macro get_revoke_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_revoke_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_revoke_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6447232, "supported_languages": null}, "macro.dbt.default__get_revoke_sql": {"name": "default__get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.default__get_revoke_sql", "macro_sql": "\n\n{%- macro default__get_revoke_sql(relation, privilege, grantees) -%}\n    revoke {{ privilege }} on {{ relation }} from {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6447232, "supported_languages": null}, "macro.dbt.get_dcl_statement_list": {"name": "get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.get_dcl_statement_list", "macro_sql": "{% macro get_dcl_statement_list(relation, grant_config, get_dcl_macro) %}\n    {{ return(adapter.dispatch('get_dcl_statement_list', 'dbt')(relation, grant_config, get_dcl_macro)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_dcl_statement_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6457236, "supported_languages": null}, "macro.dbt.default__get_dcl_statement_list": {"name": "default__get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.default__get_dcl_statement_list", "macro_sql": "\n\n{%- macro default__get_dcl_statement_list(relation, grant_config, get_dcl_macro) -%}\n    {#\n      -- Unpack grant_config into specific privileges and the set of users who need them granted/revoked.\n      -- Depending on whether this database supports multiple grantees per statement, pass in the list of\n      -- all grantees per privilege, or (if not) template one statement per privilege-grantee pair.\n      -- `get_dcl_macro` will be either `get_grant_sql` or `get_revoke_sql`\n    #}\n    {%- set dcl_statements = [] -%}\n    {%- for privilege, grantees in grant_config.items() %}\n        {%- if support_multiple_grantees_per_dcl_statement() and grantees -%}\n          {%- set dcl = get_dcl_macro(relation, privilege, grantees) -%}\n          {%- do dcl_statements.append(dcl) -%}\n        {%- else -%}\n          {%- for grantee in grantees -%}\n              {% set dcl = get_dcl_macro(relation, privilege, [grantee]) %}\n              {%- do dcl_statements.append(dcl) -%}\n          {% endfor -%}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return(dcl_statements) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6467235, "supported_languages": null}, "macro.dbt.call_dcl_statements": {"name": "call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.call_dcl_statements", "macro_sql": "{% macro call_dcl_statements(dcl_statement_list) %}\n    {{ return(adapter.dispatch(\"call_dcl_statements\", \"dbt\")(dcl_statement_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6467235, "supported_languages": null}, "macro.dbt.default__call_dcl_statements": {"name": "default__call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.default__call_dcl_statements", "macro_sql": "{% macro default__call_dcl_statements(dcl_statement_list) %}\n    {#\n      -- By default, supply all grant + revoke statements in a single semicolon-separated block,\n      -- so that they're all processed together.\n\n      -- Some databases do not support this. Those adapters will need to override this macro\n      -- to run each statement individually.\n    #}\n    {% call statement('grants') %}\n        {% for dcl_statement in dcl_statement_list %}\n            {{ dcl_statement }};\n        {% endfor %}\n    {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6477237, "supported_languages": null}, "macro.dbt.apply_grants": {"name": "apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.apply_grants", "macro_sql": "{% macro apply_grants(relation, grant_config, should_revoke) %}\n    {{ return(adapter.dispatch(\"apply_grants\", \"dbt\")(relation, grant_config, should_revoke)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6477237, "supported_languages": null}, "macro.dbt.default__apply_grants": {"name": "default__apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.default__apply_grants", "macro_sql": "{% macro default__apply_grants(relation, grant_config, should_revoke=True) %}\n    {#-- If grant_config is {} or None, this is a no-op --#}\n    {% if grant_config %}\n        {% if should_revoke %}\n            {#-- We think previous grants may have carried over --#}\n            {#-- Show current grants and calculate diffs --#}\n            {% set current_grants_table = run_query(get_show_grant_sql(relation)) %}\n            {% set current_grants_dict = adapter.standardize_grants_dict(current_grants_table) %}\n            {% set needs_granting = diff_of_two_dicts(grant_config, current_grants_dict) %}\n            {% set needs_revoking = diff_of_two_dicts(current_grants_dict, grant_config) %}\n            {% if not (needs_granting or needs_revoking) %}\n                {{ log('On ' ~ relation ~': All grants are in place, no revocation or granting needed.')}}\n            {% endif %}\n        {% else %}\n            {#-- We don't think there's any chance of previous grants having carried over. --#}\n            {#-- Jump straight to granting what the user has configured. --#}\n            {% set needs_revoking = {} %}\n            {% set needs_granting = grant_config %}\n        {% endif %}\n        {% if needs_granting or needs_revoking %}\n            {% set revoke_statement_list = get_dcl_statement_list(relation, needs_revoking, get_revoke_sql) %}\n            {% set grant_statement_list = get_dcl_statement_list(relation, needs_granting, get_grant_sql) %}\n            {% set dcl_statement_list = revoke_statement_list + grant_statement_list %}\n            {% if dcl_statement_list %}\n                {{ call_dcl_statements(dcl_statement_list) }}\n            {% endif %}\n        {% endif %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.get_show_grant_sql", "macro.dbt.get_dcl_statement_list", "macro.dbt.call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.649724, "supported_languages": null}, "macro.dbt.get_columns_in_relation": {"name": "get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6522317, "supported_languages": null}, "macro.dbt.default__get_columns_in_relation": {"name": "default__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6532316, "supported_languages": null}, "macro.dbt.sql_convert_columns_in_relation": {"name": "sql_convert_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6532316, "supported_languages": null}, "macro.dbt.get_empty_subquery_sql": {"name": "get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.get_empty_subquery_sql", "macro_sql": "{% macro get_empty_subquery_sql(select_sql, select_sql_header=none) -%}\n  {{ return(adapter.dispatch('get_empty_subquery_sql', 'dbt')(select_sql, select_sql_header)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6542318, "supported_languages": null}, "macro.dbt.default__get_empty_subquery_sql": {"name": "default__get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.default__get_empty_subquery_sql", "macro_sql": "{% macro default__get_empty_subquery_sql(select_sql, select_sql_header=none) %}\n    {%- if select_sql_header is not none -%}\n    {{ select_sql_header }}\n    {%- endif -%}\n    select * from (\n        {{ select_sql }}\n    ) as __dbt_sbq\n    where false\n    limit 0\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6542318, "supported_languages": null}, "macro.dbt.get_empty_schema_sql": {"name": "get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.get_empty_schema_sql", "macro_sql": "{% macro get_empty_schema_sql(columns) -%}\n  {{ return(adapter.dispatch('get_empty_schema_sql', 'dbt')(columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_schema_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6542318, "supported_languages": null}, "macro.dbt.default__get_empty_schema_sql": {"name": "default__get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.default__get_empty_schema_sql", "macro_sql": "{% macro default__get_empty_schema_sql(columns) %}\n    {%- set col_err = [] -%}\n    select\n    {% for i in columns %}\n      {%- set col = columns[i] -%}\n      {%- if col['data_type'] is not defined -%}\n        {{ col_err.append(col['name']) }}\n      {%- endif -%}\n      {% set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] %}\n      cast(null as {{ col['data_type'] }}) as {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n    {%- if (col_err | length) > 0 -%}\n      {{ exceptions.column_type_missing(column_names=col_err) }}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6562316, "supported_languages": null}, "macro.dbt.get_column_schema_from_query": {"name": "get_column_schema_from_query", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.get_column_schema_from_query", "macro_sql": "{% macro get_column_schema_from_query(select_sql, select_sql_header=none) -%}\n    {% set columns = [] %}\n    {# -- Using an 'empty subquery' here to get the same schema as the given select_sql statement, without necessitating a data scan.#}\n    {% set sql = get_empty_subquery_sql(select_sql, select_sql_header) %}\n    {% set column_schema = adapter.get_column_schema_from_query(sql) %}\n    {{ return(column_schema) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6562316, "supported_languages": null}, "macro.dbt.get_columns_in_query": {"name": "get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6562316, "supported_languages": null}, "macro.dbt.default__get_columns_in_query": {"name": "default__get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        {{ get_empty_subquery_sql(select_sql) }}\n    {% endcall %}\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.657232, "supported_languages": null}, "macro.dbt.alter_column_type": {"name": "alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.657232, "supported_languages": null}, "macro.dbt.default__alter_column_type": {"name": "default__alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6592317, "supported_languages": null}, "macro.dbt.alter_relation_add_remove_columns": {"name": "alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6592317, "supported_languages": null}, "macro.dbt.default__alter_relation_add_remove_columns": {"name": "default__alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n\n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6602323, "supported_languages": null}, "macro.dbt.collect_freshness": {"name": "collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\freshness.sql", "original_file_path": "macros\\adapters\\freshness.sql", "unique_id": "macro.dbt.collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6612322, "supported_languages": null}, "macro.dbt.default__collect_freshness": {"name": "default__collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\freshness.sql", "original_file_path": "macros\\adapters\\freshness.sql", "unique_id": "macro.dbt.default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6622329, "supported_languages": null}, "macro.dbt.get_create_index_sql": {"name": "get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "unique_id": "macro.dbt.get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6632683, "supported_languages": null}, "macro.dbt.default__get_create_index_sql": {"name": "default__get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "unique_id": "macro.dbt.default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6632683, "supported_languages": null}, "macro.dbt.create_indexes": {"name": "create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "unique_id": "macro.dbt.create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.663897, "supported_languages": null}, "macro.dbt.default__create_indexes": {"name": "default__create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "unique_id": "macro.dbt.default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.663897, "supported_languages": null}, "macro.dbt.get_catalog": {"name": "get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6658497, "supported_languages": null}, "macro.dbt.default__get_catalog": {"name": "default__get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6668515, "supported_languages": null}, "macro.dbt.information_schema_name": {"name": "information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6668515, "supported_languages": null}, "macro.dbt.default__information_schema_name": {"name": "default__information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6668515, "supported_languages": null}, "macro.dbt.list_schemas": {"name": "list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.667849, "supported_languages": null}, "macro.dbt.default__list_schemas": {"name": "default__list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.667849, "supported_languages": null}, "macro.dbt.check_schema_exists": {"name": "check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.667849, "supported_languages": null}, "macro.dbt.default__check_schema_exists": {"name": "default__check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.668816, "supported_languages": null}, "macro.dbt.list_relations_without_caching": {"name": "list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.668816, "supported_languages": null}, "macro.dbt.default__list_relations_without_caching": {"name": "default__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6698492, "supported_languages": null}, "macro.dbt.alter_column_comment": {"name": "alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "unique_id": "macro.dbt.alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6698492, "supported_languages": null}, "macro.dbt.default__alter_column_comment": {"name": "default__alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "unique_id": "macro.dbt.default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.670851, "supported_languages": null}, "macro.dbt.alter_relation_comment": {"name": "alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "unique_id": "macro.dbt.alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.670851, "supported_languages": null}, "macro.dbt.default__alter_relation_comment": {"name": "default__alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "unique_id": "macro.dbt.default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.670851, "supported_languages": null}, "macro.dbt.persist_docs": {"name": "persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "unique_id": "macro.dbt.persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6718493, "supported_languages": null}, "macro.dbt.default__persist_docs": {"name": "default__persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "unique_id": "macro.dbt.default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.672818, "supported_languages": null}, "macro.dbt.make_intermediate_relation": {"name": "make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.make_intermediate_relation", "macro_sql": "{% macro make_intermediate_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_intermediate_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_intermediate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6758492, "supported_languages": null}, "macro.dbt.default__make_intermediate_relation": {"name": "default__make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.default__make_intermediate_relation", "macro_sql": "{% macro default__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(default__make_temp_relation(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6768491, "supported_languages": null}, "macro.dbt.make_temp_relation": {"name": "make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6768491, "supported_languages": null}, "macro.dbt.default__make_temp_relation": {"name": "default__make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {%- set temp_identifier = base_relation.identifier ~ suffix -%}\n    {%- set temp_relation = base_relation.incorporate(\n                                path={\"identifier\": temp_identifier}) -%}\n\n    {{ return(temp_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.677851, "supported_languages": null}, "macro.dbt.make_backup_relation": {"name": "make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.make_backup_relation", "macro_sql": "{% macro make_backup_relation(base_relation, backup_relation_type, suffix='__dbt_backup') %}\n    {{ return(adapter.dispatch('make_backup_relation', 'dbt')(base_relation, backup_relation_type, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_backup_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.677851, "supported_languages": null}, "macro.dbt.default__make_backup_relation": {"name": "default__make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.default__make_backup_relation", "macro_sql": "{% macro default__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {%- set backup_identifier = base_relation.identifier ~ suffix -%}\n    {%- set backup_relation = base_relation.incorporate(\n                                  path={\"identifier\": backup_identifier},\n                                  type=backup_relation_type\n    ) -%}\n    {{ return(backup_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6788487, "supported_languages": null}, "macro.dbt.drop_relation": {"name": "drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n  {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6788487, "supported_languages": null}, "macro.dbt.default__drop_relation": {"name": "default__drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6788487, "supported_languages": null}, "macro.dbt.truncate_relation": {"name": "truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6798487, "supported_languages": null}, "macro.dbt.default__truncate_relation": {"name": "default__truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6798487, "supported_languages": null}, "macro.dbt.rename_relation": {"name": "rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6798487, "supported_languages": null}, "macro.dbt.default__rename_relation": {"name": "default__rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6808481, "supported_languages": null}, "macro.dbt.get_or_create_relation": {"name": "get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6808481, "supported_languages": null}, "macro.dbt.default__get_or_create_relation": {"name": "default__get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6818483, "supported_languages": null}, "macro.dbt.load_cached_relation": {"name": "load_cached_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.load_cached_relation", "macro_sql": "{% macro load_cached_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6818483, "supported_languages": null}, "macro.dbt.load_relation": {"name": "load_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.load_relation", "macro_sql": "{% macro load_relation(relation) %}\n    {{ return(load_cached_relation(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6828513, "supported_languages": null}, "macro.dbt.drop_relation_if_exists": {"name": "drop_relation_if_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6828513, "supported_languages": null}, "macro.dbt.create_schema": {"name": "create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\schema.sql", "original_file_path": "macros\\adapters\\schema.sql", "unique_id": "macro.dbt.create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6838448, "supported_languages": null}, "macro.dbt.default__create_schema": {"name": "default__create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\schema.sql", "original_file_path": "macros\\adapters\\schema.sql", "unique_id": "macro.dbt.default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6838448, "supported_languages": null}, "macro.dbt.drop_schema": {"name": "drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\schema.sql", "original_file_path": "macros\\adapters\\schema.sql", "unique_id": "macro.dbt.drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6838448, "supported_languages": null}, "macro.dbt.default__drop_schema": {"name": "default__drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\schema.sql", "original_file_path": "macros\\adapters\\schema.sql", "unique_id": "macro.dbt.default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6838448, "supported_languages": null}, "macro.dbt.current_timestamp": {"name": "current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "unique_id": "macro.dbt.current_timestamp", "macro_sql": "{%- macro current_timestamp() -%}\n    {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_postgres.postgres__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6848176, "supported_languages": null}, "macro.dbt.default__current_timestamp": {"name": "default__current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter ' + adapter.type()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6848176, "supported_languages": null}, "macro.dbt.snapshot_get_time": {"name": "snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "unique_id": "macro.dbt.snapshot_get_time", "macro_sql": "\n\n{%- macro snapshot_get_time() -%}\n    {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6858482, "supported_languages": null}, "macro.dbt.default__snapshot_get_time": {"name": "default__snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "unique_id": "macro.dbt.default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() %}\n    {{ current_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6858482, "supported_languages": null}, "macro.dbt.current_timestamp_backcompat": {"name": "current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "unique_id": "macro.dbt.current_timestamp_backcompat", "macro_sql": "{% macro current_timestamp_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6858482, "supported_languages": null}, "macro.dbt.default__current_timestamp_backcompat": {"name": "default__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_backcompat", "macro_sql": "{% macro default__current_timestamp_backcompat() %}\n    current_timestamp::timestamp\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6858482, "supported_languages": null}, "macro.dbt.current_timestamp_in_utc_backcompat": {"name": "current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "unique_id": "macro.dbt.current_timestamp_in_utc_backcompat", "macro_sql": "{% macro current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_in_utc_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__current_timestamp_in_utc_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6868494, "supported_languages": null}, "macro.dbt.default__current_timestamp_in_utc_backcompat": {"name": "default__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro default__current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp_backcompat", "macro.dbt_postgres.postgres__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6868494, "supported_languages": null}, "macro.dbt.convert_datetime": {"name": "convert_datetime", "resource_type": "macro", "package_name": "dbt", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "unique_id": "macro.dbt.convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6888485, "supported_languages": null}, "macro.dbt.dates_in_range": {"name": "dates_in_range", "resource_type": "macro", "package_name": "dbt", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "unique_id": "macro.dbt.dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6908486, "supported_languages": null}, "macro.dbt.partition_range": {"name": "partition_range", "resource_type": "macro", "package_name": "dbt", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "unique_id": "macro.dbt.partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.691854, "supported_languages": null}, "macro.dbt.py_current_timestring": {"name": "py_current_timestring", "resource_type": "macro", "package_name": "dbt", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "unique_id": "macro.dbt.py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.692849, "supported_languages": null}, "macro.dbt.statement": {"name": "statement", "resource_type": "macro", "package_name": "dbt", "path": "macros\\etc\\statement.sql", "original_file_path": "macros\\etc\\statement.sql", "unique_id": "macro.dbt.statement", "macro_sql": "\n{%- macro statement(name=None, fetch_result=False, auto_begin=True, language='sql') -%}\n  {%- if execute: -%}\n    {%- set compiled_code = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime {} for node \"{}\"'.format(language, model['unique_id'])) }}\n      {{ write(compiled_code) }}\n    {%- endif -%}\n    {%- if language == 'sql'-%}\n      {%- set res, table = adapter.execute(compiled_code, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- elif language == 'python' -%}\n      {%- set res = submit_python_job(model, compiled_code) -%}\n      {#-- TODO: What should table be for python models? --#}\n      {%- set table = None -%}\n    {%- else -%}\n      {% do exceptions.raise_compiler_error(\"statement macro didn't get supported language\") %}\n    {%- endif -%}\n\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6948488, "supported_languages": null}, "macro.dbt.noop_statement": {"name": "noop_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros\\etc\\statement.sql", "original_file_path": "macros\\etc\\statement.sql", "unique_id": "macro.dbt.noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6958492, "supported_languages": null}, "macro.dbt.run_query": {"name": "run_query", "resource_type": "macro", "package_name": "dbt", "path": "macros\\etc\\statement.sql", "original_file_path": "macros\\etc\\statement.sql", "unique_id": "macro.dbt.run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6958492, "supported_languages": null}, "macro.dbt.default__test_accepted_values": {"name": "default__test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "macros\\generic_test_sql\\accepted_values.sql", "original_file_path": "macros\\generic_test_sql\\accepted_values.sql", "unique_id": "macro.dbt.default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6968527, "supported_languages": null}, "macro.dbt.default__test_not_null": {"name": "default__test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "macros\\generic_test_sql\\not_null.sql", "original_file_path": "macros\\generic_test_sql\\not_null.sql", "unique_id": "macro.dbt.default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6978164, "supported_languages": null}, "macro.dbt.default__test_relationships": {"name": "default__test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "macros\\generic_test_sql\\relationships.sql", "original_file_path": "macros\\generic_test_sql\\relationships.sql", "unique_id": "macro.dbt.default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6978164, "supported_languages": null}, "macro.dbt.default__test_unique": {"name": "default__test_unique", "resource_type": "macro", "package_name": "dbt", "path": "macros\\generic_test_sql\\unique.sql", "original_file_path": "macros\\generic_test_sql\\unique.sql", "unique_id": "macro.dbt.default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6988165, "supported_languages": null}, "macro.dbt.generate_alias_name": {"name": "generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\get_custom_name\\get_custom_alias.sql", "original_file_path": "macros\\get_custom_name\\get_custom_alias.sql", "unique_id": "macro.dbt.generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6988165, "supported_languages": null}, "macro.dbt.default__generate_alias_name": {"name": "default__generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\get_custom_name\\get_custom_alias.sql", "original_file_path": "macros\\get_custom_name\\get_custom_alias.sql", "unique_id": "macro.dbt.default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- elif node.version -%}\n\n        {{ return(node.name ~ \"_v\" ~ (node.version | replace(\".\", \"_\"))) }}\n\n    {%- else -%}\n\n        {{ node.name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.6998174, "supported_languages": null}, "macro.dbt.generate_database_name": {"name": "generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\get_custom_name\\get_custom_database.sql", "original_file_path": "macros\\get_custom_name\\get_custom_database.sql", "unique_id": "macro.dbt.generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7008164, "supported_languages": null}, "macro.dbt.default__generate_database_name": {"name": "default__generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\get_custom_name\\get_custom_database.sql", "original_file_path": "macros\\get_custom_name\\get_custom_database.sql", "unique_id": "macro.dbt.default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7008164, "supported_languages": null}, "macro.dbt.generate_schema_name": {"name": "generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\get_custom_name\\get_custom_schema.sql", "original_file_path": "macros\\get_custom_name\\get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7018538, "supported_languages": null}, "macro.dbt.default__generate_schema_name": {"name": "default__generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\get_custom_name\\get_custom_schema.sql", "original_file_path": "macros\\get_custom_name\\get_custom_schema.sql", "unique_id": "macro.dbt.default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7028508, "supported_languages": null}, "macro.dbt.generate_schema_name_for_env": {"name": "generate_schema_name_for_env", "resource_type": "macro", "package_name": "dbt", "path": "macros\\get_custom_name\\get_custom_schema.sql", "original_file_path": "macros\\get_custom_name\\get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7028508, "supported_languages": null}, "macro.dbt.set_sql_header": {"name": "set_sql_header", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\configs.sql", "original_file_path": "macros\\materializations\\configs.sql", "unique_id": "macro.dbt.set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7038481, "supported_languages": null}, "macro.dbt.should_full_refresh": {"name": "should_full_refresh", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\configs.sql", "original_file_path": "macros\\materializations\\configs.sql", "unique_id": "macro.dbt.should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7038481, "supported_languages": null}, "macro.dbt.should_store_failures": {"name": "should_store_failures", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\configs.sql", "original_file_path": "macros\\materializations\\configs.sql", "unique_id": "macro.dbt.should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7048485, "supported_languages": null}, "macro.dbt.run_hooks": {"name": "run_hooks", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "unique_id": "macro.dbt.run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7058551, "supported_languages": null}, "macro.dbt.make_hook_config": {"name": "make_hook_config", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "unique_id": "macro.dbt.make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7068481, "supported_languages": null}, "macro.dbt.before_begin": {"name": "before_begin", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "unique_id": "macro.dbt.before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7068481, "supported_languages": null}, "macro.dbt.in_transaction": {"name": "in_transaction", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "unique_id": "macro.dbt.in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7068481, "supported_languages": null}, "macro.dbt.after_commit": {"name": "after_commit", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "unique_id": "macro.dbt.after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7068481, "supported_languages": null}, "macro.dbt.get_quoted_csv": {"name": "get_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "unique_id": "macro.dbt.get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7088156, "supported_languages": null}, "macro.dbt.diff_columns": {"name": "diff_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "unique_id": "macro.dbt.diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.709815, "supported_languages": null}, "macro.dbt.diff_column_data_types": {"name": "diff_column_data_types", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "unique_id": "macro.dbt.diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type and not sc.can_expand_to(other_column=tc) %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7108147, "supported_languages": null}, "macro.dbt.get_merge_update_columns": {"name": "get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "unique_id": "macro.dbt.get_merge_update_columns", "macro_sql": "{% macro get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {{ return(adapter.dispatch('get_merge_update_columns', 'dbt')(merge_update_columns, merge_exclude_columns, dest_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.711815, "supported_languages": null}, "macro.dbt.default__get_merge_update_columns": {"name": "default__get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "unique_id": "macro.dbt.default__get_merge_update_columns", "macro_sql": "{% macro default__get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {%- set default_cols = dest_columns | map(attribute=\"quoted\") | list -%}\n\n  {%- if merge_update_columns and merge_exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\n        'Model cannot specify merge_update_columns and merge_exclude_columns. Please update model to use only one config'\n    )}}\n  {%- elif merge_update_columns -%}\n    {%- set update_columns = merge_update_columns -%}\n  {%- elif merge_exclude_columns -%}\n    {%- set update_columns = [] -%}\n    {%- for column in dest_columns -%}\n      {% if column.column | lower not in merge_exclude_columns | map(\"lower\") | list %}\n        {%- do update_columns.append(column.quoted) -%}\n      {% endif %}\n    {%- endfor -%}\n  {%- else -%}\n    {%- set update_columns = default_cols -%}\n  {%- endif -%}\n\n  {{ return(update_columns) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.712815, "supported_languages": null}, "macro.dbt.materialization_incremental_default": {"name": "materialization_incremental_default", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\incremental.sql", "original_file_path": "macros\\materializations\\models\\incremental\\incremental.sql", "unique_id": "macro.dbt.materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = get_create_table_as_sql(False, target_relation, sql) %}\n  {% elif full_refresh_mode %}\n      {% set build_sql = get_create_table_as_sql(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n  {% else %}\n    {% do run_query(get_create_table_as_sql(True, temp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=temp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n    {% set incremental_predicates = config.get('predicates', none) or config.get('incremental_predicates', none) %}\n    {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'incremental_predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.get_create_table_as_sql", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7203228, "supported_languages": ["sql"]}, "macro.dbt.is_incremental": {"name": "is_incremental", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\is_incremental.sql", "original_file_path": "macros\\materializations\\models\\incremental\\is_incremental.sql", "unique_id": "macro.dbt.is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7213228, "supported_languages": null}, "macro.dbt.get_merge_sql": {"name": "get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "unique_id": "macro.dbt.get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n   -- back compat for old kwarg name\n  {% set incremental_predicates = kwargs.get('predicates', incremental_predicates) %}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7278311, "supported_languages": null}, "macro.dbt.default__get_merge_sql": {"name": "default__get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "unique_id": "macro.dbt.default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n    {%- set predicates = [] if incremental_predicates is none else [] + incremental_predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set merge_update_columns = config.get('merge_update_columns') -%}\n    {%- set merge_exclude_columns = config.get('merge_exclude_columns') -%}\n    {%- set update_columns = get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set unique_key_match %}\n                DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n            {% endset %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{\"(\" ~ predicates | join(\") and (\") ~ \")\"}}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7308311, "supported_languages": null}, "macro.dbt.get_delete_insert_merge_sql": {"name": "get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "unique_id": "macro.dbt.get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7308311, "supported_languages": null}, "macro.dbt.default__get_delete_insert_merge_sql": {"name": "default__get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not string %}\n            delete from {{target }}\n            using {{ source }}\n            where (\n                {% for key in unique_key %}\n                    {{ source }}.{{ key }} = {{ target }}.{{ key }}\n                    {{ \"and \" if not loop.last}}\n                {% endfor %}\n                {% if incremental_predicates %}\n                    {% for predicate in incremental_predicates %}\n                        and {{ predicate }}\n                    {% endfor %}\n                {% endif %}\n            );\n        {% else %}\n            delete from {{ target }}\n            where (\n                {{ unique_key }}) in (\n                select ({{ unique_key }})\n                from {{ source }}\n            )\n            {%- if incremental_predicates %}\n                {% for predicate in incremental_predicates %}\n                    and {{ predicate }}\n                {% endfor %}\n            {%- endif -%};\n\n        {% endif %}\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.732832, "supported_languages": null}, "macro.dbt.get_insert_overwrite_merge_sql": {"name": "get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.732832, "supported_languages": null}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"name": "default__get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {#-- The only time include_sql_header is True: --#}\n    {#-- BigQuery + insert_overwrite strategy + \"static\" partitions config --#}\n    {#-- We should consider including the sql header at the materialization level instead --#}\n\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7348323, "supported_languages": null}, "macro.dbt.incremental_validate_on_schema_change": {"name": "incremental_validate_on_schema_change", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "original_file_path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "unique_id": "macro.dbt.incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7408333, "supported_languages": null}, "macro.dbt.check_for_schema_changes": {"name": "check_for_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "original_file_path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "unique_id": "macro.dbt.check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7428656, "supported_languages": null}, "macro.dbt.sync_column_schemas": {"name": "sync_column_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "original_file_path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "unique_id": "macro.dbt.sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7448707, "supported_languages": null}, "macro.dbt.process_schema_changes": {"name": "process_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "original_file_path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "unique_id": "macro.dbt.process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n\n              Additional troubleshooting context:\n                 Source columns not in target: {{ schema_changes_dict['source_not_in_target'] }}\n                 Target columns not in source: {{ schema_changes_dict['target_not_in_source'] }}\n                 New column types: {{ schema_changes_dict['new_target_types'] }}\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.746865, "supported_languages": null}, "macro.dbt.get_incremental_append_sql": {"name": "get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.get_incremental_append_sql", "macro_sql": "{% macro get_incremental_append_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_append_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.747867, "supported_languages": null}, "macro.dbt.default__get_incremental_append_sql": {"name": "default__get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.default__get_incremental_append_sql", "macro_sql": "{% macro default__get_incremental_append_sql(arg_dict) %}\n\n  {% do return(get_insert_into_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_into_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.747867, "supported_languages": null}, "macro.dbt.get_incremental_delete_insert_sql": {"name": "get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.get_incremental_delete_insert_sql", "macro_sql": "{% macro get_incremental_delete_insert_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_delete_insert_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7488654, "supported_languages": null}, "macro.dbt.default__get_incremental_delete_insert_sql": {"name": "default__get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.default__get_incremental_delete_insert_sql", "macro_sql": "{% macro default__get_incremental_delete_insert_sql(arg_dict) %}\n\n  {% do return(get_delete_insert_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7488654, "supported_languages": null}, "macro.dbt.get_incremental_merge_sql": {"name": "get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.get_incremental_merge_sql", "macro_sql": "{% macro get_incremental_merge_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_merge_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7488654, "supported_languages": null}, "macro.dbt.default__get_incremental_merge_sql": {"name": "default__get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.default__get_incremental_merge_sql", "macro_sql": "{% macro default__get_incremental_merge_sql(arg_dict) %}\n\n  {% do return(get_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7498643, "supported_languages": null}, "macro.dbt.get_incremental_insert_overwrite_sql": {"name": "get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.get_incremental_insert_overwrite_sql", "macro_sql": "{% macro get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_insert_overwrite_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7498643, "supported_languages": null}, "macro.dbt.default__get_incremental_insert_overwrite_sql": {"name": "default__get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.default__get_incremental_insert_overwrite_sql", "macro_sql": "{% macro default__get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {% do return(get_insert_overwrite_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7508643, "supported_languages": null}, "macro.dbt.get_incremental_default_sql": {"name": "get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.get_incremental_default_sql", "macro_sql": "{% macro get_incremental_default_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_default_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_incremental_default_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7508643, "supported_languages": null}, "macro.dbt.default__get_incremental_default_sql": {"name": "default__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.default__get_incremental_default_sql", "macro_sql": "{% macro default__get_incremental_default_sql(arg_dict) %}\n\n  {% do return(get_incremental_append_sql(arg_dict)) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7508643, "supported_languages": null}, "macro.dbt.get_insert_into_sql": {"name": "get_insert_into_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.get_insert_into_sql", "macro_sql": "{% macro get_insert_into_sql(target_relation, temp_relation, dest_columns) %}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ temp_relation }}\n    )\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7518647, "supported_languages": null}, "macro.dbt.get_table_columns_and_constraints": {"name": "get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\table\\columns_spec_ddl.sql", "original_file_path": "macros\\materializations\\models\\table\\columns_spec_ddl.sql", "unique_id": "macro.dbt.get_table_columns_and_constraints", "macro_sql": "{%- macro get_table_columns_and_constraints() -%}\n  {{ adapter.dispatch('get_table_columns_and_constraints', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7528672, "supported_languages": null}, "macro.dbt.default__get_table_columns_and_constraints": {"name": "default__get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\table\\columns_spec_ddl.sql", "original_file_path": "macros\\materializations\\models\\table\\columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_table_columns_and_constraints", "macro_sql": "{% macro default__get_table_columns_and_constraints() -%}\n  {{ return(table_columns_and_constraints()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7528672, "supported_languages": null}, "macro.dbt.table_columns_and_constraints": {"name": "table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\table\\columns_spec_ddl.sql", "original_file_path": "macros\\materializations\\models\\table\\columns_spec_ddl.sql", "unique_id": "macro.dbt.table_columns_and_constraints", "macro_sql": "{% macro table_columns_and_constraints() %}\n  {# loop through user_provided_columns to create DDL with data types and constraints #}\n    {%- set raw_column_constraints = adapter.render_raw_columns_constraints(raw_columns=model['columns']) -%}\n    {%- set raw_model_constraints = adapter.render_raw_model_constraints(raw_constraints=model['constraints']) -%}\n    (\n    {% for c in raw_column_constraints -%}\n      {{ c }}{{ \",\" if not loop.last or raw_model_constraints }}\n    {% endfor %}\n    {% for c in raw_model_constraints -%}\n        {{ c }}{{ \",\" if not loop.last }}\n    {% endfor -%}\n    )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7538648, "supported_languages": null}, "macro.dbt.get_assert_columns_equivalent": {"name": "get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\table\\columns_spec_ddl.sql", "original_file_path": "macros\\materializations\\models\\table\\columns_spec_ddl.sql", "unique_id": "macro.dbt.get_assert_columns_equivalent", "macro_sql": "\n\n{%- macro get_assert_columns_equivalent(sql) -%}\n  {{ adapter.dispatch('get_assert_columns_equivalent', 'dbt')(sql) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7548344, "supported_languages": null}, "macro.dbt.default__get_assert_columns_equivalent": {"name": "default__get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\table\\columns_spec_ddl.sql", "original_file_path": "macros\\materializations\\models\\table\\columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_assert_columns_equivalent", "macro_sql": "{% macro default__get_assert_columns_equivalent(sql) -%}\n  {{ return(assert_columns_equivalent(sql)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7548344, "supported_languages": null}, "macro.dbt.assert_columns_equivalent": {"name": "assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\table\\columns_spec_ddl.sql", "original_file_path": "macros\\materializations\\models\\table\\columns_spec_ddl.sql", "unique_id": "macro.dbt.assert_columns_equivalent", "macro_sql": "{% macro assert_columns_equivalent(sql) %}\n\n  {#-- First ensure the user has defined 'columns' in yaml specification --#}\n  {%- set user_defined_columns = model['columns'] -%}\n  {%- if not user_defined_columns -%}\n      {{ exceptions.raise_contract_error([], []) }}\n  {%- endif -%}\n\n  {#-- Obtain the column schema provided by sql file. #}\n  {%- set sql_file_provided_columns = get_column_schema_from_query(sql, config.get('sql_header', none)) -%}\n  {#--Obtain the column schema provided by the schema file by generating an 'empty schema' query from the model's columns. #}\n  {%- set schema_file_provided_columns = get_column_schema_from_query(get_empty_schema_sql(user_defined_columns)) -%}\n\n  {#-- create dictionaries with name and formatted data type and strings for exception #}\n  {%- set sql_columns = format_columns(sql_file_provided_columns) -%}\n  {%- set yaml_columns = format_columns(schema_file_provided_columns)  -%}\n\n  {%- if sql_columns|length != yaml_columns|length -%}\n    {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n  {%- endif -%}\n\n  {%- for sql_col in sql_columns -%}\n    {%- set yaml_col = [] -%}\n    {%- for this_col in yaml_columns -%}\n      {%- if this_col['name'] == sql_col['name'] -%}\n        {%- do yaml_col.append(this_col) -%}\n        {%- break -%}\n      {%- endif -%}\n    {%- endfor -%}\n    {%- if not yaml_col -%}\n      {#-- Column with name not found in yaml #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n    {%- if sql_col['formatted'] != yaml_col[0]['formatted'] -%}\n      {#-- Column data types don't match #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n  {%- endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_column_schema_from_query", "macro.dbt.get_empty_schema_sql", "macro.dbt.format_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7568345, "supported_languages": null}, "macro.dbt.format_columns": {"name": "format_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\table\\columns_spec_ddl.sql", "original_file_path": "macros\\materializations\\models\\table\\columns_spec_ddl.sql", "unique_id": "macro.dbt.format_columns", "macro_sql": "{% macro format_columns(columns) %}\n  {% set formatted_columns = [] %}\n  {% for column in columns %}\n    {%- set formatted_column = adapter.dispatch('format_column', 'dbt')(column) -%}\n    {%- do formatted_columns.append(formatted_column) -%}\n  {% endfor %}\n  {{ return(formatted_columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7578344, "supported_languages": null}, "macro.dbt.default__format_column": {"name": "default__format_column", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\table\\columns_spec_ddl.sql", "original_file_path": "macros\\materializations\\models\\table\\columns_spec_ddl.sql", "unique_id": "macro.dbt.default__format_column", "macro_sql": "{% macro default__format_column(column) -%}\n  {% set data_type = column.dtype %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7578344, "supported_languages": null}, "macro.dbt.get_create_table_as_sql": {"name": "get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\table\\create_table_as.sql", "original_file_path": "macros\\materializations\\models\\table\\create_table_as.sql", "unique_id": "macro.dbt.get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7588654, "supported_languages": null}, "macro.dbt.default__get_create_table_as_sql": {"name": "default__get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\table\\create_table_as.sql", "original_file_path": "macros\\materializations\\models\\table\\create_table_as.sql", "unique_id": "macro.dbt.default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7598655, "supported_languages": null}, "macro.dbt.create_table_as": {"name": "create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\table\\create_table_as.sql", "original_file_path": "macros\\materializations\\models\\table\\create_table_as.sql", "unique_id": "macro.dbt.create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {# backward compatibility for create_table_as that does not support language #}\n  {% if language == \"sql\" %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code)}}\n  {% else %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code, language) }}\n  {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7598655, "supported_languages": null}, "macro.dbt.default__create_table_as": {"name": "default__create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\table\\create_table_as.sql", "original_file_path": "macros\\materializations\\models\\table\\create_table_as.sql", "unique_id": "macro.dbt.default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  {% set contract_config = config.get('contract') %}\n  {% if contract_config.enforced %}\n    {{ get_assert_columns_equivalent(sql) }}\n    {{ get_table_columns_and_constraints() }}\n    {%- set sql = get_select_subquery(sql) %}\n  {% endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7618651, "supported_languages": null}, "macro.dbt.default__get_column_names": {"name": "default__get_column_names", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\table\\create_table_as.sql", "original_file_path": "macros\\materializations\\models\\table\\create_table_as.sql", "unique_id": "macro.dbt.default__get_column_names", "macro_sql": "{% macro default__get_column_names() %}\n  {#- loop through user_provided_columns to get column names -#}\n    {%- set user_provided_columns = model['columns'] -%}\n    {%- for i in user_provided_columns %}\n      {%- set col = user_provided_columns[i] -%}\n      {%- set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] -%}\n      {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7618651, "supported_languages": null}, "macro.dbt.get_select_subquery": {"name": "get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\table\\create_table_as.sql", "original_file_path": "macros\\materializations\\models\\table\\create_table_as.sql", "unique_id": "macro.dbt.get_select_subquery", "macro_sql": "{% macro get_select_subquery(sql) %}\n  {{ return(adapter.dispatch('get_select_subquery', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7628646, "supported_languages": null}, "macro.dbt.default__get_select_subquery": {"name": "default__get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\table\\create_table_as.sql", "original_file_path": "macros\\materializations\\models\\table\\create_table_as.sql", "unique_id": "macro.dbt.default__get_select_subquery", "macro_sql": "{% macro default__get_select_subquery(sql) %}\n    select {{ adapter.dispatch('get_column_names', 'dbt')() }}\n    from (\n        {{ sql }}\n    ) as model_subq\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7628646, "supported_languages": null}, "macro.dbt.materialization_table_default": {"name": "materialization_table_default", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\table\\table.sql", "original_file_path": "macros\\materializations\\models\\table\\table.sql", "unique_id": "macro.dbt.materialization_table_default", "macro_sql": "{% materialization table, default %}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n    /* Do the equivalent of rename_if_exists */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.766865, "supported_languages": ["sql"]}, "macro.dbt.create_or_replace_view": {"name": "create_or_replace_view", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\view\\create_or_replace_view.sql", "original_file_path": "macros\\materializations\\models\\view\\create_or_replace_view.sql", "unique_id": "macro.dbt.create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7688673, "supported_languages": null}, "macro.dbt.get_create_view_as_sql": {"name": "get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\view\\create_view_as.sql", "original_file_path": "macros\\materializations\\models\\view\\create_view_as.sql", "unique_id": "macro.dbt.get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7698665, "supported_languages": null}, "macro.dbt.default__get_create_view_as_sql": {"name": "default__get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\view\\create_view_as.sql", "original_file_path": "macros\\materializations\\models\\view\\create_view_as.sql", "unique_id": "macro.dbt.default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7698665, "supported_languages": null}, "macro.dbt.create_view_as": {"name": "create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\view\\create_view_as.sql", "original_file_path": "macros\\materializations\\models\\view\\create_view_as.sql", "unique_id": "macro.dbt.create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.770868, "supported_languages": null}, "macro.dbt.default__create_view_as": {"name": "default__create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\view\\create_view_as.sql", "original_file_path": "macros\\materializations\\models\\view\\create_view_as.sql", "unique_id": "macro.dbt.default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }}\n    {% set contract_config = config.get('contract') %}\n    {% if contract_config.enforced %}\n      {{ get_assert_columns_equivalent(sql) }}\n    {%- endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.770868, "supported_languages": null}, "macro.dbt.handle_existing_table": {"name": "handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\view\\helpers.sql", "original_file_path": "macros\\materializations\\models\\view\\helpers.sql", "unique_id": "macro.dbt.handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7718651, "supported_languages": null}, "macro.dbt.default__handle_existing_table": {"name": "default__handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\view\\helpers.sql", "original_file_path": "macros\\materializations\\models\\view\\helpers.sql", "unique_id": "macro.dbt.default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7718651, "supported_languages": null}, "macro.dbt.materialization_view_default": {"name": "materialization_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\view\\view.sql", "original_file_path": "macros\\materializations\\models\\view\\view.sql", "unique_id": "macro.dbt.materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='view') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"existing_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the existing_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the existing_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if existing_relation is not none %}\n    /* Do the equivalent of rename_if_exists */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n      {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7758648, "supported_languages": ["sql"]}, "macro.dbt.create_csv_table": {"name": "create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7818317, "supported_languages": null}, "macro.dbt.default__create_csv_table": {"name": "default__create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7828314, "supported_languages": null}, "macro.dbt.reset_csv_table": {"name": "reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7838316, "supported_languages": null}, "macro.dbt.default__reset_csv_table": {"name": "default__reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7838316, "supported_languages": null}, "macro.dbt.get_csv_sql": {"name": "get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.get_csv_sql", "macro_sql": "{% macro get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ adapter.dispatch('get_csv_sql', 'dbt')(create_or_truncate_sql, insert_sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_csv_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7848315, "supported_languages": null}, "macro.dbt.default__get_csv_sql": {"name": "default__get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.default__get_csv_sql", "macro_sql": "{% macro default__get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ create_or_truncate_sql }};\n    -- dbt seed --\n    {{ insert_sql }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7848315, "supported_languages": null}, "macro.dbt.get_binding_char": {"name": "get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7848315, "supported_languages": null}, "macro.dbt.default__get_binding_char": {"name": "default__get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7858315, "supported_languages": null}, "macro.dbt.get_batch_size": {"name": "get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7858315, "supported_languages": null}, "macro.dbt.default__get_batch_size": {"name": "default__get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7858315, "supported_languages": null}, "macro.dbt.get_seed_column_quoted_csv": {"name": "get_seed_column_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7868311, "supported_languages": null}, "macro.dbt.load_csv_rows": {"name": "load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7868311, "supported_languages": null}, "macro.dbt.default__load_csv_rows": {"name": "default__load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7888315, "supported_languages": null}, "macro.dbt.materialization_seed_default": {"name": "materialization_seed_default", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\seed.sql", "original_file_path": "macros\\materializations\\seeds\\seed.sql", "unique_id": "macro.dbt.materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set grant_config = config.get('grants') -%}\n  {%- set agate_table = load_agate_table() -%}\n  -- grab current tables grants config for comparision later on\n\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ get_csv_sql(create_table_sql, sql) }};\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.get_csv_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7938316, "supported_languages": ["sql"]}, "macro.dbt.create_columns": {"name": "create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.797832, "supported_languages": null}, "macro.dbt.default__create_columns": {"name": "default__create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7988317, "supported_languages": null}, "macro.dbt.post_snapshot": {"name": "post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7988317, "supported_languages": null}, "macro.dbt.default__post_snapshot": {"name": "default__post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7988317, "supported_languages": null}, "macro.dbt.get_true_sql": {"name": "get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7998307, "supported_languages": null}, "macro.dbt.default__get_true_sql": {"name": "default__get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7998307, "supported_languages": null}, "macro.dbt.snapshot_staging_table": {"name": "snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.7998307, "supported_languages": null}, "macro.dbt.default__snapshot_staging_table": {"name": "default__snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n\n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8018312, "supported_languages": null}, "macro.dbt.build_snapshot_table": {"name": "build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8018312, "supported_languages": null}, "macro.dbt.default__build_snapshot_table": {"name": "default__build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8018312, "supported_languages": null}, "macro.dbt.build_snapshot_staging_table": {"name": "build_snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8028312, "supported_languages": null}, "macro.dbt.materialization_snapshot_default": {"name": "materialization_snapshot_default", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\snapshot.sql", "original_file_path": "macros\\materializations\\snapshots\\snapshot.sql", "unique_id": "macro.dbt.materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_code']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% set should_revoke = should_revoke(target_relation_exists, full_refresh_mode=False) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8118324, "supported_languages": ["sql"]}, "macro.dbt.snapshot_merge_sql": {"name": "snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\snapshot_merge.sql", "original_file_path": "macros\\materializations\\snapshots\\snapshot_merge.sql", "unique_id": "macro.dbt.snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8128717, "supported_languages": null}, "macro.dbt.default__snapshot_merge_sql": {"name": "default__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\snapshot_merge.sql", "original_file_path": "macros\\materializations\\snapshots\\snapshot_merge.sql", "unique_id": "macro.dbt.default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8128717, "supported_languages": null}, "macro.dbt.strategy_dispatch": {"name": "strategy_dispatch", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "unique_id": "macro.dbt.strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8178651, "supported_languages": null}, "macro.dbt.snapshot_hash_arguments": {"name": "snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "unique_id": "macro.dbt.snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8178651, "supported_languages": null}, "macro.dbt.default__snapshot_hash_arguments": {"name": "default__snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "unique_id": "macro.dbt.default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8188677, "supported_languages": null}, "macro.dbt.snapshot_timestamp_strategy": {"name": "snapshot_timestamp_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "unique_id": "macro.dbt.snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.819865, "supported_languages": null}, "macro.dbt.snapshot_string_as_time": {"name": "snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "unique_id": "macro.dbt.snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.819865, "supported_languages": null}, "macro.dbt.default__snapshot_string_as_time": {"name": "default__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "unique_id": "macro.dbt.default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.819865, "supported_languages": null}, "macro.dbt.snapshot_check_all_get_existing_columns": {"name": "snapshot_check_all_get_existing_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) -%}\n    {%- if not target_exists -%}\n        {#-- no table yet -> return whatever the query does --#}\n        {{ return((false, query_columns)) }}\n    {%- endif -%}\n\n    {#-- handle any schema changes --#}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=node.alias) -%}\n\n    {% if check_cols_config == 'all' %}\n        {%- set query_columns = get_columns_in_query(node['compiled_code']) -%}\n\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {#-- query for proper casing/quoting, to support comparison below --#}\n        {%- set select_check_cols_from_target -%}\n            {#-- N.B. The whitespace below is necessary to avoid edge case issue with comments --#}\n            {#-- See: https://github.com/dbt-labs/dbt-core/issues/6781 --#}\n            select {{ check_cols_config | join(', ') }} from (\n                {{ node['compiled_code'] }}\n            ) subq\n        {%- endset -%}\n        {% set query_columns = get_columns_in_query(select_check_cols_from_target) %}\n\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set existing_cols = adapter.get_columns_in_relation(target_relation) | map(attribute = 'name') | list -%}\n    {%- set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(adapter.quote(col)) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return((ns.column_added, intersection)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8228645, "supported_languages": null}, "macro.dbt.snapshot_check_strategy": {"name": "snapshot_check_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "unique_id": "macro.dbt.snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    {% set updated_at = config.get('updated_at', snapshot_get_time()) %}\n\n    {% set column_added = false %}\n\n    {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8248343, "supported_languages": null}, "macro.dbt.get_test_sql": {"name": "get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\tests\\helpers.sql", "original_file_path": "macros\\materializations\\tests\\helpers.sql", "unique_id": "macro.dbt.get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8248343, "supported_languages": null}, "macro.dbt.default__get_test_sql": {"name": "default__get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\tests\\helpers.sql", "original_file_path": "macros\\materializations\\tests\\helpers.sql", "unique_id": "macro.dbt.default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8258653, "supported_languages": null}, "macro.dbt.materialization_test_default": {"name": "materialization_test_default", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\tests\\test.sql", "original_file_path": "macros\\materializations\\tests\\test.sql", "unique_id": "macro.dbt.materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql %}\n\n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8288648, "supported_languages": ["sql"]}, "macro.dbt.get_where_subquery": {"name": "get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\tests\\where_subquery.sql", "original_file_path": "macros\\materializations\\tests\\where_subquery.sql", "unique_id": "macro.dbt.get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.829865, "supported_languages": null}, "macro.dbt.default__get_where_subquery": {"name": "default__get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\tests\\where_subquery.sql", "original_file_path": "macros\\materializations\\tests\\where_subquery.sql", "unique_id": "macro.dbt.default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.829865, "supported_languages": null}, "macro.dbt.resolve_model_name": {"name": "resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "unique_id": "macro.dbt.resolve_model_name", "macro_sql": "{% macro resolve_model_name(input_model_name) %}\n    {{ return(adapter.dispatch('resolve_model_name', 'dbt')(input_model_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8318658, "supported_languages": null}, "macro.dbt.default__resolve_model_name": {"name": "default__resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "unique_id": "macro.dbt.default__resolve_model_name", "macro_sql": "\n\n{%- macro default__resolve_model_name(input_model_name) -%}\n    {{  input_model_name | string | replace('\"', '\\\"') }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8328676, "supported_languages": null}, "macro.dbt.build_ref_function": {"name": "build_ref_function", "resource_type": "macro", "package_name": "dbt", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "unique_id": "macro.dbt.build_ref_function", "macro_sql": "{% macro build_ref_function(model) %}\n\n    {%- set ref_dict = {} -%}\n    {%- for _ref in model.refs -%}\n        {% set _ref_args = [_ref.get('package'), _ref['name']] if _ref.get('package') else [_ref['name'],] %}\n        {%- set resolved = ref(*_ref_args, v=_ref.get('version')) -%}\n        {%- if _ref.get('version') -%}\n            {% do _ref_args.extend([\"v\" ~ _ref['version']]) %}\n        {%- endif -%}\n       {%- do ref_dict.update({_ref_args | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef ref(*args, **kwargs):\n    refs = {{ ref_dict | tojson }}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8338652, "supported_languages": null}, "macro.dbt.build_source_function": {"name": "build_source_function", "resource_type": "macro", "package_name": "dbt", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "unique_id": "macro.dbt.build_source_function", "macro_sql": "{% macro build_source_function(model) %}\n\n    {%- set source_dict = {} -%}\n    {%- for _source in model.sources -%}\n        {%- set resolved = source(*_source) -%}\n        {%- do source_dict.update({_source | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef source(*args, dbt_load_df_function):\n    sources = {{ source_dict | tojson }}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8348672, "supported_languages": null}, "macro.dbt.build_config_dict": {"name": "build_config_dict", "resource_type": "macro", "package_name": "dbt", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "unique_id": "macro.dbt.build_config_dict", "macro_sql": "{% macro build_config_dict(model) %}\n    {%- set config_dict = {} -%}\n    {% set config_dbt_used = zip(model.config.config_keys_used, model.config.config_keys_defaults) | list %}\n    {%- for key, default in config_dbt_used -%}\n        {# weird type testing with enum, would be much easier to write this logic in Python! #}\n        {%- if key == \"language\" -%}\n          {%- set value = \"python\" -%}\n        {%- endif -%}\n        {%- set value = model.config.get(key, default) -%}\n        {%- do config_dict.update({key: value}) -%}\n    {%- endfor -%}\nconfig_dict = {{ config_dict }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8358648, "supported_languages": null}, "macro.dbt.py_script_postfix": {"name": "py_script_postfix", "resource_type": "macro", "package_name": "dbt", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "unique_id": "macro.dbt.py_script_postfix", "macro_sql": "{% macro py_script_postfix(model) %}\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\n{{ build_ref_function(model ) }}\n{{ build_source_function(model ) }}\n{{ build_config_dict(model) }}\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"{{ this.database }}\"\n    schema = \"{{ this.schema }}\"\n    identifier = \"{{ this.identifier }}\"\n    {% set this_relation_name = resolve_model_name(this) %}\n    def __repr__(self):\n        return '{{ this_relation_name  }}'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = {{ is_incremental() }}\n\n# COMMAND ----------\n{{py_script_comment()}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.build_ref_function", "macro.dbt.build_source_function", "macro.dbt.build_config_dict", "macro.dbt.resolve_model_name", "macro.dbt.is_incremental", "macro.dbt.py_script_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8358648, "supported_languages": null}, "macro.dbt.py_script_comment": {"name": "py_script_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "unique_id": "macro.dbt.py_script_comment", "macro_sql": "{%macro py_script_comment()%}\n{%endmacro%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.836832, "supported_languages": null}, "macro.dbt.any_value": {"name": "any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\any_value.sql", "original_file_path": "macros\\utils\\any_value.sql", "unique_id": "macro.dbt.any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__any_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.836832, "supported_languages": null}, "macro.dbt.default__any_value": {"name": "default__any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\any_value.sql", "original_file_path": "macros\\utils\\any_value.sql", "unique_id": "macro.dbt.default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n\n    any_value({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.836832, "supported_languages": null}, "macro.dbt.array_append": {"name": "array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\array_append.sql", "original_file_path": "macros\\utils\\array_append.sql", "unique_id": "macro.dbt.array_append", "macro_sql": "{% macro array_append(array, new_element) -%}\n  {{ return(adapter.dispatch('array_append', 'dbt')(array, new_element)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8378322, "supported_languages": null}, "macro.dbt.default__array_append": {"name": "default__array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\array_append.sql", "original_file_path": "macros\\utils\\array_append.sql", "unique_id": "macro.dbt.default__array_append", "macro_sql": "{% macro default__array_append(array, new_element) -%}\n    array_append({{ array }}, {{ new_element }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8378322, "supported_languages": null}, "macro.dbt.array_concat": {"name": "array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\array_concat.sql", "original_file_path": "macros\\utils\\array_concat.sql", "unique_id": "macro.dbt.array_concat", "macro_sql": "{% macro array_concat(array_1, array_2) -%}\n  {{ return(adapter.dispatch('array_concat', 'dbt')(array_1, array_2)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8378322, "supported_languages": null}, "macro.dbt.default__array_concat": {"name": "default__array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\array_concat.sql", "original_file_path": "macros\\utils\\array_concat.sql", "unique_id": "macro.dbt.default__array_concat", "macro_sql": "{% macro default__array_concat(array_1, array_2) -%}\n    array_cat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8388655, "supported_languages": null}, "macro.dbt.array_construct": {"name": "array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\array_construct.sql", "original_file_path": "macros\\utils\\array_construct.sql", "unique_id": "macro.dbt.array_construct", "macro_sql": "{% macro array_construct(inputs=[], data_type=api.Column.translate_type('integer')) -%}\n  {{ return(adapter.dispatch('array_construct', 'dbt')(inputs, data_type)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8388655, "supported_languages": null}, "macro.dbt.default__array_construct": {"name": "default__array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\array_construct.sql", "original_file_path": "macros\\utils\\array_construct.sql", "unique_id": "macro.dbt.default__array_construct", "macro_sql": "{% macro default__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    array[ {{ inputs|join(' , ') }} ]\n    {% else %}\n    array[]::{{data_type}}[]\n    {% endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8398342, "supported_languages": null}, "macro.dbt.bool_or": {"name": "bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\bool_or.sql", "original_file_path": "macros\\utils\\bool_or.sql", "unique_id": "macro.dbt.bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8398342, "supported_languages": null}, "macro.dbt.default__bool_or": {"name": "default__bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\bool_or.sql", "original_file_path": "macros\\utils\\bool_or.sql", "unique_id": "macro.dbt.default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n\n    bool_or({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8398342, "supported_languages": null}, "macro.dbt.cast_bool_to_text": {"name": "cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\cast_bool_to_text.sql", "original_file_path": "macros\\utils\\cast_bool_to_text.sql", "unique_id": "macro.dbt.cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt') (field) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8408344, "supported_languages": null}, "macro.dbt.default__cast_bool_to_text": {"name": "default__cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\cast_bool_to_text.sql", "original_file_path": "macros\\utils\\cast_bool_to_text.sql", "unique_id": "macro.dbt.default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ api.Column.translate_type('string') }})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8408344, "supported_languages": null}, "macro.dbt.concat": {"name": "concat", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\concat.sql", "original_file_path": "macros\\utils\\concat.sql", "unique_id": "macro.dbt.concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt')(fields)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8408344, "supported_languages": null}, "macro.dbt.default__concat": {"name": "default__concat", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\concat.sql", "original_file_path": "macros\\utils\\concat.sql", "unique_id": "macro.dbt.default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8418617, "supported_languages": null}, "macro.dbt.type_string": {"name": "type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8428655, "supported_languages": null}, "macro.dbt.default__type_string": {"name": "default__type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.default__type_string", "macro_sql": "{% macro default__type_string() %}\n    {{ return(api.Column.translate_type(\"string\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8428655, "supported_languages": null}, "macro.dbt.type_timestamp": {"name": "type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.843866, "supported_languages": null}, "macro.dbt.default__type_timestamp": {"name": "default__type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    {{ return(api.Column.translate_type(\"timestamp\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.843866, "supported_languages": null}, "macro.dbt.type_float": {"name": "type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.843866, "supported_languages": null}, "macro.dbt.default__type_float": {"name": "default__type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.default__type_float", "macro_sql": "{% macro default__type_float() %}\n    {{ return(api.Column.translate_type(\"float\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.843866, "supported_languages": null}, "macro.dbt.type_numeric": {"name": "type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8448339, "supported_languages": null}, "macro.dbt.default__type_numeric": {"name": "default__type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    {{ return(api.Column.numeric_type(\"numeric\", 28, 6)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8448339, "supported_languages": null}, "macro.dbt.type_bigint": {"name": "type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8448339, "supported_languages": null}, "macro.dbt.default__type_bigint": {"name": "default__type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    {{ return(api.Column.translate_type(\"bigint\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8458652, "supported_languages": null}, "macro.dbt.type_int": {"name": "type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8458652, "supported_languages": null}, "macro.dbt.default__type_int": {"name": "default__type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.default__type_int", "macro_sql": "{%- macro default__type_int() -%}\n  {{ return(api.Column.translate_type(\"integer\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8458652, "supported_languages": null}, "macro.dbt.type_boolean": {"name": "type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.type_boolean", "macro_sql": "\n\n{%- macro type_boolean() -%}\n  {{ return(adapter.dispatch('type_boolean', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_boolean"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8458652, "supported_languages": null}, "macro.dbt.default__type_boolean": {"name": "default__type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.default__type_boolean", "macro_sql": "{%- macro default__type_boolean() -%}\n  {{ return(api.Column.translate_type(\"boolean\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8468642, "supported_languages": null}, "macro.dbt.dateadd": {"name": "dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\dateadd.sql", "original_file_path": "macros\\utils\\dateadd.sql", "unique_id": "macro.dbt.dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8468642, "supported_languages": null}, "macro.dbt.default__dateadd": {"name": "default__dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\dateadd.sql", "original_file_path": "macros\\utils\\dateadd.sql", "unique_id": "macro.dbt.default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.847864, "supported_languages": null}, "macro.dbt.datediff": {"name": "datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\datediff.sql", "original_file_path": "macros\\utils\\datediff.sql", "unique_id": "macro.dbt.datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt')(first_date, second_date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.847864, "supported_languages": null}, "macro.dbt.default__datediff": {"name": "default__datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\datediff.sql", "original_file_path": "macros\\utils\\datediff.sql", "unique_id": "macro.dbt.default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8488677, "supported_languages": null}, "macro.dbt.date_trunc": {"name": "date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\date_trunc.sql", "original_file_path": "macros\\utils\\date_trunc.sql", "unique_id": "macro.dbt.date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt') (datepart, date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8488677, "supported_languages": null}, "macro.dbt.default__date_trunc": {"name": "default__date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\date_trunc.sql", "original_file_path": "macros\\utils\\date_trunc.sql", "unique_id": "macro.dbt.default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8488677, "supported_languages": null}, "macro.dbt.escape_single_quotes": {"name": "escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\escape_single_quotes.sql", "original_file_path": "macros\\utils\\escape_single_quotes.sql", "unique_id": "macro.dbt.escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8498645, "supported_languages": null}, "macro.dbt.default__escape_single_quotes": {"name": "default__escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\escape_single_quotes.sql", "original_file_path": "macros\\utils\\escape_single_quotes.sql", "unique_id": "macro.dbt.default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8498645, "supported_languages": null}, "macro.dbt.except": {"name": "except", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\except.sql", "original_file_path": "macros\\utils\\except.sql", "unique_id": "macro.dbt.except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8498645, "supported_languages": null}, "macro.dbt.default__except": {"name": "default__except", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\except.sql", "original_file_path": "macros\\utils\\except.sql", "unique_id": "macro.dbt.default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8498645, "supported_languages": null}, "macro.dbt.hash": {"name": "hash", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\hash.sql", "original_file_path": "macros\\utils\\hash.sql", "unique_id": "macro.dbt.hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt') (field)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8508646, "supported_languages": null}, "macro.dbt.default__hash": {"name": "default__hash", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\hash.sql", "original_file_path": "macros\\utils\\hash.sql", "unique_id": "macro.dbt.default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{ field }} as {{ api.Column.translate_type('string') }}))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8508646, "supported_languages": null}, "macro.dbt.intersect": {"name": "intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\intersect.sql", "original_file_path": "macros\\utils\\intersect.sql", "unique_id": "macro.dbt.intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__intersect"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8508646, "supported_languages": null}, "macro.dbt.default__intersect": {"name": "default__intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\intersect.sql", "original_file_path": "macros\\utils\\intersect.sql", "unique_id": "macro.dbt.default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8518643, "supported_languages": null}, "macro.dbt.last_day": {"name": "last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\last_day.sql", "original_file_path": "macros\\utils\\last_day.sql", "unique_id": "macro.dbt.last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt') (date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8518643, "supported_languages": null}, "macro.dbt.default_last_day": {"name": "default_last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\last_day.sql", "original_file_path": "macros\\utils\\last_day.sql", "unique_id": "macro.dbt.default_last_day", "macro_sql": "\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8528712, "supported_languages": null}, "macro.dbt.default__last_day": {"name": "default__last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\last_day.sql", "original_file_path": "macros\\utils\\last_day.sql", "unique_id": "macro.dbt.default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt.default_last_day(date, datepart)}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8528712, "supported_languages": null}, "macro.dbt.length": {"name": "length", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\length.sql", "original_file_path": "macros\\utils\\length.sql", "unique_id": "macro.dbt.length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__length"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8528712, "supported_languages": null}, "macro.dbt.default__length": {"name": "default__length", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\length.sql", "original_file_path": "macros\\utils\\length.sql", "unique_id": "macro.dbt.default__length", "macro_sql": "{% macro default__length(expression) %}\n\n    length(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8528712, "supported_languages": null}, "macro.dbt.listagg": {"name": "listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\listagg.sql", "original_file_path": "macros\\utils\\listagg.sql", "unique_id": "macro.dbt.listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__listagg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8538647, "supported_languages": null}, "macro.dbt.default__listagg": {"name": "default__listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\listagg.sql", "original_file_path": "macros\\utils\\listagg.sql", "unique_id": "macro.dbt.default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8548317, "supported_languages": null}, "macro.dbt.string_literal": {"name": "string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\literal.sql", "original_file_path": "macros\\utils\\literal.sql", "unique_id": "macro.dbt.string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt') (value)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8548317, "supported_languages": null}, "macro.dbt.default__string_literal": {"name": "default__string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\literal.sql", "original_file_path": "macros\\utils\\literal.sql", "unique_id": "macro.dbt.default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8558319, "supported_languages": null}, "macro.dbt.position": {"name": "position", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\position.sql", "original_file_path": "macros\\utils\\position.sql", "unique_id": "macro.dbt.position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt') (substring_text, string_text)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__position"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8558319, "supported_languages": null}, "macro.dbt.default__position": {"name": "default__position", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\position.sql", "original_file_path": "macros\\utils\\position.sql", "unique_id": "macro.dbt.default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8558319, "supported_languages": null}, "macro.dbt.replace": {"name": "replace", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\replace.sql", "original_file_path": "macros\\utils\\replace.sql", "unique_id": "macro.dbt.replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt') (field, old_chars, new_chars)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.856831, "supported_languages": null}, "macro.dbt.default__replace": {"name": "default__replace", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\replace.sql", "original_file_path": "macros\\utils\\replace.sql", "unique_id": "macro.dbt.default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.856831, "supported_languages": null}, "macro.dbt.right": {"name": "right", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\right.sql", "original_file_path": "macros\\utils\\right.sql", "unique_id": "macro.dbt.right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt') (string_text, length_expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__right"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.857831, "supported_languages": null}, "macro.dbt.default__right": {"name": "default__right", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\right.sql", "original_file_path": "macros\\utils\\right.sql", "unique_id": "macro.dbt.default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.857831, "supported_languages": null}, "macro.dbt.safe_cast": {"name": "safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\safe_cast.sql", "original_file_path": "macros\\utils\\safe_cast.sql", "unique_id": "macro.dbt.safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.857831, "supported_languages": null}, "macro.dbt.default__safe_cast": {"name": "default__safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\safe_cast.sql", "original_file_path": "macros\\utils\\safe_cast.sql", "unique_id": "macro.dbt.default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8588314, "supported_languages": null}, "macro.dbt.split_part": {"name": "split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\split_part.sql", "original_file_path": "macros\\utils\\split_part.sql", "unique_id": "macro.dbt.split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8588314, "supported_languages": null}, "macro.dbt.default__split_part": {"name": "default__split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\split_part.sql", "original_file_path": "macros\\utils\\split_part.sql", "unique_id": "macro.dbt.default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.859832, "supported_languages": null}, "macro.dbt._split_part_negative": {"name": "_split_part_negative", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\split_part.sql", "original_file_path": "macros\\utils\\split_part.sql", "unique_id": "macro.dbt._split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.859832, "supported_languages": null}, "macro.dbt.test_unique": {"name": "test_unique", "resource_type": "macro", "package_name": "dbt", "path": "tests\\generic\\builtin.sql", "original_file_path": "tests\\generic\\builtin.sql", "unique_id": "macro.dbt.test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8608308, "supported_languages": null}, "macro.dbt.test_not_null": {"name": "test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "tests\\generic\\builtin.sql", "original_file_path": "tests\\generic\\builtin.sql", "unique_id": "macro.dbt.test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.8608308, "supported_languages": null}, "macro.dbt.test_accepted_values": {"name": "test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "tests\\generic\\builtin.sql", "original_file_path": "tests\\generic\\builtin.sql", "unique_id": "macro.dbt.test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.861831, "supported_languages": null}, "macro.dbt.test_relationships": {"name": "test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "tests\\generic\\builtin.sql", "original_file_path": "tests\\generic\\builtin.sql", "unique_id": "macro.dbt.test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1723502083.861831, "supported_languages": null}}, "docs": {"doc.dbt.__overview__": {"name": "__overview__", "resource_type": "doc", "package_name": "dbt", "path": "overview.md", "original_file_path": "docs\\overview.md", "unique_id": "doc.dbt.__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {}, "metrics": {}, "groups": {}, "selectors": {}, "disabled": {}, "parent_map": {"model.exp.dim_analfabetismo_funcional": ["source.exp.raw.DIM_ANALFABETISMO_FUNCIONAL"], "model.exp.dim_censo_educ_basica_desagregado_matricula_4": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2014", "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2015", "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2016", "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2017", "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2018", "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2019", "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2020"], "model.exp.dim_educ_bas_docentes_16": ["model.exp.dim_educ_bas_docentes_16_2014", "model.exp.dim_educ_bas_docentes_16_2015", "model.exp.dim_educ_bas_docentes_16_2016", "model.exp.dim_educ_bas_docentes_16_2017", "model.exp.dim_educ_bas_docentes_16_2018", "model.exp.dim_educ_bas_docentes_16_2019", "model.exp.dim_educ_bas_docentes_16_2020"], "model.exp.dim_educ_bas_docentes_16_2014": ["source.exp.raw.DIM_DOCENTES_CO_2014", "source.exp.raw.DIM_DOCENTES_NORDESTE_2014", "source.exp.raw.DIM_DOCENTES_NORTE_2014", "source.exp.raw.DIM_DOCENTES_SUDESTE_2014", "source.exp.raw.DIM_DOCENTES_SUL_2014"], "model.exp.dim_educ_bas_docentes_16_2015": ["source.exp.raw.DIM_DOCENTES_CO_2015", "source.exp.raw.DIM_DOCENTES_NORDESTE_2015", "source.exp.raw.DIM_DOCENTES_NORTE_2015", "source.exp.raw.DIM_DOCENTES_SUDESTE_2015", "source.exp.raw.DIM_DOCENTES_SUL_2015"], "model.exp.dim_educ_bas_docentes_16_2016": ["source.exp.raw.DIM_DOCENTES_CO_2016", "source.exp.raw.DIM_DOCENTES_NORDESTE_2016", "source.exp.raw.DIM_DOCENTES_NORTE_2016", "source.exp.raw.DIM_DOCENTES_SUDESTE_2016", "source.exp.raw.DIM_DOCENTES_SUL_2016"], "model.exp.dim_educ_bas_docentes_16_2017": ["source.exp.raw.DIM_DOCENTES_CO_2017", "source.exp.raw.DIM_DOCENTES_NORDESTE_2017", "source.exp.raw.DIM_DOCENTES_NORTE_2017", "source.exp.raw.DIM_DOCENTES_SUDESTE_2017", "source.exp.raw.DIM_DOCENTES_SUL_2017"], "model.exp.dim_educ_bas_docentes_16_2018": ["source.exp.raw.DIM_DOCENTES_CO_2018", "source.exp.raw.DIM_DOCENTES_NORDESTE_2018", "source.exp.raw.DIM_DOCENTES_NORTE_2018", "source.exp.raw.DIM_DOCENTES_SUDESTE_2018", "source.exp.raw.DIM_DOCENTES_SUL_2018"], "model.exp.dim_educ_bas_docentes_16_2019": ["source.exp.raw.DIM_DOCENTES_CO_2019", "source.exp.raw.DIM_DOCENTES_NORDESTE_2019", "source.exp.raw.DIM_DOCENTES_NORTE_2019", "source.exp.raw.DIM_DOCENTES_SUDESTE_2019", "source.exp.raw.DIM_DOCENTES_SUL_2019"], "model.exp.dim_educ_bas_docentes_16_2020": ["source.exp.raw.DIM_DOCENTES_CO_2020", "source.exp.raw.DIM_DOCENTES_NORDESTE_2020", "source.exp.raw.DIM_DOCENTES_NORTE_2020", "source.exp.raw.DIM_DOCENTES_SUDESTE_2020", "source.exp.raw.DIM_DOCENTES_SUL_2020"], "model.exp.dim_educ_bas_escola_19": ["source.exp.raw.DIM_EDUC_BASICA_ESCOLA_2019", "source.exp.raw.DIM_EDUC_BASICA_ESCOLA_2020"], "model.exp.dim_educ_bas_gestor_19": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_GESTOR_2019", "source.exp.raw.DIM_CENSO_EDUC_BASICA_GESTOR_2020"], "model.exp.dim_educ_sup_12": ["source.exp.raw.DIM_EDUC_SUP_MATRICULA_2009", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2010", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2011", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2012", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2013", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2014", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2015", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2016", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2017", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2018", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2019", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2020", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2021", "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2022"], "model.exp.dim_educ_sup_13": ["source.exp.raw.DIM_EDUC_SUP_IES_2014", "source.exp.raw.DIM_EDUC_SUP_IES_2015", "source.exp.raw.DIM_EDUC_SUP_IES_2016", "source.exp.raw.DIM_EDUC_SUP_IES_2017", "source.exp.raw.DIM_EDUC_SUP_IES_2018", "source.exp.raw.DIM_EDUC_SUP_IES_2019", "source.exp.raw.DIM_EDUC_SUP_IES_2020", "source.exp.raw.DIM_EDUC_SUP_IES_2021", "source.exp.raw.DIM_EDUC_SUP_IES_2022"], "model.exp.dim_matricula_6a": ["source.exp.raw.DIM_MICRODADOS_ED_BASICA_2014", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2015", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2016", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2017", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2018", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2019", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2020", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2021"], "model.exp.dim_matricula_faixa_idade": ["source.exp.raw.DIM_MICRODADOS_ED_BASICA_2014", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2015", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2016", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2017", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2018", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2019", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2020", "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2021"], "model.exp.dim_siconfi_20": ["source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2013", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2014", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2015", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2016", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2017", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2018", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2019", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2020", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2021", "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2022"], "model.exp.dim_educ_bas_docentes_15": ["model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_15a_2019_2020", "model.exp.dim_educ_bas_docentes_15b_2014_to_2018", "model.exp.dim_educ_bas_docentes_15b_2019_2020", "model.exp.dim_educ_bas_docentes_15cd_2014_to_2018", "model.exp.dim_educ_bas_docentes_15cd_2019_2020"], "model.exp.dim_educ_bas_docentes_15a_2014_to_2018": ["source.exp.raw.DIM_CURSO_SUPERIOR", "source.exp.raw.DIM_CURSO_SUPERIOR", "source.exp.raw.DIM_CURSO_SUPERIOR", "source.exp.raw.DIM_DOCENTES_CO_2014", "source.exp.raw.DIM_DOCENTES_CO_2015", "source.exp.raw.DIM_DOCENTES_CO_2016", "source.exp.raw.DIM_DOCENTES_CO_2017", "source.exp.raw.DIM_DOCENTES_CO_2018", "source.exp.raw.DIM_DOCENTES_NORDESTE_2014", "source.exp.raw.DIM_DOCENTES_NORDESTE_2015", "source.exp.raw.DIM_DOCENTES_NORDESTE_2016", "source.exp.raw.DIM_DOCENTES_NORDESTE_2017", "source.exp.raw.DIM_DOCENTES_NORDESTE_2018", "source.exp.raw.DIM_DOCENTES_NORTE_2014", "source.exp.raw.DIM_DOCENTES_NORTE_2015", "source.exp.raw.DIM_DOCENTES_NORTE_2016", "source.exp.raw.DIM_DOCENTES_NORTE_2017", "source.exp.raw.DIM_DOCENTES_NORTE_2018", "source.exp.raw.DIM_DOCENTES_SUDESTE_2014", "source.exp.raw.DIM_DOCENTES_SUDESTE_2015", "source.exp.raw.DIM_DOCENTES_SUDESTE_2016", "source.exp.raw.DIM_DOCENTES_SUDESTE_2017", "source.exp.raw.DIM_DOCENTES_SUDESTE_2018", "source.exp.raw.DIM_DOCENTES_SUL_2014", "source.exp.raw.DIM_DOCENTES_SUL_2015", "source.exp.raw.DIM_DOCENTES_SUL_2016", "source.exp.raw.DIM_DOCENTES_SUL_2017", "source.exp.raw.DIM_DOCENTES_SUL_2018", "source.exp.raw.DIM_FORMACAO_ADEQUADA", "source.exp.raw.DIM_FORMACAO_ADEQUADA"], "model.exp.dim_educ_bas_docentes_15a_2019_2020": ["source.exp.raw.DIM_COMPLEMENTACAO_PEDAGOGICA", "source.exp.raw.DIM_CURSO_SUPERIOR", "source.exp.raw.DIM_CURSO_SUPERIOR", "source.exp.raw.DIM_CURSO_SUPERIOR", "source.exp.raw.DIM_DOCENTES_CO_2019", "source.exp.raw.DIM_DOCENTES_CO_2020", "source.exp.raw.DIM_DOCENTES_NORDESTE_2019", "source.exp.raw.DIM_DOCENTES_NORDESTE_2020", "source.exp.raw.DIM_DOCENTES_NORTE_2019", "source.exp.raw.DIM_DOCENTES_NORTE_2020", "source.exp.raw.DIM_DOCENTES_SUDESTE_2019", "source.exp.raw.DIM_DOCENTES_SUDESTE_2020", "source.exp.raw.DIM_DOCENTES_SUL_2019", "source.exp.raw.DIM_DOCENTES_SUL_2020", "source.exp.raw.DIM_FORMACAO_ADEQUADA", "source.exp.raw.DIM_FORMACAO_ADEQUADA"], "model.exp.dim_educ_bas_docentes_15b_2014_to_2018": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "source.exp.raw.DIM_CURSO_SUPERIOR", "source.exp.raw.DIM_FORMACAO_ADEQUADA"], "model.exp.dim_educ_bas_docentes_15b_2019_2020": ["source.exp.raw.DIM_CURSO_SUPERIOR", "source.exp.raw.DIM_FORMACAO_ADEQUADA"], "model.exp.dim_educ_bas_docentes_15cd_2014_to_2018": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "source.exp.raw.DIM_CURSO_SUPERIOR", "source.exp.raw.DIM_FORMACAO_ADEQUADA"], "model.exp.dim_educ_bas_docentes_15cd_2019_2020": ["model.exp.dim_educ_bas_docentes_15_2019_2020_reshape_disc", "source.exp.raw.DIM_CURSO_SUPERIOR", "source.exp.raw.DIM_FORMACAO_ADEQUADA"], "model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc": ["source.exp.raw.DIM_DOCENTES_CO_2014", "source.exp.raw.DIM_DOCENTES_CO_2015", "source.exp.raw.DIM_DOCENTES_CO_2016", "source.exp.raw.DIM_DOCENTES_CO_2017", "source.exp.raw.DIM_DOCENTES_CO_2018", "source.exp.raw.DIM_DOCENTES_NORDESTE_2014", "source.exp.raw.DIM_DOCENTES_NORDESTE_2015", "source.exp.raw.DIM_DOCENTES_NORDESTE_2016", "source.exp.raw.DIM_DOCENTES_NORDESTE_2017", "source.exp.raw.DIM_DOCENTES_NORDESTE_2018", "source.exp.raw.DIM_DOCENTES_NORTE_2014", "source.exp.raw.DIM_DOCENTES_NORTE_2015", "source.exp.raw.DIM_DOCENTES_NORTE_2016", "source.exp.raw.DIM_DOCENTES_NORTE_2017", "source.exp.raw.DIM_DOCENTES_NORTE_2018", "source.exp.raw.DIM_DOCENTES_SUDESTE_2014", "source.exp.raw.DIM_DOCENTES_SUDESTE_2015", "source.exp.raw.DIM_DOCENTES_SUDESTE_2016", "source.exp.raw.DIM_DOCENTES_SUDESTE_2017", "source.exp.raw.DIM_DOCENTES_SUDESTE_2018", "source.exp.raw.DIM_DOCENTES_SUL_2014", "source.exp.raw.DIM_DOCENTES_SUL_2015", "source.exp.raw.DIM_DOCENTES_SUL_2016", "source.exp.raw.DIM_DOCENTES_SUL_2017", "source.exp.raw.DIM_DOCENTES_SUL_2018"], "model.exp.dim_educ_bas_docentes_15_2019_2020_reshape_disc": ["source.exp.raw.DIM_DOCENTES_CO_2019", "source.exp.raw.DIM_DOCENTES_CO_2020", "source.exp.raw.DIM_DOCENTES_NORDESTE_2019", "source.exp.raw.DIM_DOCENTES_NORDESTE_2020", "source.exp.raw.DIM_DOCENTES_NORTE_2019", "source.exp.raw.DIM_DOCENTES_NORTE_2020", "source.exp.raw.DIM_DOCENTES_SUDESTE_2019", "source.exp.raw.DIM_DOCENTES_SUDESTE_2020", "source.exp.raw.DIM_DOCENTES_SUL_2019", "source.exp.raw.DIM_DOCENTES_SUL_2020"], "model.exp.dim_educ_bas_docentes_15_group": ["model.exp.dim_educ_bas_docentes_15"], "model.exp.fct_projecao_populacional": ["source.exp.raw.DIM_ESTIMATIVA_DA_POPULACAO_POR_ANO_MUNICIPIO_IDADE"], "model.exp.info_estados": ["source.exp.raw.DIM_ESTADOS", "source.exp.raw.DIM_ESTADOS_AREA", "source.exp.raw.DIM_ESTADOS_CAPITAIS", "source.exp.raw.DIM_ESTADOS_CENSO_ATLAS_2013"], "model.exp.info_municipios": ["source.exp.raw.DIM_ESTADOS", "source.exp.raw.DIM_MUNICIPIOS_MALHA_2022"], "model.exp.dim_matricula_ept": ["model.exp.matricula_ept_2014", "model.exp.matricula_ept_2015", "model.exp.matricula_ept_2016", "model.exp.matricula_ept_2017", "model.exp.matricula_ept_2018", "model.exp.matricula_ept_2019", "model.exp.matricula_ept_2020"], "model.exp.matricula_ept_2014": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2014"], "model.exp.matricula_ept_2015": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2015"], "model.exp.matricula_ept_2016": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2016"], "model.exp.matricula_ept_2017": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2017"], "model.exp.matricula_ept_2018": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2018"], "model.exp.matricula_ept_2019": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2019"], "model.exp.matricula_ept_2020": ["source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2020"], "model.exp.dim_tce_es_educacao": ["model.exp.info_municipios", "source.exp.raw.DIM_TCE_ES_DESPESAS_2014", "source.exp.raw.DIM_TCE_ES_DESPESAS_2015", "source.exp.raw.DIM_TCE_ES_DESPESAS_2016", "source.exp.raw.DIM_TCE_ES_DESPESAS_2017", "source.exp.raw.DIM_TCE_ES_DESPESAS_2018", "source.exp.raw.DIM_TCE_ES_DESPESAS_2019", "source.exp.raw.DIM_TCE_ES_DESPESAS_2020", "source.exp.raw.DIM_TCE_ES_DESPESAS_2021", "source.exp.raw.DIM_TCE_ES_DESPESAS_2022", "source.exp.raw.DIM_TCE_ES_DESPESAS_2023"], "model.exp.dim_tce_mg_educacao": ["source.exp.raw.DIM_TCE_MG_EDUCACAO"], "model.exp.dim_tce_pe_educacao": ["source.exp.raw.DIM_TCE_PE_DESPESAS_2014", "source.exp.raw.DIM_TCE_PE_DESPESAS_2015", "source.exp.raw.DIM_TCE_PE_DESPESAS_2016", "source.exp.raw.DIM_TCE_PE_DESPESAS_2017", "source.exp.raw.DIM_TCE_PE_DESPESAS_2018", "source.exp.raw.DIM_TCE_PE_DESPESAS_2019", "source.exp.raw.DIM_TCE_PE_DESPESAS_2020", "source.exp.raw.DIM_TCE_PE_DESPESAS_2021", "source.exp.raw.DIM_TCE_PE_DESPESAS_2022", "source.exp.raw.DIM_TCE_PE_DESPESAS_2023", "source.exp.raw.DIM_TCE_PE_MUNICIPIO"], "model.exp.dim_tce_sp_educacao": ["source.exp.raw.DIM_TCE_SP_DESPESAS_2014", "source.exp.raw.DIM_TCE_SP_DESPESAS_2015", "source.exp.raw.DIM_TCE_SP_DESPESAS_2016", "source.exp.raw.DIM_TCE_SP_DESPESAS_2017", "source.exp.raw.DIM_TCE_SP_DESPESAS_2018", "source.exp.raw.DIM_TCE_SP_DESPESAS_2019", "source.exp.raw.DIM_TCE_SP_DESPESAS_2020", "source.exp.raw.DIM_TCE_SP_DESPESAS_2021", "source.exp.raw.DIM_TCE_SP_DESPESAS_2022", "source.exp.raw.DIM_TCE_SP_DESPESAS_2023"], "model.exp.dim_estadic_educ": ["source.exp.raw.DIM_ESTADIC_2014", "source.exp.raw.DIM_ESTADIC_2018", "source.exp.raw.DIM_ESTADIC_2021"], "model.exp.dim_ideb_estadual": ["source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_FINAIS_2019", "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_FINAIS_2021", "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2019", "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2021", "source.exp.raw.DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2019", "source.exp.raw.DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2021"], "model.exp.dim_ideb_municipal": ["source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2019", "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2021", "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2019", "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2021", "source.exp.raw.DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2019", "source.exp.raw.DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2021"], "model.exp.dim_munic_educ": ["source.exp.raw.DIM_MUNIC_EDUC_2014", "source.exp.raw.DIM_MUNIC_EDUC_2018", "source.exp.raw.DIM_MUNIC_EDUC_2021"], "model.exp.dim_rais_17": ["model.exp.info_municipios", "source.exp.raw.DIM_RAIS_PROFESSORES_PUBLICOS_GRADUADOS_2014_2022", "source.exp.raw.DIM_RAIS_PROFISSIONAIS_GRADUADOS_2014_2022"], "model.exp.fct_meta_um": ["model.exp.dim_matricula_faixa_idade", "model.exp.fct_projecao_populacional"], "model.exp.fct_meta_dois": ["model.exp.dim_matricula_faixa_idade", "model.exp.fct_projecao_populacional"], "model.exp.fct_meta_tres": ["model.exp.dim_matricula_faixa_idade", "model.exp.fct_projecao_populacional"], "model.exp.fct_meta_quatro": ["model.exp.dim_censo_educ_basica_desagregado_matricula_4", "model.exp.info_municipios"], "model.exp.fct_meta_seis": ["model.exp.dim_matricula_6a", "model.exp.info_municipios", "source.exp.staging.FCT_ESCOLAS_PUBLICAS_INTEGRAL_6B"], "model.exp.fct_meta_sete_estadual": ["model.exp.dim_ideb_estadual"], "model.exp.fct_meta_sete_municipal": ["model.exp.dim_ideb_municipal", "model.exp.info_municipios"], "model.exp.fct_meta_nove": ["model.exp.dim_analfabetismo_funcional"], "model.exp.fct_meta_dez": ["model.exp.info_municipios", "source.exp.staging.FCT_MATRICULAS_EJA_10A"], "model.exp.fct_meta_onze": ["model.exp.info_municipios", "source.exp.staging.FCT_MATRICULAS_EPT"], "model.exp.fct_meta_doze": ["model.exp.dim_educ_sup_12", "model.exp.fct_projecao_populacional", "model.exp.info_municipios"], "model.exp.fct_meta_treze": ["model.exp.dim_educ_sup_13", "model.exp.info_municipios"], "model.exp.fct_meta_quatorze": ["model.exp.info_municipios", "source.exp.raw.DIM_GEOCAPES_TITULACAO_2022"], "model.exp.fct_meta_quinze": ["model.exp.dim_educ_bas_docentes_15_group", "model.exp.info_municipios"], "model.exp.fct_meta_dezesseis": ["model.exp.dim_educ_bas_docentes_16", "model.exp.info_municipios"], "model.exp.fcf_meta_dezessete": ["model.exp.dim_rais_17", "model.exp.info_municipios"], "model.exp.fct_meta_dezoito_estadic": ["model.exp.dim_estadic_educ"], "model.exp.fct_meta_dezoito_munic": ["model.exp.dim_munic_educ", "model.exp.info_municipios"], "model.exp.fct_meta_dezenove_estadic": ["model.exp.dim_estadic_educ"], "model.exp.fct_meta_dezenove_munic": ["model.exp.dim_educ_bas_escola_19", "model.exp.dim_educ_bas_gestor_19", "model.exp.dim_munic_educ", "model.exp.info_municipios"], "model.exp.fct_meta_vinte": ["model.exp.dim_siconfi_20", "model.exp.dim_tce_es_educacao", "model.exp.dim_tce_mg_educacao", "model.exp.dim_tce_pe_educacao", "model.exp.dim_tce_sp_educacao", "model.exp.info_municipios", "source.exp.raw.DIM_MUNICIPIOS_PIB"], "test.exp.accepted_values_dim_ideb_municipal_ORIGEM__anos_iniciais__anos_finais__ensino_medio.f1b92194d5": ["model.exp.dim_ideb_municipal"], "test.exp.accepted_values_fct_meta_um_INDICADOR__1A__1B.1c6eb010c0": ["model.exp.fct_meta_um"], "test.exp.accepted_values_fct_meta_dois_INDICADOR__2A.9ca3ea2095": ["model.exp.fct_meta_dois"], "test.exp.accepted_values_fct_meta_tres_INDICADOR__3A.c10359b903": ["model.exp.fct_meta_tres"], "test.exp.accepted_values_fct_meta_quatro_INDICADOR__4B__4C.4f558b6954": ["model.exp.fct_meta_quatro"], "test.exp.accepted_values_fct_meta_seis_INDICADOR__6A__6B.a34f59227a": ["model.exp.fct_meta_seis"], "test.exp.accepted_values_fct_meta_sete_municipal_INDICADOR__7A__7B__7C.d41ff7f17a": ["model.exp.fct_meta_sete_municipal"], "test.exp.accepted_values_fct_meta_sete_municipal_REDE__MUNICIPAL__P_BLICA.a6286cdb86": ["model.exp.fct_meta_sete_municipal"], "test.exp.accepted_values_fct_meta_sete_estadual_INDICADOR__7A__7B__7C.f34607867a": ["model.exp.fct_meta_sete_estadual"], "test.exp.accepted_values_fct_meta_sete_estadual_REDE__ESTADUAL__P_BLICA.24fc73bb28": ["model.exp.fct_meta_sete_estadual"], "test.exp.accepted_values_fct_meta_nove_INDICADOR__9A__9B.838ebf268c": ["model.exp.fct_meta_nove"], "test.exp.accepted_values_fct_meta_dez_INDICADOR__10A.15c25612b6": ["model.exp.fct_meta_dez"], "test.exp.accepted_values_fct_meta_onze_INDICADOR__11A.add946633c": ["model.exp.fct_meta_onze"], "test.exp.accepted_values_fct_meta_doze_INDICADOR__12A__12B__12C.2411090836": ["model.exp.fct_meta_doze"], "test.exp.accepted_values_fct_meta_treze_INDICADOR__13A__13B.8ba70a1972": ["model.exp.fct_meta_treze"], "test.exp.accepted_values_fct_meta_quatorze_INDICADOR__14A__14B.16062c7594": ["model.exp.fct_meta_quatorze"], "test.exp.accepted_values_fct_meta_quatorze_GRAU_ACADEMICO__MESTRADO__DOUTORADO.ae62a78d3c": ["model.exp.fct_meta_quatorze"], "test.exp.accepted_values_fct_meta_quinze_INDICADOR__15A__15B__15C__15D.94884ed1aa": ["model.exp.fct_meta_quinze"], "test.exp.accepted_values_fct_meta_dezesseis_INDICADOR__16A__16B.f9467f38c0": ["model.exp.fct_meta_dezesseis"], "test.exp.accepted_values_fcf_meta_dezessete_INDICADOR__17A.409555fa86": ["model.exp.fcf_meta_dezessete"], "test.exp.accepted_values_fct_meta_vinte_INDICADOR__20A__20B.3e774771a8": ["model.exp.fct_meta_vinte"], "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2014": [], "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2015": [], "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2016": [], "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2017": [], "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2018": [], "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2019": [], "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2020": [], "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2021": [], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2009": [], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2010": [], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2011": [], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2012": [], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2013": [], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2014": [], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2015": [], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2016": [], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2017": [], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2018": [], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2019": [], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2020": [], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2021": [], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2022": [], "source.exp.raw.DIM_EDUC_SUP_IES_2009": [], "source.exp.raw.DIM_EDUC_SUP_IES_2010": [], "source.exp.raw.DIM_EDUC_SUP_IES_2011": [], "source.exp.raw.DIM_EDUC_SUP_IES_2012": [], "source.exp.raw.DIM_EDUC_SUP_IES_2013": [], "source.exp.raw.DIM_EDUC_SUP_IES_2014": [], "source.exp.raw.DIM_EDUC_SUP_IES_2015": [], "source.exp.raw.DIM_EDUC_SUP_IES_2016": [], "source.exp.raw.DIM_EDUC_SUP_IES_2017": [], "source.exp.raw.DIM_EDUC_SUP_IES_2018": [], "source.exp.raw.DIM_EDUC_SUP_IES_2019": [], "source.exp.raw.DIM_EDUC_SUP_IES_2020": [], "source.exp.raw.DIM_EDUC_SUP_IES_2021": [], "source.exp.raw.DIM_EDUC_SUP_IES_2022": [], "source.exp.raw.DIM_GEOCAPES_TITULACAO_2022": [], "source.exp.raw.DIM_DOCENTES_CO_2013": [], "source.exp.raw.DIM_DOCENTES_CO_2014": [], "source.exp.raw.DIM_DOCENTES_CO_2015": [], "source.exp.raw.DIM_DOCENTES_CO_2016": [], "source.exp.raw.DIM_DOCENTES_CO_2017": [], "source.exp.raw.DIM_DOCENTES_CO_2018": [], "source.exp.raw.DIM_DOCENTES_CO_2019": [], "source.exp.raw.DIM_DOCENTES_CO_2020": [], "source.exp.raw.DIM_DOCENTES_NORDESTE_2013": [], "source.exp.raw.DIM_DOCENTES_NORDESTE_2014": [], "source.exp.raw.DIM_DOCENTES_NORDESTE_2015": [], "source.exp.raw.DIM_DOCENTES_NORDESTE_2016": [], "source.exp.raw.DIM_DOCENTES_NORDESTE_2017": [], "source.exp.raw.DIM_DOCENTES_NORDESTE_2018": [], "source.exp.raw.DIM_DOCENTES_NORDESTE_2019": [], "source.exp.raw.DIM_DOCENTES_NORDESTE_2020": [], "source.exp.raw.DIM_DOCENTES_NORTE_2013": [], "source.exp.raw.DIM_DOCENTES_NORTE_2014": [], "source.exp.raw.DIM_DOCENTES_NORTE_2015": [], "source.exp.raw.DIM_DOCENTES_NORTE_2016": [], "source.exp.raw.DIM_DOCENTES_NORTE_2017": [], "source.exp.raw.DIM_DOCENTES_NORTE_2018": [], "source.exp.raw.DIM_DOCENTES_NORTE_2019": [], "source.exp.raw.DIM_DOCENTES_NORTE_2020": [], "source.exp.raw.DIM_DOCENTES_SUDESTE_2013": [], "source.exp.raw.DIM_DOCENTES_SUDESTE_2014": [], "source.exp.raw.DIM_DOCENTES_SUDESTE_2015": [], "source.exp.raw.DIM_DOCENTES_SUDESTE_2016": [], "source.exp.raw.DIM_DOCENTES_SUDESTE_2017": [], "source.exp.raw.DIM_DOCENTES_SUDESTE_2018": [], "source.exp.raw.DIM_DOCENTES_SUDESTE_2019": [], "source.exp.raw.DIM_DOCENTES_SUDESTE_2020": [], "source.exp.raw.DIM_DOCENTES_SUL_2013": [], "source.exp.raw.DIM_DOCENTES_SUL_2014": [], "source.exp.raw.DIM_DOCENTES_SUL_2015": [], "source.exp.raw.DIM_DOCENTES_SUL_2016": [], "source.exp.raw.DIM_DOCENTES_SUL_2017": [], "source.exp.raw.DIM_DOCENTES_SUL_2018": [], "source.exp.raw.DIM_DOCENTES_SUL_2019": [], "source.exp.raw.DIM_DOCENTES_SUL_2020": [], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2013": [], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2014": [], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2015": [], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2016": [], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2017": [], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2018": [], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2019": [], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2020": [], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2021": [], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2022": [], "source.exp.raw.DIM_MUNICIPIOS_PIB": [], "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2019": [], "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2021": [], "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2019": [], "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2021": [], "source.exp.raw.DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2019": [], "source.exp.raw.DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2021": [], "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2019": [], "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2021": [], "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_FINAIS_2019": [], "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_FINAIS_2021": [], "source.exp.raw.DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2019": [], "source.exp.raw.DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2021": [], "source.exp.raw.DIM_MUNIC_EDUC_2014": [], "source.exp.raw.DIM_MUNIC_EDUC_2018": [], "source.exp.raw.DIM_MUNIC_EDUC_2021": [], "source.exp.raw.DIM_EDUC_BASICA_ESCOLA_2019": [], "source.exp.raw.DIM_EDUC_BASICA_ESCOLA_2020": [], "source.exp.raw.DIM_CENSO_EDUC_BASICA_GESTOR_2019": [], "source.exp.raw.DIM_CENSO_EDUC_BASICA_GESTOR_2020": [], "source.exp.raw.DIM_ESTADIC_2014": [], "source.exp.raw.DIM_ESTADIC_2018": [], "source.exp.raw.DIM_ESTADIC_2021": [], "source.exp.raw.DIM_FORMACAO_ADEQUADA": [], "source.exp.raw.DIM_CURSO_SUPERIOR": [], "source.exp.raw.DIM_COMPLEMENTACAO_PEDAGOGICA": [], "source.exp.raw.DIM_RAIS_PROFESSORES_PUBLICOS_GRADUADOS_2014_2022": [], "source.exp.raw.DIM_RAIS_PROFISSIONAIS_GRADUADOS_2014_2022": [], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2014": [], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2015": [], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2016": [], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2017": [], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2018": [], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2019": [], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2020": [], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2014": [], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2015": [], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2016": [], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2017": [], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2018": [], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2019": [], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2020": [], "source.exp.raw.DIM_ANALFABETISMO_FUNCIONAL": [], "source.exp.raw.DIM_TCE_PE_MUNICIPIO": [], "source.exp.raw.DIM_TCE_PE_DESPESAS_2014": [], "source.exp.raw.DIM_TCE_PE_DESPESAS_2015": [], "source.exp.raw.DIM_TCE_PE_DESPESAS_2016": [], "source.exp.raw.DIM_TCE_PE_DESPESAS_2017": [], "source.exp.raw.DIM_TCE_PE_DESPESAS_2018": [], "source.exp.raw.DIM_TCE_PE_DESPESAS_2019": [], "source.exp.raw.DIM_TCE_PE_DESPESAS_2020": [], "source.exp.raw.DIM_TCE_PE_DESPESAS_2021": [], "source.exp.raw.DIM_TCE_PE_DESPESAS_2022": [], "source.exp.raw.DIM_TCE_PE_DESPESAS_2023": [], "source.exp.raw.DIM_TCE_SP_DESPESAS_2014": [], "source.exp.raw.DIM_TCE_SP_DESPESAS_2015": [], "source.exp.raw.DIM_TCE_SP_DESPESAS_2016": [], "source.exp.raw.DIM_TCE_SP_DESPESAS_2017": [], "source.exp.raw.DIM_TCE_SP_DESPESAS_2018": [], "source.exp.raw.DIM_TCE_SP_DESPESAS_2019": [], "source.exp.raw.DIM_TCE_SP_DESPESAS_2020": [], "source.exp.raw.DIM_TCE_SP_DESPESAS_2021": [], "source.exp.raw.DIM_TCE_SP_DESPESAS_2022": [], "source.exp.raw.DIM_TCE_SP_DESPESAS_2023": [], "source.exp.raw.DIM_TCE_MG_EDUCACAO": [], "source.exp.raw.DIM_TCE_ES_DESPESAS_2014": [], "source.exp.raw.DIM_TCE_ES_DESPESAS_2015": [], "source.exp.raw.DIM_TCE_ES_DESPESAS_2016": [], "source.exp.raw.DIM_TCE_ES_DESPESAS_2017": [], "source.exp.raw.DIM_TCE_ES_DESPESAS_2018": [], "source.exp.raw.DIM_TCE_ES_DESPESAS_2019": [], "source.exp.raw.DIM_TCE_ES_DESPESAS_2020": [], "source.exp.raw.DIM_TCE_ES_DESPESAS_2021": [], "source.exp.raw.DIM_TCE_ES_DESPESAS_2022": [], "source.exp.raw.DIM_TCE_ES_DESPESAS_2023": [], "source.exp.staging.FCT_ESCOLAS_PUBLICAS_INTEGRAL_6B": [], "source.exp.staging.FCT_MATRICULAS_EPT": [], "source.exp.staging.FCT_MATRICULAS_EJA_10A": [], "source.exp.raw.DIM_ESTIMATIVA_DA_POPULACAO_POR_ANO_MUNICIPIO_IDADE": [], "source.exp.raw.DIM_ESTADOS": [], "source.exp.raw.DIM_ESTADOS_AREA": [], "source.exp.raw.DIM_ESTADOS_CAPITAIS": [], "source.exp.raw.DIM_ESTADOS_CENSO_ATLAS_2013": [], "source.exp.raw.DIM_MUNICIPIOS_MALHA_2022": []}, "child_map": {"model.exp.dim_analfabetismo_funcional": ["model.exp.fct_meta_nove"], "model.exp.dim_censo_educ_basica_desagregado_matricula_4": ["model.exp.fct_meta_quatro"], "model.exp.dim_educ_bas_docentes_16": ["model.exp.fct_meta_dezesseis"], "model.exp.dim_educ_bas_docentes_16_2014": ["model.exp.dim_educ_bas_docentes_16"], "model.exp.dim_educ_bas_docentes_16_2015": ["model.exp.dim_educ_bas_docentes_16"], "model.exp.dim_educ_bas_docentes_16_2016": ["model.exp.dim_educ_bas_docentes_16"], "model.exp.dim_educ_bas_docentes_16_2017": ["model.exp.dim_educ_bas_docentes_16"], "model.exp.dim_educ_bas_docentes_16_2018": ["model.exp.dim_educ_bas_docentes_16"], "model.exp.dim_educ_bas_docentes_16_2019": ["model.exp.dim_educ_bas_docentes_16"], "model.exp.dim_educ_bas_docentes_16_2020": ["model.exp.dim_educ_bas_docentes_16"], "model.exp.dim_educ_bas_escola_19": ["model.exp.fct_meta_dezenove_munic"], "model.exp.dim_educ_bas_gestor_19": ["model.exp.fct_meta_dezenove_munic"], "model.exp.dim_educ_sup_12": ["model.exp.fct_meta_doze"], "model.exp.dim_educ_sup_13": ["model.exp.fct_meta_treze"], "model.exp.dim_matricula_6a": ["model.exp.fct_meta_seis"], "model.exp.dim_matricula_faixa_idade": ["model.exp.fct_meta_dois", "model.exp.fct_meta_tres", "model.exp.fct_meta_um"], "model.exp.dim_siconfi_20": ["model.exp.fct_meta_vinte"], "model.exp.dim_educ_bas_docentes_15": ["model.exp.dim_educ_bas_docentes_15_group"], "model.exp.dim_educ_bas_docentes_15a_2014_to_2018": ["model.exp.dim_educ_bas_docentes_15"], "model.exp.dim_educ_bas_docentes_15a_2019_2020": ["model.exp.dim_educ_bas_docentes_15"], "model.exp.dim_educ_bas_docentes_15b_2014_to_2018": ["model.exp.dim_educ_bas_docentes_15"], "model.exp.dim_educ_bas_docentes_15b_2019_2020": ["model.exp.dim_educ_bas_docentes_15"], "model.exp.dim_educ_bas_docentes_15cd_2014_to_2018": ["model.exp.dim_educ_bas_docentes_15"], "model.exp.dim_educ_bas_docentes_15cd_2019_2020": ["model.exp.dim_educ_bas_docentes_15"], "model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc": ["model.exp.dim_educ_bas_docentes_15b_2014_to_2018", "model.exp.dim_educ_bas_docentes_15cd_2014_to_2018"], "model.exp.dim_educ_bas_docentes_15_2019_2020_reshape_disc": ["model.exp.dim_educ_bas_docentes_15cd_2019_2020"], "model.exp.dim_educ_bas_docentes_15_group": ["model.exp.fct_meta_quinze"], "model.exp.fct_projecao_populacional": ["model.exp.fct_meta_dois", "model.exp.fct_meta_doze", "model.exp.fct_meta_tres", "model.exp.fct_meta_um"], "model.exp.info_estados": [], "model.exp.info_municipios": ["model.exp.dim_rais_17", "model.exp.dim_tce_es_educacao", "model.exp.fcf_meta_dezessete", "model.exp.fct_meta_dez", "model.exp.fct_meta_dezenove_munic", "model.exp.fct_meta_dezesseis", "model.exp.fct_meta_dezoito_munic", "model.exp.fct_meta_doze", "model.exp.fct_meta_onze", "model.exp.fct_meta_quatorze", "model.exp.fct_meta_quatro", "model.exp.fct_meta_quinze", "model.exp.fct_meta_seis", "model.exp.fct_meta_sete_municipal", "model.exp.fct_meta_treze", "model.exp.fct_meta_vinte"], "model.exp.dim_matricula_ept": [], "model.exp.matricula_ept_2014": ["model.exp.dim_matricula_ept"], "model.exp.matricula_ept_2015": ["model.exp.dim_matricula_ept"], "model.exp.matricula_ept_2016": ["model.exp.dim_matricula_ept"], "model.exp.matricula_ept_2017": ["model.exp.dim_matricula_ept"], "model.exp.matricula_ept_2018": ["model.exp.dim_matricula_ept"], "model.exp.matricula_ept_2019": ["model.exp.dim_matricula_ept"], "model.exp.matricula_ept_2020": ["model.exp.dim_matricula_ept"], "model.exp.dim_tce_es_educacao": ["model.exp.fct_meta_vinte"], "model.exp.dim_tce_mg_educacao": ["model.exp.fct_meta_vinte"], "model.exp.dim_tce_pe_educacao": ["model.exp.fct_meta_vinte"], "model.exp.dim_tce_sp_educacao": ["model.exp.fct_meta_vinte"], "model.exp.dim_estadic_educ": ["model.exp.fct_meta_dezenove_estadic", "model.exp.fct_meta_dezoito_estadic"], "model.exp.dim_ideb_estadual": ["model.exp.fct_meta_sete_estadual"], "model.exp.dim_ideb_municipal": ["model.exp.fct_meta_sete_municipal", "test.exp.accepted_values_dim_ideb_municipal_ORIGEM__anos_iniciais__anos_finais__ensino_medio.f1b92194d5"], "model.exp.dim_munic_educ": ["model.exp.fct_meta_dezenove_munic", "model.exp.fct_meta_dezoito_munic"], "model.exp.dim_rais_17": ["model.exp.fcf_meta_dezessete"], "model.exp.fct_meta_um": ["test.exp.accepted_values_fct_meta_um_INDICADOR__1A__1B.1c6eb010c0"], "model.exp.fct_meta_dois": ["test.exp.accepted_values_fct_meta_dois_INDICADOR__2A.9ca3ea2095"], "model.exp.fct_meta_tres": ["test.exp.accepted_values_fct_meta_tres_INDICADOR__3A.c10359b903"], "model.exp.fct_meta_quatro": ["test.exp.accepted_values_fct_meta_quatro_INDICADOR__4B__4C.4f558b6954"], "model.exp.fct_meta_seis": ["test.exp.accepted_values_fct_meta_seis_INDICADOR__6A__6B.a34f59227a"], "model.exp.fct_meta_sete_estadual": ["test.exp.accepted_values_fct_meta_sete_estadual_INDICADOR__7A__7B__7C.f34607867a", "test.exp.accepted_values_fct_meta_sete_estadual_REDE__ESTADUAL__P_BLICA.24fc73bb28"], "model.exp.fct_meta_sete_municipal": ["test.exp.accepted_values_fct_meta_sete_municipal_INDICADOR__7A__7B__7C.d41ff7f17a", "test.exp.accepted_values_fct_meta_sete_municipal_REDE__MUNICIPAL__P_BLICA.a6286cdb86"], "model.exp.fct_meta_nove": ["test.exp.accepted_values_fct_meta_nove_INDICADOR__9A__9B.838ebf268c"], "model.exp.fct_meta_dez": ["test.exp.accepted_values_fct_meta_dez_INDICADOR__10A.15c25612b6"], "model.exp.fct_meta_onze": ["test.exp.accepted_values_fct_meta_onze_INDICADOR__11A.add946633c"], "model.exp.fct_meta_doze": ["test.exp.accepted_values_fct_meta_doze_INDICADOR__12A__12B__12C.2411090836"], "model.exp.fct_meta_treze": ["test.exp.accepted_values_fct_meta_treze_INDICADOR__13A__13B.8ba70a1972"], "model.exp.fct_meta_quatorze": ["test.exp.accepted_values_fct_meta_quatorze_GRAU_ACADEMICO__MESTRADO__DOUTORADO.ae62a78d3c", "test.exp.accepted_values_fct_meta_quatorze_INDICADOR__14A__14B.16062c7594"], "model.exp.fct_meta_quinze": ["test.exp.accepted_values_fct_meta_quinze_INDICADOR__15A__15B__15C__15D.94884ed1aa"], "model.exp.fct_meta_dezesseis": ["test.exp.accepted_values_fct_meta_dezesseis_INDICADOR__16A__16B.f9467f38c0"], "model.exp.fcf_meta_dezessete": ["test.exp.accepted_values_fcf_meta_dezessete_INDICADOR__17A.409555fa86"], "model.exp.fct_meta_dezoito_estadic": [], "model.exp.fct_meta_dezoito_munic": [], "model.exp.fct_meta_dezenove_estadic": [], "model.exp.fct_meta_dezenove_munic": [], "model.exp.fct_meta_vinte": ["test.exp.accepted_values_fct_meta_vinte_INDICADOR__20A__20B.3e774771a8"], "test.exp.accepted_values_dim_ideb_municipal_ORIGEM__anos_iniciais__anos_finais__ensino_medio.f1b92194d5": [], "test.exp.accepted_values_fct_meta_um_INDICADOR__1A__1B.1c6eb010c0": [], "test.exp.accepted_values_fct_meta_dois_INDICADOR__2A.9ca3ea2095": [], "test.exp.accepted_values_fct_meta_tres_INDICADOR__3A.c10359b903": [], "test.exp.accepted_values_fct_meta_quatro_INDICADOR__4B__4C.4f558b6954": [], "test.exp.accepted_values_fct_meta_seis_INDICADOR__6A__6B.a34f59227a": [], "test.exp.accepted_values_fct_meta_sete_municipal_INDICADOR__7A__7B__7C.d41ff7f17a": [], "test.exp.accepted_values_fct_meta_sete_municipal_REDE__MUNICIPAL__P_BLICA.a6286cdb86": [], "test.exp.accepted_values_fct_meta_sete_estadual_INDICADOR__7A__7B__7C.f34607867a": [], "test.exp.accepted_values_fct_meta_sete_estadual_REDE__ESTADUAL__P_BLICA.24fc73bb28": [], "test.exp.accepted_values_fct_meta_nove_INDICADOR__9A__9B.838ebf268c": [], "test.exp.accepted_values_fct_meta_dez_INDICADOR__10A.15c25612b6": [], "test.exp.accepted_values_fct_meta_onze_INDICADOR__11A.add946633c": [], "test.exp.accepted_values_fct_meta_doze_INDICADOR__12A__12B__12C.2411090836": [], "test.exp.accepted_values_fct_meta_treze_INDICADOR__13A__13B.8ba70a1972": [], "test.exp.accepted_values_fct_meta_quatorze_INDICADOR__14A__14B.16062c7594": [], "test.exp.accepted_values_fct_meta_quatorze_GRAU_ACADEMICO__MESTRADO__DOUTORADO.ae62a78d3c": [], "test.exp.accepted_values_fct_meta_quinze_INDICADOR__15A__15B__15C__15D.94884ed1aa": [], "test.exp.accepted_values_fct_meta_dezesseis_INDICADOR__16A__16B.f9467f38c0": [], "test.exp.accepted_values_fcf_meta_dezessete_INDICADOR__17A.409555fa86": [], "test.exp.accepted_values_fct_meta_vinte_INDICADOR__20A__20B.3e774771a8": [], "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2014": ["model.exp.dim_matricula_6a", "model.exp.dim_matricula_faixa_idade"], "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2015": ["model.exp.dim_matricula_6a", "model.exp.dim_matricula_faixa_idade"], "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2016": ["model.exp.dim_matricula_6a", "model.exp.dim_matricula_faixa_idade"], "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2017": ["model.exp.dim_matricula_6a", "model.exp.dim_matricula_faixa_idade"], "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2018": ["model.exp.dim_matricula_6a", "model.exp.dim_matricula_faixa_idade"], "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2019": ["model.exp.dim_matricula_6a", "model.exp.dim_matricula_faixa_idade"], "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2020": ["model.exp.dim_matricula_6a", "model.exp.dim_matricula_faixa_idade"], "source.exp.raw.DIM_MICRODADOS_ED_BASICA_2021": ["model.exp.dim_matricula_6a", "model.exp.dim_matricula_faixa_idade"], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2009": ["model.exp.dim_educ_sup_12"], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2010": ["model.exp.dim_educ_sup_12"], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2011": ["model.exp.dim_educ_sup_12"], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2012": ["model.exp.dim_educ_sup_12"], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2013": ["model.exp.dim_educ_sup_12"], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2014": ["model.exp.dim_educ_sup_12"], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2015": ["model.exp.dim_educ_sup_12"], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2016": ["model.exp.dim_educ_sup_12"], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2017": ["model.exp.dim_educ_sup_12"], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2018": ["model.exp.dim_educ_sup_12"], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2019": ["model.exp.dim_educ_sup_12"], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2020": ["model.exp.dim_educ_sup_12"], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2021": ["model.exp.dim_educ_sup_12"], "source.exp.raw.DIM_EDUC_SUP_MATRICULA_2022": ["model.exp.dim_educ_sup_12"], "source.exp.raw.DIM_EDUC_SUP_IES_2009": [], "source.exp.raw.DIM_EDUC_SUP_IES_2010": [], "source.exp.raw.DIM_EDUC_SUP_IES_2011": [], "source.exp.raw.DIM_EDUC_SUP_IES_2012": [], "source.exp.raw.DIM_EDUC_SUP_IES_2013": [], "source.exp.raw.DIM_EDUC_SUP_IES_2014": ["model.exp.dim_educ_sup_13"], "source.exp.raw.DIM_EDUC_SUP_IES_2015": ["model.exp.dim_educ_sup_13"], "source.exp.raw.DIM_EDUC_SUP_IES_2016": ["model.exp.dim_educ_sup_13"], "source.exp.raw.DIM_EDUC_SUP_IES_2017": ["model.exp.dim_educ_sup_13"], "source.exp.raw.DIM_EDUC_SUP_IES_2018": ["model.exp.dim_educ_sup_13"], "source.exp.raw.DIM_EDUC_SUP_IES_2019": ["model.exp.dim_educ_sup_13"], "source.exp.raw.DIM_EDUC_SUP_IES_2020": ["model.exp.dim_educ_sup_13"], "source.exp.raw.DIM_EDUC_SUP_IES_2021": ["model.exp.dim_educ_sup_13"], "source.exp.raw.DIM_EDUC_SUP_IES_2022": ["model.exp.dim_educ_sup_13"], "source.exp.raw.DIM_GEOCAPES_TITULACAO_2022": ["model.exp.fct_meta_quatorze"], "source.exp.raw.DIM_DOCENTES_CO_2013": [], "source.exp.raw.DIM_DOCENTES_CO_2014": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2014"], "source.exp.raw.DIM_DOCENTES_CO_2015": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2015"], "source.exp.raw.DIM_DOCENTES_CO_2016": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2016"], "source.exp.raw.DIM_DOCENTES_CO_2017": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2017"], "source.exp.raw.DIM_DOCENTES_CO_2018": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2018"], "source.exp.raw.DIM_DOCENTES_CO_2019": ["model.exp.dim_educ_bas_docentes_15_2019_2020_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2019_2020", "model.exp.dim_educ_bas_docentes_16_2019"], "source.exp.raw.DIM_DOCENTES_CO_2020": ["model.exp.dim_educ_bas_docentes_15_2019_2020_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2019_2020", "model.exp.dim_educ_bas_docentes_16_2020"], "source.exp.raw.DIM_DOCENTES_NORDESTE_2013": [], "source.exp.raw.DIM_DOCENTES_NORDESTE_2014": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2014"], "source.exp.raw.DIM_DOCENTES_NORDESTE_2015": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2015"], "source.exp.raw.DIM_DOCENTES_NORDESTE_2016": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2016"], "source.exp.raw.DIM_DOCENTES_NORDESTE_2017": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2017"], "source.exp.raw.DIM_DOCENTES_NORDESTE_2018": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2018"], "source.exp.raw.DIM_DOCENTES_NORDESTE_2019": ["model.exp.dim_educ_bas_docentes_15_2019_2020_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2019_2020", "model.exp.dim_educ_bas_docentes_16_2019"], "source.exp.raw.DIM_DOCENTES_NORDESTE_2020": ["model.exp.dim_educ_bas_docentes_15_2019_2020_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2019_2020", "model.exp.dim_educ_bas_docentes_16_2020"], "source.exp.raw.DIM_DOCENTES_NORTE_2013": [], "source.exp.raw.DIM_DOCENTES_NORTE_2014": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2014"], "source.exp.raw.DIM_DOCENTES_NORTE_2015": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2015"], "source.exp.raw.DIM_DOCENTES_NORTE_2016": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2016"], "source.exp.raw.DIM_DOCENTES_NORTE_2017": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2017"], "source.exp.raw.DIM_DOCENTES_NORTE_2018": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2018"], "source.exp.raw.DIM_DOCENTES_NORTE_2019": ["model.exp.dim_educ_bas_docentes_15_2019_2020_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2019_2020", "model.exp.dim_educ_bas_docentes_16_2019"], "source.exp.raw.DIM_DOCENTES_NORTE_2020": ["model.exp.dim_educ_bas_docentes_15_2019_2020_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2019_2020", "model.exp.dim_educ_bas_docentes_16_2020"], "source.exp.raw.DIM_DOCENTES_SUDESTE_2013": [], "source.exp.raw.DIM_DOCENTES_SUDESTE_2014": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2014"], "source.exp.raw.DIM_DOCENTES_SUDESTE_2015": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2015"], "source.exp.raw.DIM_DOCENTES_SUDESTE_2016": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2016"], "source.exp.raw.DIM_DOCENTES_SUDESTE_2017": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2017"], "source.exp.raw.DIM_DOCENTES_SUDESTE_2018": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2018"], "source.exp.raw.DIM_DOCENTES_SUDESTE_2019": ["model.exp.dim_educ_bas_docentes_15_2019_2020_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2019_2020", "model.exp.dim_educ_bas_docentes_16_2019"], "source.exp.raw.DIM_DOCENTES_SUDESTE_2020": ["model.exp.dim_educ_bas_docentes_15_2019_2020_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2019_2020", "model.exp.dim_educ_bas_docentes_16_2020"], "source.exp.raw.DIM_DOCENTES_SUL_2013": [], "source.exp.raw.DIM_DOCENTES_SUL_2014": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2014"], "source.exp.raw.DIM_DOCENTES_SUL_2015": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2015"], "source.exp.raw.DIM_DOCENTES_SUL_2016": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2016"], "source.exp.raw.DIM_DOCENTES_SUL_2017": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2017"], "source.exp.raw.DIM_DOCENTES_SUL_2018": ["model.exp.dim_educ_bas_docentes_15_2014_to_2018_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_16_2018"], "source.exp.raw.DIM_DOCENTES_SUL_2019": ["model.exp.dim_educ_bas_docentes_15_2019_2020_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2019_2020", "model.exp.dim_educ_bas_docentes_16_2019"], "source.exp.raw.DIM_DOCENTES_SUL_2020": ["model.exp.dim_educ_bas_docentes_15_2019_2020_reshape_disc", "model.exp.dim_educ_bas_docentes_15a_2019_2020", "model.exp.dim_educ_bas_docentes_16_2020"], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2013": ["model.exp.dim_siconfi_20"], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2014": ["model.exp.dim_siconfi_20"], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2015": ["model.exp.dim_siconfi_20"], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2016": ["model.exp.dim_siconfi_20"], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2017": ["model.exp.dim_siconfi_20"], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2018": ["model.exp.dim_siconfi_20"], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2019": ["model.exp.dim_siconfi_20"], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2020": ["model.exp.dim_siconfi_20"], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2021": ["model.exp.dim_siconfi_20"], "source.exp.raw.DIM_SICONFI_MUN_DESPESASPORFUNCAO_2022": ["model.exp.dim_siconfi_20"], "source.exp.raw.DIM_MUNICIPIOS_PIB": ["model.exp.fct_meta_vinte"], "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2019": ["model.exp.dim_ideb_municipal"], "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_INICIAIS_2021": ["model.exp.dim_ideb_municipal"], "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2019": ["model.exp.dim_ideb_municipal"], "source.exp.raw.DIM_IDEB_MUNICIPAL_ANOS_FINAIS_2021": ["model.exp.dim_ideb_municipal"], "source.exp.raw.DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2019": ["model.exp.dim_ideb_municipal"], "source.exp.raw.DIM_IDEB_MUNICIPAL_ENSINO_MEDIO_2021": ["model.exp.dim_ideb_municipal"], "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2019": ["model.exp.dim_ideb_estadual"], "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_INICIAIS_2021": ["model.exp.dim_ideb_estadual"], "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_FINAIS_2019": ["model.exp.dim_ideb_estadual"], "source.exp.raw.DIM_IDEB_ESTADUAL_ANOS_FINAIS_2021": ["model.exp.dim_ideb_estadual"], "source.exp.raw.DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2019": ["model.exp.dim_ideb_estadual"], "source.exp.raw.DIM_IDEB_ESTADUAL_ENSINO_MEDIO_2021": ["model.exp.dim_ideb_estadual"], "source.exp.raw.DIM_MUNIC_EDUC_2014": ["model.exp.dim_munic_educ"], "source.exp.raw.DIM_MUNIC_EDUC_2018": ["model.exp.dim_munic_educ"], "source.exp.raw.DIM_MUNIC_EDUC_2021": ["model.exp.dim_munic_educ"], "source.exp.raw.DIM_EDUC_BASICA_ESCOLA_2019": ["model.exp.dim_educ_bas_escola_19"], "source.exp.raw.DIM_EDUC_BASICA_ESCOLA_2020": ["model.exp.dim_educ_bas_escola_19"], "source.exp.raw.DIM_CENSO_EDUC_BASICA_GESTOR_2019": ["model.exp.dim_educ_bas_gestor_19"], "source.exp.raw.DIM_CENSO_EDUC_BASICA_GESTOR_2020": ["model.exp.dim_educ_bas_gestor_19"], "source.exp.raw.DIM_ESTADIC_2014": ["model.exp.dim_estadic_educ"], "source.exp.raw.DIM_ESTADIC_2018": ["model.exp.dim_estadic_educ"], "source.exp.raw.DIM_ESTADIC_2021": ["model.exp.dim_estadic_educ"], "source.exp.raw.DIM_FORMACAO_ADEQUADA": ["model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_15a_2019_2020", "model.exp.dim_educ_bas_docentes_15a_2019_2020", "model.exp.dim_educ_bas_docentes_15b_2014_to_2018", "model.exp.dim_educ_bas_docentes_15b_2019_2020", "model.exp.dim_educ_bas_docentes_15cd_2014_to_2018", "model.exp.dim_educ_bas_docentes_15cd_2019_2020"], "source.exp.raw.DIM_CURSO_SUPERIOR": ["model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_15a_2014_to_2018", "model.exp.dim_educ_bas_docentes_15a_2019_2020", "model.exp.dim_educ_bas_docentes_15a_2019_2020", "model.exp.dim_educ_bas_docentes_15a_2019_2020", "model.exp.dim_educ_bas_docentes_15b_2014_to_2018", "model.exp.dim_educ_bas_docentes_15b_2019_2020", "model.exp.dim_educ_bas_docentes_15cd_2014_to_2018", "model.exp.dim_educ_bas_docentes_15cd_2019_2020"], "source.exp.raw.DIM_COMPLEMENTACAO_PEDAGOGICA": ["model.exp.dim_educ_bas_docentes_15a_2019_2020"], "source.exp.raw.DIM_RAIS_PROFESSORES_PUBLICOS_GRADUADOS_2014_2022": ["model.exp.dim_rais_17"], "source.exp.raw.DIM_RAIS_PROFISSIONAIS_GRADUADOS_2014_2022": ["model.exp.dim_rais_17"], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2014": ["model.exp.dim_censo_educ_basica_desagregado_matricula_4"], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2015": ["model.exp.dim_censo_educ_basica_desagregado_matricula_4"], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2016": ["model.exp.dim_censo_educ_basica_desagregado_matricula_4"], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2017": ["model.exp.dim_censo_educ_basica_desagregado_matricula_4"], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2018": ["model.exp.dim_censo_educ_basica_desagregado_matricula_4"], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2019": ["model.exp.dim_censo_educ_basica_desagregado_matricula_4"], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_4_2020": ["model.exp.dim_censo_educ_basica_desagregado_matricula_4"], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2014": ["model.exp.matricula_ept_2014"], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2015": ["model.exp.matricula_ept_2015"], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2016": ["model.exp.matricula_ept_2016"], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2017": ["model.exp.matricula_ept_2017"], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2018": ["model.exp.matricula_ept_2018"], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2019": ["model.exp.matricula_ept_2019"], "source.exp.raw.DIM_CENSO_EDUC_BASICA_DESAGREGADO_MATRICULA_11_2020": ["model.exp.matricula_ept_2020"], "source.exp.raw.DIM_ANALFABETISMO_FUNCIONAL": ["model.exp.dim_analfabetismo_funcional"], "source.exp.raw.DIM_TCE_PE_MUNICIPIO": ["model.exp.dim_tce_pe_educacao"], "source.exp.raw.DIM_TCE_PE_DESPESAS_2014": ["model.exp.dim_tce_pe_educacao"], "source.exp.raw.DIM_TCE_PE_DESPESAS_2015": ["model.exp.dim_tce_pe_educacao"], "source.exp.raw.DIM_TCE_PE_DESPESAS_2016": ["model.exp.dim_tce_pe_educacao"], "source.exp.raw.DIM_TCE_PE_DESPESAS_2017": ["model.exp.dim_tce_pe_educacao"], "source.exp.raw.DIM_TCE_PE_DESPESAS_2018": ["model.exp.dim_tce_pe_educacao"], "source.exp.raw.DIM_TCE_PE_DESPESAS_2019": ["model.exp.dim_tce_pe_educacao"], "source.exp.raw.DIM_TCE_PE_DESPESAS_2020": ["model.exp.dim_tce_pe_educacao"], "source.exp.raw.DIM_TCE_PE_DESPESAS_2021": ["model.exp.dim_tce_pe_educacao"], "source.exp.raw.DIM_TCE_PE_DESPESAS_2022": ["model.exp.dim_tce_pe_educacao"], "source.exp.raw.DIM_TCE_PE_DESPESAS_2023": ["model.exp.dim_tce_pe_educacao"], "source.exp.raw.DIM_TCE_SP_DESPESAS_2014": ["model.exp.dim_tce_sp_educacao"], "source.exp.raw.DIM_TCE_SP_DESPESAS_2015": ["model.exp.dim_tce_sp_educacao"], "source.exp.raw.DIM_TCE_SP_DESPESAS_2016": ["model.exp.dim_tce_sp_educacao"], "source.exp.raw.DIM_TCE_SP_DESPESAS_2017": ["model.exp.dim_tce_sp_educacao"], "source.exp.raw.DIM_TCE_SP_DESPESAS_2018": ["model.exp.dim_tce_sp_educacao"], "source.exp.raw.DIM_TCE_SP_DESPESAS_2019": ["model.exp.dim_tce_sp_educacao"], "source.exp.raw.DIM_TCE_SP_DESPESAS_2020": ["model.exp.dim_tce_sp_educacao"], "source.exp.raw.DIM_TCE_SP_DESPESAS_2021": ["model.exp.dim_tce_sp_educacao"], "source.exp.raw.DIM_TCE_SP_DESPESAS_2022": ["model.exp.dim_tce_sp_educacao"], "source.exp.raw.DIM_TCE_SP_DESPESAS_2023": ["model.exp.dim_tce_sp_educacao"], "source.exp.raw.DIM_TCE_MG_EDUCACAO": ["model.exp.dim_tce_mg_educacao"], "source.exp.raw.DIM_TCE_ES_DESPESAS_2014": ["model.exp.dim_tce_es_educacao"], "source.exp.raw.DIM_TCE_ES_DESPESAS_2015": ["model.exp.dim_tce_es_educacao"], "source.exp.raw.DIM_TCE_ES_DESPESAS_2016": ["model.exp.dim_tce_es_educacao"], "source.exp.raw.DIM_TCE_ES_DESPESAS_2017": ["model.exp.dim_tce_es_educacao"], "source.exp.raw.DIM_TCE_ES_DESPESAS_2018": ["model.exp.dim_tce_es_educacao"], "source.exp.raw.DIM_TCE_ES_DESPESAS_2019": ["model.exp.dim_tce_es_educacao"], "source.exp.raw.DIM_TCE_ES_DESPESAS_2020": ["model.exp.dim_tce_es_educacao"], "source.exp.raw.DIM_TCE_ES_DESPESAS_2021": ["model.exp.dim_tce_es_educacao"], "source.exp.raw.DIM_TCE_ES_DESPESAS_2022": ["model.exp.dim_tce_es_educacao"], "source.exp.raw.DIM_TCE_ES_DESPESAS_2023": ["model.exp.dim_tce_es_educacao"], "source.exp.staging.FCT_ESCOLAS_PUBLICAS_INTEGRAL_6B": ["model.exp.fct_meta_seis"], "source.exp.staging.FCT_MATRICULAS_EPT": ["model.exp.fct_meta_onze"], "source.exp.staging.FCT_MATRICULAS_EJA_10A": ["model.exp.fct_meta_dez"], "source.exp.raw.DIM_ESTIMATIVA_DA_POPULACAO_POR_ANO_MUNICIPIO_IDADE": ["model.exp.fct_projecao_populacional"], "source.exp.raw.DIM_ESTADOS": ["model.exp.info_estados", "model.exp.info_municipios"], "source.exp.raw.DIM_ESTADOS_AREA": ["model.exp.info_estados"], "source.exp.raw.DIM_ESTADOS_CAPITAIS": ["model.exp.info_estados"], "source.exp.raw.DIM_ESTADOS_CENSO_ATLAS_2013": ["model.exp.info_estados"], "source.exp.raw.DIM_MUNICIPIOS_MALHA_2022": ["model.exp.info_municipios"]}, "group_map": {}}